

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Oct 22 22:39:03 2019

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2
    54                           	psect	text41,local,class=CODE,merge=1,delta=2
    55                           	psect	text42,local,class=CODE,merge=1,delta=2
    56                           	psect	text43,local,class=CODE,merge=1,delta=2
    57                           	psect	text44,local,class=CODE,merge=1,delta=2
    58                           	psect	text45,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text46,local,class=CODE,merge=1,delta=2
    60                           	psect	text47,local,class=CODE,merge=1,delta=2
    61                           	psect	text48,local,class=CODE,merge=1,delta=2
    62                           	psect	text49,local,class=CODE,merge=1,delta=2
    63                           	psect	text50,local,class=CODE,merge=1,delta=2
    64                           	psect	text51,local,class=CODE,merge=1,delta=2
    65                           	psect	text52,local,class=CODE,merge=1,delta=2
    66                           	psect	intentry,global,class=CODE,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	dabs	1,0x7E,2
    69  0000                     
    70                           ; Version 1.41
    71                           ; Generated 25/01/2017 GMT
    72                           ; 
    73                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC16F887 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104  0000                     	;# 
   105  0001                     	;# 
   106  0002                     	;# 
   107  0003                     	;# 
   108  0004                     	;# 
   109  0005                     	;# 
   110  0006                     	;# 
   111  0007                     	;# 
   112  0008                     	;# 
   113  0009                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000D                     	;# 
   118  000E                     	;# 
   119  000E                     	;# 
   120  000F                     	;# 
   121  0010                     	;# 
   122  0011                     	;# 
   123  0012                     	;# 
   124  0013                     	;# 
   125  0014                     	;# 
   126  0015                     	;# 
   127  0015                     	;# 
   128  0016                     	;# 
   129  0017                     	;# 
   130  0018                     	;# 
   131  0019                     	;# 
   132  001A                     	;# 
   133  001B                     	;# 
   134  001B                     	;# 
   135  001C                     	;# 
   136  001D                     	;# 
   137  001E                     	;# 
   138  001F                     	;# 
   139  0081                     	;# 
   140  0085                     	;# 
   141  0086                     	;# 
   142  0087                     	;# 
   143  0088                     	;# 
   144  0089                     	;# 
   145  008C                     	;# 
   146  008D                     	;# 
   147  008E                     	;# 
   148  008F                     	;# 
   149  0090                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0093                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0095                     	;# 
   157  0096                     	;# 
   158  0097                     	;# 
   159  0098                     	;# 
   160  0099                     	;# 
   161  009A                     	;# 
   162  009B                     	;# 
   163  009C                     	;# 
   164  009D                     	;# 
   165  009E                     	;# 
   166  009F                     	;# 
   167  0105                     	;# 
   168  0107                     	;# 
   169  0108                     	;# 
   170  0109                     	;# 
   171  010C                     	;# 
   172  010C                     	;# 
   173  010D                     	;# 
   174  010E                     	;# 
   175  010F                     	;# 
   176  0185                     	;# 
   177  0187                     	;# 
   178  0188                     	;# 
   179  0189                     	;# 
   180  018C                     	;# 
   181  018D                     	;# 
   182  0000                     	;# 
   183  0001                     	;# 
   184  0002                     	;# 
   185  0003                     	;# 
   186  0004                     	;# 
   187  0005                     	;# 
   188  0006                     	;# 
   189  0007                     	;# 
   190  0008                     	;# 
   191  0009                     	;# 
   192  000A                     	;# 
   193  000B                     	;# 
   194  000C                     	;# 
   195  000D                     	;# 
   196  000E                     	;# 
   197  000E                     	;# 
   198  000F                     	;# 
   199  0010                     	;# 
   200  0011                     	;# 
   201  0012                     	;# 
   202  0013                     	;# 
   203  0014                     	;# 
   204  0015                     	;# 
   205  0015                     	;# 
   206  0016                     	;# 
   207  0017                     	;# 
   208  0018                     	;# 
   209  0019                     	;# 
   210  001A                     	;# 
   211  001B                     	;# 
   212  001B                     	;# 
   213  001C                     	;# 
   214  001D                     	;# 
   215  001E                     	;# 
   216  001F                     	;# 
   217  0081                     	;# 
   218  0085                     	;# 
   219  0086                     	;# 
   220  0087                     	;# 
   221  0088                     	;# 
   222  0089                     	;# 
   223  008C                     	;# 
   224  008D                     	;# 
   225  008E                     	;# 
   226  008F                     	;# 
   227  0090                     	;# 
   228  0091                     	;# 
   229  0092                     	;# 
   230  0093                     	;# 
   231  0093                     	;# 
   232  0093                     	;# 
   233  0094                     	;# 
   234  0095                     	;# 
   235  0096                     	;# 
   236  0097                     	;# 
   237  0098                     	;# 
   238  0099                     	;# 
   239  009A                     	;# 
   240  009B                     	;# 
   241  009C                     	;# 
   242  009D                     	;# 
   243  009E                     	;# 
   244  009F                     	;# 
   245  0105                     	;# 
   246  0107                     	;# 
   247  0108                     	;# 
   248  0109                     	;# 
   249  010C                     	;# 
   250  010C                     	;# 
   251  010D                     	;# 
   252  010E                     	;# 
   253  010F                     	;# 
   254  0185                     	;# 
   255  0187                     	;# 
   256  0188                     	;# 
   257  0189                     	;# 
   258  018C                     	;# 
   259  018D                     	;# 
   260  0000                     	;# 
   261  0001                     	;# 
   262  0002                     	;# 
   263  0003                     	;# 
   264  0004                     	;# 
   265  0005                     	;# 
   266  0006                     	;# 
   267  0007                     	;# 
   268  0008                     	;# 
   269  0009                     	;# 
   270  000A                     	;# 
   271  000B                     	;# 
   272  000C                     	;# 
   273  000D                     	;# 
   274  000E                     	;# 
   275  000E                     	;# 
   276  000F                     	;# 
   277  0010                     	;# 
   278  0011                     	;# 
   279  0012                     	;# 
   280  0013                     	;# 
   281  0014                     	;# 
   282  0015                     	;# 
   283  0015                     	;# 
   284  0016                     	;# 
   285  0017                     	;# 
   286  0018                     	;# 
   287  0019                     	;# 
   288  001A                     	;# 
   289  001B                     	;# 
   290  001B                     	;# 
   291  001C                     	;# 
   292  001D                     	;# 
   293  001E                     	;# 
   294  001F                     	;# 
   295  0081                     	;# 
   296  0085                     	;# 
   297  0086                     	;# 
   298  0087                     	;# 
   299  0088                     	;# 
   300  0089                     	;# 
   301  008C                     	;# 
   302  008D                     	;# 
   303  008E                     	;# 
   304  008F                     	;# 
   305  0090                     	;# 
   306  0091                     	;# 
   307  0092                     	;# 
   308  0093                     	;# 
   309  0093                     	;# 
   310  0093                     	;# 
   311  0094                     	;# 
   312  0095                     	;# 
   313  0096                     	;# 
   314  0097                     	;# 
   315  0098                     	;# 
   316  0099                     	;# 
   317  009A                     	;# 
   318  009B                     	;# 
   319  009C                     	;# 
   320  009D                     	;# 
   321  009E                     	;# 
   322  009F                     	;# 
   323  0105                     	;# 
   324  0107                     	;# 
   325  0108                     	;# 
   326  0109                     	;# 
   327  010C                     	;# 
   328  010C                     	;# 
   329  010D                     	;# 
   330  010E                     	;# 
   331  010F                     	;# 
   332  0185                     	;# 
   333  0187                     	;# 
   334  0188                     	;# 
   335  0189                     	;# 
   336  018C                     	;# 
   337  018D                     	;# 
   338  0000                     	;# 
   339  0001                     	;# 
   340  0002                     	;# 
   341  0003                     	;# 
   342  0004                     	;# 
   343  0005                     	;# 
   344  0006                     	;# 
   345  0007                     	;# 
   346  0008                     	;# 
   347  0009                     	;# 
   348  000A                     	;# 
   349  000B                     	;# 
   350  000C                     	;# 
   351  000D                     	;# 
   352  000E                     	;# 
   353  000E                     	;# 
   354  000F                     	;# 
   355  0010                     	;# 
   356  0011                     	;# 
   357  0012                     	;# 
   358  0013                     	;# 
   359  0014                     	;# 
   360  0015                     	;# 
   361  0015                     	;# 
   362  0016                     	;# 
   363  0017                     	;# 
   364  0018                     	;# 
   365  0019                     	;# 
   366  001A                     	;# 
   367  001B                     	;# 
   368  001B                     	;# 
   369  001C                     	;# 
   370  001D                     	;# 
   371  001E                     	;# 
   372  001F                     	;# 
   373  0081                     	;# 
   374  0085                     	;# 
   375  0086                     	;# 
   376  0087                     	;# 
   377  0088                     	;# 
   378  0089                     	;# 
   379  008C                     	;# 
   380  008D                     	;# 
   381  008E                     	;# 
   382  008F                     	;# 
   383  0090                     	;# 
   384  0091                     	;# 
   385  0092                     	;# 
   386  0093                     	;# 
   387  0093                     	;# 
   388  0093                     	;# 
   389  0094                     	;# 
   390  0095                     	;# 
   391  0096                     	;# 
   392  0097                     	;# 
   393  0098                     	;# 
   394  0099                     	;# 
   395  009A                     	;# 
   396  009B                     	;# 
   397  009C                     	;# 
   398  009D                     	;# 
   399  009E                     	;# 
   400  009F                     	;# 
   401  0105                     	;# 
   402  0107                     	;# 
   403  0108                     	;# 
   404  0109                     	;# 
   405  010C                     	;# 
   406  010C                     	;# 
   407  010D                     	;# 
   408  010E                     	;# 
   409  010F                     	;# 
   410  0185                     	;# 
   411  0187                     	;# 
   412  0188                     	;# 
   413  0189                     	;# 
   414  018C                     	;# 
   415  018D                     	;# 
   416  0000                     	;# 
   417  0001                     	;# 
   418  0002                     	;# 
   419  0003                     	;# 
   420  0004                     	;# 
   421  0005                     	;# 
   422  0006                     	;# 
   423  0007                     	;# 
   424  0008                     	;# 
   425  0009                     	;# 
   426  000A                     	;# 
   427  000B                     	;# 
   428  000C                     	;# 
   429  000D                     	;# 
   430  000E                     	;# 
   431  000E                     	;# 
   432  000F                     	;# 
   433  0010                     	;# 
   434  0011                     	;# 
   435  0012                     	;# 
   436  0013                     	;# 
   437  0014                     	;# 
   438  0015                     	;# 
   439  0015                     	;# 
   440  0016                     	;# 
   441  0017                     	;# 
   442  0018                     	;# 
   443  0019                     	;# 
   444  001A                     	;# 
   445  001B                     	;# 
   446  001B                     	;# 
   447  001C                     	;# 
   448  001D                     	;# 
   449  001E                     	;# 
   450  001F                     	;# 
   451  0081                     	;# 
   452  0085                     	;# 
   453  0086                     	;# 
   454  0087                     	;# 
   455  0088                     	;# 
   456  0089                     	;# 
   457  008C                     	;# 
   458  008D                     	;# 
   459  008E                     	;# 
   460  008F                     	;# 
   461  0090                     	;# 
   462  0091                     	;# 
   463  0092                     	;# 
   464  0093                     	;# 
   465  0093                     	;# 
   466  0093                     	;# 
   467  0094                     	;# 
   468  0095                     	;# 
   469  0096                     	;# 
   470  0097                     	;# 
   471  0098                     	;# 
   472  0099                     	;# 
   473  009A                     	;# 
   474  009B                     	;# 
   475  009C                     	;# 
   476  009D                     	;# 
   477  009E                     	;# 
   478  009F                     	;# 
   479  0105                     	;# 
   480  0107                     	;# 
   481  0108                     	;# 
   482  0109                     	;# 
   483  010C                     	;# 
   484  010C                     	;# 
   485  010D                     	;# 
   486  010E                     	;# 
   487  010F                     	;# 
   488  0185                     	;# 
   489  0187                     	;# 
   490  0188                     	;# 
   491  0189                     	;# 
   492  018C                     	;# 
   493  018D                     	;# 
   494  0000                     	;# 
   495  0001                     	;# 
   496  0002                     	;# 
   497  0003                     	;# 
   498  0004                     	;# 
   499  0005                     	;# 
   500  0006                     	;# 
   501  0007                     	;# 
   502  0008                     	;# 
   503  0009                     	;# 
   504  000A                     	;# 
   505  000B                     	;# 
   506  000C                     	;# 
   507  000D                     	;# 
   508  000E                     	;# 
   509  000E                     	;# 
   510  000F                     	;# 
   511  0010                     	;# 
   512  0011                     	;# 
   513  0012                     	;# 
   514  0013                     	;# 
   515  0014                     	;# 
   516  0015                     	;# 
   517  0015                     	;# 
   518  0016                     	;# 
   519  0017                     	;# 
   520  0018                     	;# 
   521  0019                     	;# 
   522  001A                     	;# 
   523  001B                     	;# 
   524  001B                     	;# 
   525  001C                     	;# 
   526  001D                     	;# 
   527  001E                     	;# 
   528  001F                     	;# 
   529  0081                     	;# 
   530  0085                     	;# 
   531  0086                     	;# 
   532  0087                     	;# 
   533  0088                     	;# 
   534  0089                     	;# 
   535  008C                     	;# 
   536  008D                     	;# 
   537  008E                     	;# 
   538  008F                     	;# 
   539  0090                     	;# 
   540  0091                     	;# 
   541  0092                     	;# 
   542  0093                     	;# 
   543  0093                     	;# 
   544  0093                     	;# 
   545  0094                     	;# 
   546  0095                     	;# 
   547  0096                     	;# 
   548  0097                     	;# 
   549  0098                     	;# 
   550  0099                     	;# 
   551  009A                     	;# 
   552  009B                     	;# 
   553  009C                     	;# 
   554  009D                     	;# 
   555  009E                     	;# 
   556  009F                     	;# 
   557  0105                     	;# 
   558  0107                     	;# 
   559  0108                     	;# 
   560  0109                     	;# 
   561  010C                     	;# 
   562  010C                     	;# 
   563  010D                     	;# 
   564  010E                     	;# 
   565  010F                     	;# 
   566  0185                     	;# 
   567  0187                     	;# 
   568  0188                     	;# 
   569  0189                     	;# 
   570  018C                     	;# 
   571  018D                     	;# 
   572  0000                     	;# 
   573  0001                     	;# 
   574  0002                     	;# 
   575  0003                     	;# 
   576  0004                     	;# 
   577  0005                     	;# 
   578  0006                     	;# 
   579  0007                     	;# 
   580  0008                     	;# 
   581  0009                     	;# 
   582  000A                     	;# 
   583  000B                     	;# 
   584  000C                     	;# 
   585  000D                     	;# 
   586  000E                     	;# 
   587  000E                     	;# 
   588  000F                     	;# 
   589  0010                     	;# 
   590  0011                     	;# 
   591  0012                     	;# 
   592  0013                     	;# 
   593  0014                     	;# 
   594  0015                     	;# 
   595  0015                     	;# 
   596  0016                     	;# 
   597  0017                     	;# 
   598  0018                     	;# 
   599  0019                     	;# 
   600  001A                     	;# 
   601  001B                     	;# 
   602  001B                     	;# 
   603  001C                     	;# 
   604  001D                     	;# 
   605  001E                     	;# 
   606  001F                     	;# 
   607  0081                     	;# 
   608  0085                     	;# 
   609  0086                     	;# 
   610  0087                     	;# 
   611  0088                     	;# 
   612  0089                     	;# 
   613  008C                     	;# 
   614  008D                     	;# 
   615  008E                     	;# 
   616  008F                     	;# 
   617  0090                     	;# 
   618  0091                     	;# 
   619  0092                     	;# 
   620  0093                     	;# 
   621  0093                     	;# 
   622  0093                     	;# 
   623  0094                     	;# 
   624  0095                     	;# 
   625  0096                     	;# 
   626  0097                     	;# 
   627  0098                     	;# 
   628  0099                     	;# 
   629  009A                     	;# 
   630  009B                     	;# 
   631  009C                     	;# 
   632  009D                     	;# 
   633  009E                     	;# 
   634  009F                     	;# 
   635  0105                     	;# 
   636  0107                     	;# 
   637  0108                     	;# 
   638  0109                     	;# 
   639  010C                     	;# 
   640  010C                     	;# 
   641  010D                     	;# 
   642  010E                     	;# 
   643  010F                     	;# 
   644  0185                     	;# 
   645  0187                     	;# 
   646  0188                     	;# 
   647  0189                     	;# 
   648  018C                     	;# 
   649  018D                     	;# 
   650  0000                     	;# 
   651  0001                     	;# 
   652  0002                     	;# 
   653  0003                     	;# 
   654  0004                     	;# 
   655  0005                     	;# 
   656  0006                     	;# 
   657  0007                     	;# 
   658  0008                     	;# 
   659  0009                     	;# 
   660  000A                     	;# 
   661  000B                     	;# 
   662  000C                     	;# 
   663  000D                     	;# 
   664  000E                     	;# 
   665  000E                     	;# 
   666  000F                     	;# 
   667  0010                     	;# 
   668  0011                     	;# 
   669  0012                     	;# 
   670  0013                     	;# 
   671  0014                     	;# 
   672  0015                     	;# 
   673  0015                     	;# 
   674  0016                     	;# 
   675  0017                     	;# 
   676  0018                     	;# 
   677  0019                     	;# 
   678  001A                     	;# 
   679  001B                     	;# 
   680  001B                     	;# 
   681  001C                     	;# 
   682  001D                     	;# 
   683  001E                     	;# 
   684  001F                     	;# 
   685  0081                     	;# 
   686  0085                     	;# 
   687  0086                     	;# 
   688  0087                     	;# 
   689  0088                     	;# 
   690  0089                     	;# 
   691  008C                     	;# 
   692  008D                     	;# 
   693  008E                     	;# 
   694  008F                     	;# 
   695  0090                     	;# 
   696  0091                     	;# 
   697  0092                     	;# 
   698  0093                     	;# 
   699  0093                     	;# 
   700  0093                     	;# 
   701  0094                     	;# 
   702  0095                     	;# 
   703  0096                     	;# 
   704  0097                     	;# 
   705  0098                     	;# 
   706  0099                     	;# 
   707  009A                     	;# 
   708  009B                     	;# 
   709  009C                     	;# 
   710  009D                     	;# 
   711  009E                     	;# 
   712  009F                     	;# 
   713  0105                     	;# 
   714  0107                     	;# 
   715  0108                     	;# 
   716  0109                     	;# 
   717  010C                     	;# 
   718  010C                     	;# 
   719  010D                     	;# 
   720  010E                     	;# 
   721  010F                     	;# 
   722  0185                     	;# 
   723  0187                     	;# 
   724  0188                     	;# 
   725  0189                     	;# 
   726  018C                     	;# 
   727  018D                     	;# 
   728  0000                     	;# 
   729  0001                     	;# 
   730  0002                     	;# 
   731  0003                     	;# 
   732  0004                     	;# 
   733  0005                     	;# 
   734  0006                     	;# 
   735  0007                     	;# 
   736  0008                     	;# 
   737  0009                     	;# 
   738  000A                     	;# 
   739  000B                     	;# 
   740  000C                     	;# 
   741  000D                     	;# 
   742  000E                     	;# 
   743  000E                     	;# 
   744  000F                     	;# 
   745  0010                     	;# 
   746  0011                     	;# 
   747  0012                     	;# 
   748  0013                     	;# 
   749  0014                     	;# 
   750  0015                     	;# 
   751  0015                     	;# 
   752  0016                     	;# 
   753  0017                     	;# 
   754  0018                     	;# 
   755  0019                     	;# 
   756  001A                     	;# 
   757  001B                     	;# 
   758  001B                     	;# 
   759  001C                     	;# 
   760  001D                     	;# 
   761  001E                     	;# 
   762  001F                     	;# 
   763  0081                     	;# 
   764  0085                     	;# 
   765  0086                     	;# 
   766  0087                     	;# 
   767  0088                     	;# 
   768  0089                     	;# 
   769  008C                     	;# 
   770  008D                     	;# 
   771  008E                     	;# 
   772  008F                     	;# 
   773  0090                     	;# 
   774  0091                     	;# 
   775  0092                     	;# 
   776  0093                     	;# 
   777  0093                     	;# 
   778  0093                     	;# 
   779  0094                     	;# 
   780  0095                     	;# 
   781  0096                     	;# 
   782  0097                     	;# 
   783  0098                     	;# 
   784  0099                     	;# 
   785  009A                     	;# 
   786  009B                     	;# 
   787  009C                     	;# 
   788  009D                     	;# 
   789  009E                     	;# 
   790  009F                     	;# 
   791  0105                     	;# 
   792  0107                     	;# 
   793  0108                     	;# 
   794  0109                     	;# 
   795  010C                     	;# 
   796  010C                     	;# 
   797  010D                     	;# 
   798  010E                     	;# 
   799  010F                     	;# 
   800  0185                     	;# 
   801  0187                     	;# 
   802  0188                     	;# 
   803  0189                     	;# 
   804  018C                     	;# 
   805  018D                     	;# 
   806  0019                     _TXREG	set	25
   807  0018                     _RCSTAbits	set	24
   808  0001                     _TMR0	set	1
   809  000B                     _INTCONbits	set	11
   810                           
   811                           	psect	text0
   812  0000                     __ptext0:	
   813  0008                     _LCD	set	8
   814  0007                     _PORTCbits	set	7
   815  001A                     _RCREG	set	26
   816  0006                     _PORTBbits	set	6
   817  0017                     _CCP1CON	set	23
   818  0006                     _PORTB	set	6
   819  0065                     _RCIF	set	101
   820  0099                     _SPBRbits	set	153
   821  008C                     _PIE1bits	set	140
   822  0094                     _SSPSTATbits	set	148
   823  0098                     _TXSTAbits	set	152
   824  0081                     _OPTION_REGbits	set	129
   825  0085                     _TRISAbits	set	133
   826  0088                     _TRISD	set	136
   827  0087                     _TRISCbits	set	135
   828  0086                     _TRISB	set	134
   829  0187                     _BAUDCTLbits	set	391
   830  0188                     _ANSEL	set	392
   831  0189                     _ANSELH	set	393
   832                           
   833                           	psect	strings
   834  1000                     __pstrings:	
   835  1000                     stringtab:	
   836  1000                     __stringtab:	
   837                           
   838                           ;	String table - string pointers are 2 bytes each
   839  1000  1BFF               	btfsc	btemp+1,7
   840  1001  280A               	ljmp	stringcode
   841  1002  1383               	bcf	3,7
   842  1003  187F               	btfsc	btemp+1,0
   843  1004  1783               	bsf	3,7
   844  1005  0800               	movf	0,w
   845  1006  0A84               	incf	4,f
   846  1007  1903               	skipnz
   847  1008  0AFF               	incf	btemp+1,f
   848  1009  0008               	return
   849  100A                     stringcode:	
   850  100A  087F               	movf	btemp+1,w
   851  100B  397F               	andlw	127
   852  100C  008A               	movwf	10
   853  100D  0804               	movf	4,w
   854  100E  0A84               	incf	4,f
   855  100F  1903               	skipnz
   856  1010  0AFF               	incf	btemp+1,f
   857  1011  0082               	movwf	2
   858  1012                     __stringbase:	
   859  1012                     __end_of__stringtab:	
   860                           
   861                           	psect	stringtext
   862  0500                     __pstringtext:	
   863  0500                     STR_98:	
   864  0500  3441               	retlw	65	;'A'
   865  0501  3454               	retlw	84	;'T'
   866  0502  342B               	retlw	43	;'+'
   867  0503  3450               	retlw	80	;'P'
   868  0504  3441               	retlw	65	;'A'
   869  0505  3449               	retlw	73	;'I'
   870  0506  3452               	retlw	82	;'R'
   871  0507  343D               	retlw	61	;'='
   872  0508  3433               	retlw	51	;'3'
   873  0509  3444               	retlw	68	;'D'
   874  050A  3442               	retlw	66	;'B'
   875  050B  3441               	retlw	65	;'A'
   876  050C  342C               	retlw	44	;','
   877  050D  3438               	retlw	56	;'8'
   878  050E  3438               	retlw	56	;'8'
   879  050F  342C               	retlw	44	;','
   880  0510  3436               	retlw	54	;'6'
   881  0511  3438               	retlw	56	;'8'
   882  0512  3437               	retlw	55	;'7'
   883  0513  3441               	retlw	65	;'A'
   884  0514  3437               	retlw	55	;'7'
   885  0515  3434               	retlw	52	;'4'
   886  0516  342C               	retlw	44	;','
   887  0517  3432               	retlw	50	;'2'
   888  0518  3430               	retlw	48	;'0'
   889  0519  340D               	retlw	13
   890  051A  340A               	retlw	10
   891  051B  3400               	retlw	0
   892  051C                     STR_104:	
   893  051C  3441               	retlw	65	;'A'
   894  051D  3454               	retlw	84	;'T'
   895  051E  342B               	retlw	43	;'+'
   896  051F  3450               	retlw	80	;'P'
   897  0520  3441               	retlw	65	;'A'
   898  0521  3449               	retlw	73	;'I'
   899  0522  3452               	retlw	82	;'R'
   900  0523  343D               	retlw	61	;'='
   901  0524  3439               	retlw	57	;'9'
   902  0525  3438               	retlw	56	;'8'
   903  0526  3444               	retlw	68	;'D'
   904  0527  3433               	retlw	51	;'3'
   905  0528  342C               	retlw	44	;','
   906  0529  3442               	retlw	66	;'B'
   907  052A  3431               	retlw	49	;'1'
   908  052B  342C               	retlw	44	;','
   909  052C  3446               	retlw	70	;'F'
   910  052D  3444               	retlw	68	;'D'
   911  052E  3434               	retlw	52	;'4'
   912  052F  3433               	retlw	51	;'3'
   913  0530  3445               	retlw	69	;'E'
   914  0531  3439               	retlw	57	;'9'
   915  0532  342C               	retlw	44	;','
   916  0533  3432               	retlw	50	;'2'
   917  0534  3430               	retlw	48	;'0'
   918  0535  340D               	retlw	13
   919  0536  340A               	retlw	10
   920  0537  3400               	retlw	0
   921  0538                     STR_101:	
   922  0538  3441               	retlw	65	;'A'
   923  0539  3454               	retlw	84	;'T'
   924  053A  342B               	retlw	43	;'+'
   925  053B  3450               	retlw	80	;'P'
   926  053C  3441               	retlw	65	;'A'
   927  053D  3449               	retlw	73	;'I'
   928  053E  3452               	retlw	82	;'R'
   929  053F  343D               	retlw	61	;'='
   930  0540  3430               	retlw	48	;'0'
   931  0541  3430               	retlw	48	;'0'
   932  0542  3431               	retlw	49	;'1'
   933  0543  3433               	retlw	51	;'3'
   934  0544  342C               	retlw	44	;','
   935  0545  3445               	retlw	69	;'E'
   936  0546  3446               	retlw	70	;'F'
   937  0547  342C               	retlw	44	;','
   938  0548  3430               	retlw	48	;'0'
   939  0549  3430               	retlw	48	;'0'
   940  054A  3431               	retlw	49	;'1'
   941  054B  3434               	retlw	52	;'4'
   942  054C  3442               	retlw	66	;'B'
   943  054D  3442               	retlw	66	;'B'
   944  054E  342C               	retlw	44	;','
   945  054F  3432               	retlw	50	;'2'
   946  0550  3430               	retlw	48	;'0'
   947  0551  340D               	retlw	13
   948  0552  340A               	retlw	10
   949  0553  3400               	retlw	0
   950  0554                     STR_100:	
   951  0554  3441               	retlw	65	;'A'
   952  0555  3454               	retlw	84	;'T'
   953  0556  342B               	retlw	43	;'+'
   954  0557  3442               	retlw	66	;'B'
   955  0558  3449               	retlw	73	;'I'
   956  0559  344E               	retlw	78	;'N'
   957  055A  3444               	retlw	68	;'D'
   958  055B  343D               	retlw	61	;'='
   959  055C  3433               	retlw	51	;'3'
   960  055D  3444               	retlw	68	;'D'
   961  055E  3442               	retlw	66	;'B'
   962  055F  3441               	retlw	65	;'A'
   963  0560  342C               	retlw	44	;','
   964  0561  3438               	retlw	56	;'8'
   965  0562  3438               	retlw	56	;'8'
   966  0563  342C               	retlw	44	;','
   967  0564  3436               	retlw	54	;'6'
   968  0565  3438               	retlw	56	;'8'
   969  0566  3437               	retlw	55	;'7'
   970  0567  3441               	retlw	65	;'A'
   971  0568  3437               	retlw	55	;'7'
   972  0569  3434               	retlw	52	;'4'
   973  056A  340D               	retlw	13
   974  056B  340A               	retlw	10
   975  056C  3400               	retlw	0
   976  056D                     STR_99:	
   977  056D  3441               	retlw	65	;'A'
   978  056E  3454               	retlw	84	;'T'
   979  056F  342B               	retlw	43	;'+'
   980  0570  344C               	retlw	76	;'L'
   981  0571  3449               	retlw	73	;'I'
   982  0572  344E               	retlw	78	;'N'
   983  0573  344B               	retlw	75	;'K'
   984  0574  343D               	retlw	61	;'='
   985  0575  3433               	retlw	51	;'3'
   986  0576  3444               	retlw	68	;'D'
   987  0577  3442               	retlw	66	;'B'
   988  0578  3441               	retlw	65	;'A'
   989  0579  342C               	retlw	44	;','
   990  057A  3438               	retlw	56	;'8'
   991  057B  3438               	retlw	56	;'8'
   992  057C  342C               	retlw	44	;','
   993  057D  3436               	retlw	54	;'6'
   994  057E  3438               	retlw	56	;'8'
   995  057F  3437               	retlw	55	;'7'
   996  0580  3441               	retlw	65	;'A'
   997  0581  3437               	retlw	55	;'7'
   998  0582  3434               	retlw	52	;'4'
   999  0583  340D               	retlw	13
  1000  0584  340A               	retlw	10
  1001  0585  3400               	retlw	0
  1002  0586                     STR_106:	
  1003  0586  3441               	retlw	65	;'A'
  1004  0587  3454               	retlw	84	;'T'
  1005  0588  342B               	retlw	43	;'+'
  1006  0589  3442               	retlw	66	;'B'
  1007  058A  3449               	retlw	73	;'I'
  1008  058B  344E               	retlw	78	;'N'
  1009  058C  3444               	retlw	68	;'D'
  1010  058D  343D               	retlw	61	;'='
  1011  058E  3439               	retlw	57	;'9'
  1012  058F  3438               	retlw	56	;'8'
  1013  0590  3444               	retlw	68	;'D'
  1014  0591  3433               	retlw	51	;'3'
  1015  0592  342C               	retlw	44	;','
  1016  0593  3442               	retlw	66	;'B'
  1017  0594  3431               	retlw	49	;'1'
  1018  0595  342C               	retlw	44	;','
  1019  0596  3446               	retlw	70	;'F'
  1020  0597  3444               	retlw	68	;'D'
  1021  0598  3434               	retlw	52	;'4'
  1022  0599  3433               	retlw	51	;'3'
  1023  059A  3445               	retlw	69	;'E'
  1024  059B  3439               	retlw	57	;'9'
  1025  059C  340D               	retlw	13
  1026  059D  340A               	retlw	10
  1027  059E  3400               	retlw	0
  1028  059F                     STR_105:	
  1029  059F  3441               	retlw	65	;'A'
  1030  05A0  3454               	retlw	84	;'T'
  1031  05A1  342B               	retlw	43	;'+'
  1032  05A2  344C               	retlw	76	;'L'
  1033  05A3  3449               	retlw	73	;'I'
  1034  05A4  344E               	retlw	78	;'N'
  1035  05A5  344B               	retlw	75	;'K'
  1036  05A6  343D               	retlw	61	;'='
  1037  05A7  3439               	retlw	57	;'9'
  1038  05A8  3438               	retlw	56	;'8'
  1039  05A9  3444               	retlw	68	;'D'
  1040  05AA  3433               	retlw	51	;'3'
  1041  05AB  342C               	retlw	44	;','
  1042  05AC  3442               	retlw	66	;'B'
  1043  05AD  3431               	retlw	49	;'1'
  1044  05AE  342C               	retlw	44	;','
  1045  05AF  3446               	retlw	70	;'F'
  1046  05B0  3444               	retlw	68	;'D'
  1047  05B1  3434               	retlw	52	;'4'
  1048  05B2  3433               	retlw	51	;'3'
  1049  05B3  3445               	retlw	69	;'E'
  1050  05B4  3439               	retlw	57	;'9'
  1051  05B5  340D               	retlw	13
  1052  05B6  340A               	retlw	10
  1053  05B7  3400               	retlw	0
  1054  05B8                     STR_103:	
  1055  05B8  3441               	retlw	65	;'A'
  1056  05B9  3454               	retlw	84	;'T'
  1057  05BA  342B               	retlw	43	;'+'
  1058  05BB  3442               	retlw	66	;'B'
  1059  05BC  3449               	retlw	73	;'I'
  1060  05BD  344E               	retlw	78	;'N'
  1061  05BE  3444               	retlw	68	;'D'
  1062  05BF  343D               	retlw	61	;'='
  1063  05C0  3430               	retlw	48	;'0'
  1064  05C1  3430               	retlw	48	;'0'
  1065  05C2  3431               	retlw	49	;'1'
  1066  05C3  3433               	retlw	51	;'3'
  1067  05C4  342C               	retlw	44	;','
  1068  05C5  3445               	retlw	69	;'E'
  1069  05C6  3446               	retlw	70	;'F'
  1070  05C7  342C               	retlw	44	;','
  1071  05C8  3430               	retlw	48	;'0'
  1072  05C9  3430               	retlw	48	;'0'
  1073  05CA  3431               	retlw	49	;'1'
  1074  05CB  3434               	retlw	52	;'4'
  1075  05CC  3442               	retlw	66	;'B'
  1076  05CD  3442               	retlw	66	;'B'
  1077  05CE  340D               	retlw	13
  1078  05CF  340A               	retlw	10
  1079  05D0  3400               	retlw	0
  1080  05D1                     STR_102:	
  1081  05D1  3441               	retlw	65	;'A'
  1082  05D2  3454               	retlw	84	;'T'
  1083  05D3  342B               	retlw	43	;'+'
  1084  05D4  344C               	retlw	76	;'L'
  1085  05D5  3449               	retlw	73	;'I'
  1086  05D6  344E               	retlw	78	;'N'
  1087  05D7  344B               	retlw	75	;'K'
  1088  05D8  343D               	retlw	61	;'='
  1089  05D9  3430               	retlw	48	;'0'
  1090  05DA  3430               	retlw	48	;'0'
  1091  05DB  3431               	retlw	49	;'1'
  1092  05DC  3433               	retlw	51	;'3'
  1093  05DD  342C               	retlw	44	;','
  1094  05DE  3445               	retlw	69	;'E'
  1095  05DF  3446               	retlw	70	;'F'
  1096  05E0  342C               	retlw	44	;','
  1097  05E1  3430               	retlw	48	;'0'
  1098  05E2  3430               	retlw	48	;'0'
  1099  05E3  3431               	retlw	49	;'1'
  1100  05E4  3434               	retlw	52	;'4'
  1101  05E5  3442               	retlw	66	;'B'
  1102  05E6  3442               	retlw	66	;'B'
  1103  05E7  340D               	retlw	13
  1104  05E8  340A               	retlw	10
  1105  05E9  3400               	retlw	0
  1106  05EA                     STR_96:	
  1107  05EA  3441               	retlw	65	;'A'
  1108  05EB  3454               	retlw	84	;'T'
  1109  05EC  342B               	retlw	43	;'+'
  1110  05ED  344E               	retlw	78	;'N'
  1111  05EE  3441               	retlw	65	;'A'
  1112  05EF  344D               	retlw	77	;'M'
  1113  05F0  3445               	retlw	69	;'E'
  1114  05F1  343D               	retlw	61	;'='
  1115  05F2  3422               	retlw	34	;'"'
  1116  05F3  3445               	retlw	69	;'E'
  1117  05F4  3473               	retlw	115	;'s'
  1118  05F5  3463               	retlw	99	;'c'
  1119  05F6  3472               	retlw	114	;'r'
  1120  05F7  3461               	retlw	97	;'a'
  1121  05F8  3476               	retlw	118	;'v'
  1122  05F9  346F               	retlw	111	;'o'
  1123  05FA  3422               	retlw	34	;'"'
  1124  05FB  340D               	retlw	13
  1125  05FC  340A               	retlw	10
  1126  05FD  3400               	retlw	0
  1127  05FE                     STR_83:	
  1128  05FE  3441               	retlw	65	;'A'
  1129  05FF  3454               	retlw	84	;'T'
  1130  0600  342B               	retlw	43	;'+'
  1131  0601  3455               	retlw	85	;'U'
  1132  0602  3441               	retlw	65	;'A'
  1133  0603  3452               	retlw	82	;'R'
  1134  0604  3454               	retlw	84	;'T'
  1135  0605  343D               	retlw	61	;'='
  1136  0606  3439               	retlw	57	;'9'
  1137  0607  3436               	retlw	54	;'6'
  1138  0608  3430               	retlw	48	;'0'
  1139  0609  3430               	retlw	48	;'0'
  1140  060A  342C               	retlw	44	;','
  1141  060B  3430               	retlw	48	;'0'
  1142  060C  342C               	retlw	44	;','
  1143  060D  3430               	retlw	48	;'0'
  1144  060E  340D               	retlw	13
  1145  060F  340A               	retlw	10
  1146  0610  3400               	retlw	0
  1147  0611                     STR_71:	
  1148  0611  3447               	retlw	71	;'G'
  1149  0612  3441               	retlw	65	;'A'
  1150  0613  3442               	retlw	66	;'B'
  1151  0614  3452               	retlw	82	;'R'
  1152  0615  3449               	retlw	73	;'I'
  1153  0616  3445               	retlw	69	;'E'
  1154  0617  344C               	retlw	76	;'L'
  1155  0618  3420               	retlw	32	;' '
  1156  0619  3447               	retlw	71	;'G'
  1157  061A  3445               	retlw	69	;'E'
  1158  061B  344E               	retlw	78	;'N'
  1159  061C  3455               	retlw	85	;'U'
  1160  061D  3420               	retlw	32	;' '
  1161  061E  3420               	retlw	32	;' '
  1162  061F  3420               	retlw	32	;' '
  1163  0620  3420               	retlw	32	;' '
  1164  0621  3420               	retlw	32	;' '
  1165  0622  3400               	retlw	0
  1166  0623                     STR_115:	
  1167  0623  3420               	retlw	32	;' '
  1168  0624  3420               	retlw	32	;' '
  1169  0625  3420               	retlw	32	;' '
  1170  0626  3420               	retlw	32	;' '
  1171  0627  3454               	retlw	84	;'T'
  1172  0628  3452               	retlw	82	;'R'
  1173  0629  344F               	retlw	79	;'O'
  1174  062A  3443               	retlw	67	;'C'
  1175  062B  3441               	retlw	65	;'A'
  1176  062C  344E               	retlw	78	;'N'
  1177  062D  3444               	retlw	68	;'D'
  1178  062E  344F               	retlw	79	;'O'
  1179  062F  3420               	retlw	32	;' '
  1180  0630  3420               	retlw	32	;' '
  1181  0631  3420               	retlw	32	;' '
  1182  0632  3420               	retlw	32	;' '
  1183  0633  3400               	retlw	0
  1184  0634                     STR_114:	
  1185  0634  3420               	retlw	32	;' '
  1186  0635  3420               	retlw	32	;' '
  1187  0636  3420               	retlw	32	;' '
  1188  0637  3420               	retlw	32	;' '
  1189  0638  3444               	retlw	68	;'D'
  1190  0639  3445               	retlw	69	;'E'
  1191  063A  3420               	retlw	32	;' '
  1192  063B  3444               	retlw	68	;'D'
  1193  063C  3441               	retlw	65	;'A'
  1194  063D  3444               	retlw	68	;'D'
  1195  063E  344F               	retlw	79	;'O'
  1196  063F  3453               	retlw	83	;'S'
  1197  0640  3420               	retlw	32	;' '
  1198  0641  3420               	retlw	32	;' '
  1199  0642  3420               	retlw	32	;' '
  1200  0643  3420               	retlw	32	;' '
  1201  0644  3400               	retlw	0
  1202  0645                     STR_116:	
  1203  0645  3420               	retlw	32	;' '
  1204  0646  3420               	retlw	32	;' '
  1205  0647  3420               	retlw	32	;' '
  1206  0648  3449               	retlw	73	;'I'
  1207  0649  344E               	retlw	78	;'N'
  1208  064A  3446               	retlw	70	;'F'
  1209  064B  344F               	retlw	79	;'O'
  1210  064C  3452               	retlw	82	;'R'
  1211  064D  344D               	retlw	77	;'M'
  1212  064E  3441               	retlw	65	;'A'
  1213  064F  3443               	retlw	67	;'C'
  1214  0650  3441               	retlw	65	;'A'
  1215  0651  344F               	retlw	79	;'O'
  1216  0652  3420               	retlw	32	;' '
  1217  0653  3420               	retlw	32	;' '
  1218  0654  3420               	retlw	32	;' '
  1219  0655  3400               	retlw	0
  1220  0656                     STR_122:	
  1221  0656  3444               	retlw	68	;'D'
  1222  0657  3445               	retlw	69	;'E'
  1223  0658  3453               	retlw	83	;'S'
  1224  0659  3443               	retlw	67	;'C'
  1225  065A  344F               	retlw	79	;'O'
  1226  065B  344E               	retlw	78	;'N'
  1227  065C  3445               	retlw	69	;'E'
  1228  065D  3443               	retlw	67	;'C'
  1229  065E  3454               	retlw	84	;'T'
  1230  065F  3441               	retlw	65	;'A'
  1231  0660  344E               	retlw	78	;'N'
  1232  0661  3444               	retlw	68	;'D'
  1233  0662  344F               	retlw	79	;'O'
  1234  0663  3420               	retlw	32	;' '
  1235  0664  3420               	retlw	32	;' '
  1236  0665  3420               	retlw	32	;' '
  1237  0666  3400               	retlw	0
  1238  0667                     STR_120:	
  1239  0667  3420               	retlw	32	;' '
  1240  0668  3450               	retlw	80	;'P'
  1241  0669  3441               	retlw	65	;'A'
  1242  066A  3452               	retlw	82	;'R'
  1243  066B  3445               	retlw	69	;'E'
  1244  066C  3441               	retlw	65	;'A'
  1245  066D  3452               	retlw	82	;'R'
  1246  066E  3420               	retlw	32	;' '
  1247  066F  3443               	retlw	67	;'C'
  1248  0670  344F               	retlw	79	;'O'
  1249  0671  344D               	retlw	77	;'M'
  1250  0672  3420               	retlw	32	;' '
  1251  0673  3449               	retlw	73	;'I'
  1252  0674  3450               	retlw	80	;'P'
  1253  0675  3420               	retlw	32	;' '
  1254  0676  3420               	retlw	32	;' '
  1255  0677  3400               	retlw	0
  1256  0678                     STR_118:	
  1257  0678  3450               	retlw	80	;'P'
  1258  0679  3441               	retlw	65	;'A'
  1259  067A  3452               	retlw	82	;'R'
  1260  067B  3445               	retlw	69	;'E'
  1261  067C  3441               	retlw	65	;'A'
  1262  067D  3452               	retlw	82	;'R'
  1263  067E  3420               	retlw	32	;' '
  1264  067F  3420               	retlw	32	;' '
  1265  0680  3420               	retlw	32	;' '
  1266  0681  3420               	retlw	32	;' '
  1267  0682  3420               	retlw	32	;' '
  1268  0683  3420               	retlw	32	;' '
  1269  0684  3442               	retlw	66	;'B'
  1270  0685  3454               	retlw	84	;'T'
  1271  0686  3420               	retlw	32	;' '
  1272  0687  3420               	retlw	32	;' '
  1273  0688  3400               	retlw	0
  1274  0689                     STR_119:	
  1275  0689  3444               	retlw	68	;'D'
  1276  068A  3445               	retlw	69	;'E'
  1277  068B  3453               	retlw	83	;'S'
  1278  068C  3443               	retlw	67	;'C'
  1279  068D  344F               	retlw	79	;'O'
  1280  068E  344E               	retlw	78	;'N'
  1281  068F  3445               	retlw	69	;'E'
  1282  0690  3443               	retlw	67	;'C'
  1283  0691  3454               	retlw	84	;'T'
  1284  0692  3441               	retlw	65	;'A'
  1285  0693  3452               	retlw	82	;'R'
  1286  0694  3420               	retlw	32	;' '
  1287  0695  3442               	retlw	66	;'B'
  1288  0696  3454               	retlw	84	;'T'
  1289  0697  3420               	retlw	32	;' '
  1290  0698  3420               	retlw	32	;' '
  1291  0699  3400               	retlw	0
  1292  069A                     STR_113:	
  1293  069A  3420               	retlw	32	;' '
  1294  069B  3443               	retlw	67	;'C'
  1295  069C  344F               	retlw	79	;'O'
  1296  069D  344E               	retlw	78	;'N'
  1297  069E  3446               	retlw	70	;'F'
  1298  069F  3449               	retlw	73	;'I'
  1299  06A0  3452               	retlw	82	;'R'
  1300  06A1  344D               	retlw	77	;'M'
  1301  06A2  3441               	retlw	65	;'A'
  1302  06A3  3420               	retlw	32	;' '
  1303  06A4  3454               	retlw	84	;'T'
  1304  06A5  3452               	retlw	82	;'R'
  1305  06A6  344F               	retlw	79	;'O'
  1306  06A7  3443               	retlw	67	;'C'
  1307  06A8  3441               	retlw	65	;'A'
  1308  06A9  3420               	retlw	32	;' '
  1309  06AA  3400               	retlw	0
  1310  06AB                     STR_121:	
  1311  06AB  3431               	retlw	49	;'1'
  1312  06AC  3420               	retlw	32	;' '
  1313  06AD  3432               	retlw	50	;'2'
  1314  06AE  3420               	retlw	32	;' '
  1315  06AF  3433               	retlw	51	;'3'
  1316  06B0  3420               	retlw	32	;' '
  1317  06B1  3434               	retlw	52	;'4'
  1318  06B2  3420               	retlw	32	;' '
  1319  06B3  3420               	retlw	32	;' '
  1320  06B4  3435               	retlw	53	;'5'
  1321  06B5  3420               	retlw	32	;' '
  1322  06B6  3436               	retlw	54	;'6'
  1323  06B7  3420               	retlw	32	;' '
  1324  06B8  3437               	retlw	55	;'7'
  1325  06B9  3420               	retlw	32	;' '
  1326  06BA  3438               	retlw	56	;'8'
  1327  06BB  3400               	retlw	0
  1328  06BC                     STR_117:	
  1329  06BC  3442               	retlw	66	;'B'
  1330  06BD  344C               	retlw	76	;'L'
  1331  06BE  3455               	retlw	85	;'U'
  1332  06BF  3445               	retlw	69	;'E'
  1333  06C0  3454               	retlw	84	;'T'
  1334  06C1  344F               	retlw	79	;'O'
  1335  06C2  344F               	retlw	79	;'O'
  1336  06C3  3454               	retlw	84	;'T'
  1337  06C4  3448               	retlw	72	;'H'
  1338  06C5  3420               	retlw	32	;' '
  1339  06C6  343C               	retlw	60	;'<'
  1340  06C7  342D               	retlw	45	;'-'
  1341  06C8  342D               	retlw	45	;'-'
  1342  06C9  342D               	retlw	45	;'-'
  1343  06CA  342D               	retlw	45	;'-'
  1344  06CB  343E               	retlw	62	;'>'
  1345  06CC  3400               	retlw	0
  1346  06CD                     STR_107:	
  1347  06CD  344D               	retlw	77	;'M'
  1348  06CE  344F               	retlw	79	;'O'
  1349  06CF  3444               	retlw	68	;'D'
  1350  06D0  3455               	retlw	85	;'U'
  1351  06D1  344C               	retlw	76	;'L'
  1352  06D2  344F               	retlw	79	;'O'
  1353  06D3  3420               	retlw	32	;' '
  1354  06D4  3420               	retlw	32	;' '
  1355  06D5  3444               	retlw	68	;'D'
  1356  06D6  3445               	retlw	69	;'E'
  1357  06D7  3453               	retlw	83	;'S'
  1358  06D8  3445               	retlw	69	;'E'
  1359  06D9  344A               	retlw	74	;'J'
  1360  06DA  3441               	retlw	65	;'A'
  1361  06DB  3444               	retlw	68	;'D'
  1362  06DC  344F               	retlw	79	;'O'
  1363  06DD  3400               	retlw	0
  1364  06DE                     STR_108:	
  1365  06DE  3445               	retlw	69	;'E'
  1366  06DF  3453               	retlw	83	;'S'
  1367  06E0  3454               	retlw	84	;'T'
  1368  06E1  3445               	retlw	69	;'E'
  1369  06E2  3449               	retlw	73	;'I'
  1370  06E3  3452               	retlw	82	;'R'
  1371  06E4  3441               	retlw	65	;'A'
  1372  06E5  3420               	retlw	32	;' '
  1373  06E6  3420               	retlw	32	;' '
  1374  06E7  3420               	retlw	32	;' '
  1375  06E8  3420               	retlw	32	;' '
  1376  06E9  3420               	retlw	32	;' '
  1377  06EA  3420               	retlw	32	;' '
  1378  06EB  3443               	retlw	67	;'C'
  1379  06EC  344C               	retlw	76	;'L'
  1380  06ED  3450               	retlw	80	;'P'
  1381  06EE  3400               	retlw	0
  1382  06EF                     STR_89:	
  1383  06EF  3441               	retlw	65	;'A'
  1384  06F0  3454               	retlw	84	;'T'
  1385  06F1  342B               	retlw	43	;'+'
  1386  06F2  3450               	retlw	80	;'P'
  1387  06F3  3453               	retlw	83	;'S'
  1388  06F4  3457               	retlw	87	;'W'
  1389  06F5  3444               	retlw	68	;'D'
  1390  06F6  343D               	retlw	61	;'='
  1391  06F7  3422               	retlw	34	;'"'
  1392  06F8  3430               	retlw	48	;'0'
  1393  06F9  3439               	retlw	57	;'9'
  1394  06FA  3431               	retlw	49	;'1'
  1395  06FB  3430               	retlw	48	;'0'
  1396  06FC  3422               	retlw	34	;'"'
  1397  06FD  340D               	retlw	13
  1398  06FE  340A               	retlw	10
  1399  06FF  3400               	retlw	0
  1400  0700                     STR_68:	
  1401  0700  3420               	retlw	32	;' '
  1402  0701  3420               	retlw	32	;' '
  1403  0702  3420               	retlw	32	;' '
  1404  0703  3420               	retlw	32	;' '
  1405  0704  3420               	retlw	32	;' '
  1406  0705  3420               	retlw	32	;' '
  1407  0706  3420               	retlw	32	;' '
  1408  0707  3420               	retlw	32	;' '
  1409  0708  3420               	retlw	32	;' '
  1410  0709  3420               	retlw	32	;' '
  1411  070A  3420               	retlw	32	;' '
  1412  070B  3420               	retlw	32	;' '
  1413  070C  3420               	retlw	32	;' '
  1414  070D  3420               	retlw	32	;' '
  1415  070E  3420               	retlw	32	;' '
  1416  070F  3420               	retlw	32	;' '
  1417  0710  3400               	retlw	0
  1418  0711                     STR_75:	
  1419  0711  3420               	retlw	32	;' '
  1420  0712  3420               	retlw	32	;' '
  1421  0713  3420               	retlw	32	;' '
  1422  0714  3420               	retlw	32	;' '
  1423  0715  3420               	retlw	32	;' '
  1424  0716  3420               	retlw	32	;' '
  1425  0717  3441               	retlw	65	;'A'
  1426  0718  3452               	retlw	82	;'R'
  1427  0719  3452               	retlw	82	;'R'
  1428  071A  3449               	retlw	73	;'I'
  1429  071B  3420               	retlw	32	;' '
  1430  071C  3420               	retlw	32	;' '
  1431  071D  3420               	retlw	32	;' '
  1432  071E  3420               	retlw	32	;' '
  1433  071F  3420               	retlw	32	;' '
  1434  0720  3420               	retlw	32	;' '
  1435  0721  3400               	retlw	0
  1436  0722                     STR_76:	
  1437  0722  3420               	retlw	32	;' '
  1438  0723  3420               	retlw	32	;' '
  1439  0724  3420               	retlw	32	;' '
  1440  0725  3420               	retlw	32	;' '
  1441  0726  3420               	retlw	32	;' '
  1442  0727  3445               	retlw	69	;'E'
  1443  0728  3447               	retlw	71	;'G'
  1444  0729  3455               	retlw	85	;'U'
  1445  072A  3441               	retlw	65	;'A'
  1446  072B  3441               	retlw	65	;'A'
  1447  072C  3441               	retlw	65	;'A'
  1448  072D  3420               	retlw	32	;' '
  1449  072E  3420               	retlw	32	;' '
  1450  072F  3420               	retlw	32	;' '
  1451  0730  3420               	retlw	32	;' '
  1452  0731  3420               	retlw	32	;' '
  1453  0732  3400               	retlw	0
  1454  0733                     STR_69:	
  1455  0733  3447               	retlw	71	;'G'
  1456  0734  3455               	retlw	85	;'U'
  1457  0735  3449               	retlw	73	;'I'
  1458  0736  342E               	retlw	46	;'.'
  1459  0737  3420               	retlw	32	;' '
  1460  0738  3452               	retlw	82	;'R'
  1461  0739  3449               	retlw	73	;'I'
  1462  073A  3442               	retlw	66	;'B'
  1463  073B  3445               	retlw	69	;'E'
  1464  073C  3449               	retlw	73	;'I'
  1465  073D  3452               	retlw	82	;'R'
  1466  073E  344F               	retlw	79	;'O'
  1467  073F  3420               	retlw	32	;' '
  1468  0740  3420               	retlw	32	;' '
  1469  0741  3420               	retlw	32	;' '
  1470  0742  3420               	retlw	32	;' '
  1471  0743  3400               	retlw	0
  1472  0744                     STR_6:	
  1473  0744  3420               	retlw	32	;' '
  1474  0745  3420               	retlw	32	;' '
  1475  0746  3420               	retlw	32	;' '
  1476  0747  3420               	retlw	32	;' '
  1477  0748  3454               	retlw	84	;'T'
  1478  0749  3465               	retlw	101	;'e'
  1479  074A  3463               	retlw	99	;'c'
  1480  074B  346E               	retlw	110	;'n'
  1481  074C  346F               	retlw	111	;'o'
  1482  074D  346C               	retlw	108	;'l'
  1483  074E  346F               	retlw	111	;'o'
  1484  074F  3467               	retlw	103	;'g'
  1485  0750  3420               	retlw	32	;' '
  1486  0751  3420               	retlw	32	;' '
  1487  0752  3420               	retlw	32	;' '
  1488  0753  3420               	retlw	32	;' '
  1489  0754  3400               	retlw	0
  1490  0755                     STR_8:	
  1491  0755  3420               	retlw	32	;' '
  1492  0756  3420               	retlw	32	;' '
  1493  0757  3420               	retlw	32	;' '
  1494  0758  342D               	retlw	45	;'-'
  1495  0759  342D               	retlw	45	;'-'
  1496  075A  342D               	retlw	45	;'-'
  1497  075B  342D               	retlw	45	;'-'
  1498  075C  342D               	retlw	45	;'-'
  1499  075D  342D               	retlw	45	;'-'
  1500  075E  342D               	retlw	45	;'-'
  1501  075F  342D               	retlw	45	;'-'
  1502  0760  342D               	retlw	45	;'-'
  1503  0761  342D               	retlw	45	;'-'
  1504  0762  3420               	retlw	32	;' '
  1505  0763  3420               	retlw	32	;' '
  1506  0764  3420               	retlw	32	;' '
  1507  0765  3400               	retlw	0
  1508  0766                     STR_66:	
  1509  0766  3457               	retlw	87	;'W'
  1510  0767  3441               	retlw	65	;'A'
  1511  0768  344C               	retlw	76	;'L'
  1512  0769  344C               	retlw	76	;'L'
  1513  076A  3441               	retlw	65	;'A'
  1514  076B  3443               	retlw	67	;'C'
  1515  076C  3445               	retlw	69	;'E'
  1516  076D  3420               	retlw	32	;' '
  1517  076E  3450               	retlw	80	;'P'
  1518  076F  3449               	retlw	73	;'I'
  1519  0770  3452               	retlw	82	;'R'
  1520  0771  3445               	retlw	69	;'E'
  1521  0772  3453               	retlw	83	;'S'
  1522  0773  3420               	retlw	32	;' '
  1523  0774  3420               	retlw	32	;' '
  1524  0775  3420               	retlw	32	;' '
  1525  0776  3400               	retlw	0
  1526  0777                     STR_73:	
  1527  0777  344C               	retlw	76	;'L'
  1528  0778  3449               	retlw	73	;'I'
  1529  0779  344E               	retlw	78	;'N'
  1530  077A  3443               	retlw	67	;'C'
  1531  077B  344F               	retlw	79	;'O'
  1532  077C  344E               	retlw	78	;'N'
  1533  077D  3420               	retlw	32	;' '
  1534  077E  344E               	retlw	78	;'N'
  1535  077F  344F               	retlw	79	;'O'
  1536  0780  3456               	retlw	86	;'V'
  1537  0781  3441               	retlw	65	;'A'
  1538  0782  3449               	retlw	73	;'I'
  1539  0783  3453               	retlw	83	;'S'
  1540  0784  3420               	retlw	32	;' '
  1541  0785  3420               	retlw	32	;' '
  1542  0786  3420               	retlw	32	;' '
  1543  0787  3400               	retlw	0
  1544  0788                     STR_9:	
  1545  0788  3420               	retlw	32	;' '
  1546  0789  3420               	retlw	32	;' '
  1547  078A  3420               	retlw	32	;' '
  1548  078B  3450               	retlw	80	;'P'
  1549  078C  3461               	retlw	97	;'a'
  1550  078D  3472               	retlw	114	;'r'
  1551  078E  3465               	retlw	101	;'e'
  1552  078F  3461               	retlw	97	;'a'
  1553  0790  346D               	retlw	109	;'m'
  1554  0791  3465               	retlw	101	;'e'
  1555  0792  346E               	retlw	110	;'n'
  1556  0793  3474               	retlw	116	;'t'
  1557  0794  346F               	retlw	111	;'o'
  1558  0795  3420               	retlw	32	;' '
  1559  0796  3420               	retlw	32	;' '
  1560  0797  3420               	retlw	32	;' '
  1561  0798  3400               	retlw	0
  1562  0799                     STR_7:	
  1563  0799  3420               	retlw	32	;' '
  1564  079A  3420               	retlw	32	;' '
  1565  079B  3420               	retlw	32	;' '
  1566  079C  3443               	retlw	67	;'C'
  1567  079D  346F               	retlw	111	;'o'
  1568  079E  346E               	retlw	110	;'n'
  1569  079F  3466               	retlw	102	;'f'
  1570  07A0  3469               	retlw	105	;'i'
  1571  07A1  3467               	retlw	103	;'g'
  1572  07A2  3475               	retlw	117	;'u'
  1573  07A3  3472               	retlw	114	;'r'
  1574  07A4  3461               	retlw	97	;'a'
  1575  07A5  3472               	retlw	114	;'r'
  1576  07A6  3420               	retlw	32	;' '
  1577  07A7  3420               	retlw	32	;' '
  1578  07A8  3420               	retlw	32	;' '
  1579  07A9  3400               	retlw	0
  1580  07AA                     STR_67:	
  1581  07AA  344D               	retlw	77	;'M'
  1582  07AB  3441               	retlw	65	;'A'
  1583  07AC  3454               	retlw	84	;'T'
  1584  07AD  3445               	retlw	69	;'E'
  1585  07AE  3455               	retlw	85	;'U'
  1586  07AF  3453               	retlw	83	;'S'
  1587  07B0  3420               	retlw	32	;' '
  1588  07B1  3450               	retlw	80	;'P'
  1589  07B2  3449               	retlw	73	;'I'
  1590  07B3  344E               	retlw	78	;'N'
  1591  07B4  3448               	retlw	72	;'H'
  1592  07B5  3445               	retlw	69	;'E'
  1593  07B6  3449               	retlw	73	;'I'
  1594  07B7  3452               	retlw	82	;'R'
  1595  07B8  344F               	retlw	79	;'O'
  1596  07B9  3420               	retlw	32	;' '
  1597  07BA  3400               	retlw	0
  1598  07BB                     STR_11:	
  1599  07BB  3420               	retlw	32	;' '
  1600  07BC  3445               	retlw	69	;'E'
  1601  07BD  346E               	retlw	110	;'n'
  1602  07BE  3476               	retlw	118	;'v'
  1603  07BF  3469               	retlw	105	;'i'
  1604  07C0  346F               	retlw	111	;'o'
  1605  07C1  3420               	retlw	32	;' '
  1606  07C2  3464               	retlw	100	;'d'
  1607  07C3  3465               	retlw	101	;'e'
  1608  07C4  3420               	retlw	32	;' '
  1609  07C5  3444               	retlw	68	;'D'
  1610  07C6  3461               	retlw	97	;'a'
  1611  07C7  3464               	retlw	100	;'d'
  1612  07C8  346F               	retlw	111	;'o'
  1613  07C9  3473               	retlw	115	;'s'
  1614  07CA  3420               	retlw	32	;' '
  1615  07CB  3400               	retlw	0
  1616  07CC                     STR_78:	
  1617  07CC  3421               	retlw	33	;'!'
  1618  07CD  342A               	retlw	42	;'*'
  1619  07CE  342D               	retlw	45	;'-'
  1620  07CF  342A               	retlw	42	;'*'
  1621  07D0  3420               	retlw	32	;' '
  1622  07D1  3445               	retlw	69	;'E'
  1623  07D2  3447               	retlw	71	;'G'
  1624  07D3  3455               	retlw	85	;'U'
  1625  07D4  3441               	retlw	65	;'A'
  1626  07D5  3441               	retlw	65	;'A'
  1627  07D6  3441               	retlw	65	;'A'
  1628  07D7  3420               	retlw	32	;' '
  1629  07D8  342A               	retlw	42	;'*'
  1630  07D9  342D               	retlw	45	;'-'
  1631  07DA  342A               	retlw	42	;'*'
  1632  07DB  3421               	retlw	33	;'!'
  1633  07DC  3400               	retlw	0
  1634  07DD                     STR_80:	
  1635  07DD  3431               	retlw	49	;'1'
  1636  07DE  3433               	retlw	51	;'3'
  1637  07DF  3420               	retlw	32	;' '
  1638  07E0  3420               	retlw	32	;' '
  1639  07E1  3420               	retlw	32	;' '
  1640  07E2  3445               	retlw	69	;'E'
  1641  07E3  3447               	retlw	71	;'G'
  1642  07E4  3455               	retlw	85	;'U'
  1643  07E5  3441               	retlw	65	;'A'
  1644  07E6  3441               	retlw	65	;'A'
  1645  07E7  3441               	retlw	65	;'A'
  1646  07E8  3420               	retlw	32	;' '
  1647  07E9  3420               	retlw	32	;' '
  1648  07EA  3420               	retlw	32	;' '
  1649  07EB  3435               	retlw	53	;'5'
  1650  07EC  3430               	retlw	48	;'0'
  1651  07ED  3400               	retlw	0
  1652  07EE                     STR_79:	
  1653  07EE  3435               	retlw	53	;'5'
  1654  07EF  3430               	retlw	48	;'0'
  1655  07F0  3420               	retlw	32	;' '
  1656  07F1  3420               	retlw	32	;' '
  1657  07F2  3420               	retlw	32	;' '
  1658  07F3  3420               	retlw	32	;' '
  1659  07F4  3441               	retlw	65	;'A'
  1660  07F5  3452               	retlw	82	;'R'
  1661  07F6  3452               	retlw	82	;'R'
  1662  07F7  3449               	retlw	73	;'I'
  1663  07F8  3420               	retlw	32	;' '
  1664  07F9  3420               	retlw	32	;' '
  1665  07FA  3420               	retlw	32	;' '
  1666  07FB  3420               	retlw	32	;' '
  1667  07FC  3431               	retlw	49	;'1'
  1668  07FD  3433               	retlw	51	;'3'
  1669  07FE  3400               	retlw	0
  1670  07FF                     STR_81:	
  1671  07FF  343A               	retlw	58	;':'
  1672  0800  3433               	retlw	51	;'3'
  1673  0801  3420               	retlw	32	;' '
  1674  0802  342A               	retlw	42	;'*'
  1675  0803  342D               	retlw	45	;'-'
  1676  0804  342A               	retlw	42	;'*'
  1677  0805  3441               	retlw	65	;'A'
  1678  0806  3452               	retlw	82	;'R'
  1679  0807  3452               	retlw	82	;'R'
  1680  0808  3449               	retlw	73	;'I'
  1681  0809  342A               	retlw	42	;'*'
  1682  080A  342D               	retlw	45	;'-'
  1683  080B  342A               	retlw	42	;'*'
  1684  080C  3420               	retlw	32	;' '
  1685  080D  3458               	retlw	88	;'X'
  1686  080E  3444               	retlw	68	;'D'
  1687  080F  3400               	retlw	0
  1688  0810                     STR_77:	
  1689  0810  3458               	retlw	88	;'X'
  1690  0811  3444               	retlw	68	;'D'
  1691  0812  3420               	retlw	32	;' '
  1692  0813  342A               	retlw	42	;'*'
  1693  0814  342D               	retlw	45	;'-'
  1694  0815  342A               	retlw	42	;'*'
  1695  0816  3441               	retlw	65	;'A'
  1696  0817  3452               	retlw	82	;'R'
  1697  0818  3452               	retlw	82	;'R'
  1698  0819  3449               	retlw	73	;'I'
  1699  081A  342A               	retlw	42	;'*'
  1700  081B  342D               	retlw	45	;'-'
  1701  081C  342A               	retlw	42	;'*'
  1702  081D  3420               	retlw	32	;' '
  1703  081E  3458               	retlw	88	;'X'
  1704  081F  3444               	retlw	68	;'D'
  1705  0820  3400               	retlw	0
  1706  0821                     STR_1:	
  1707  0821  345F               	retlw	95	;'_'
  1708  0822  345F               	retlw	95	;'_'
  1709  0823  3420               	retlw	32	;' '
  1710  0824  3420               	retlw	32	;' '
  1711  0825  3420               	retlw	32	;' '
  1712  0826  3420               	retlw	32	;' '
  1713  0827  3420               	retlw	32	;' '
  1714  0828  3420               	retlw	32	;' '
  1715  0829  3420               	retlw	32	;' '
  1716  082A  3420               	retlw	32	;' '
  1717  082B  3420               	retlw	32	;' '
  1718  082C  3420               	retlw	32	;' '
  1719  082D  3420               	retlw	32	;' '
  1720  082E  3420               	retlw	32	;' '
  1721  082F  345F               	retlw	95	;'_'
  1722  0830  345F               	retlw	95	;'_'
  1723  0831  3400               	retlw	0
  1724  0832                     STR_86:	
  1725  0832  3441               	retlw	65	;'A'
  1726  0833  3454               	retlw	84	;'T'
  1727  0834  342B               	retlw	43	;'+'
  1728  0835  3449               	retlw	73	;'I'
  1729  0836  344E               	retlw	78	;'N'
  1730  0837  3451               	retlw	81	;'Q'
  1731  0838  344D               	retlw	77	;'M'
  1732  0839  343D               	retlw	61	;'='
  1733  083A  3430               	retlw	48	;'0'
  1734  083B  342C               	retlw	44	;','
  1735  083C  3435               	retlw	53	;'5'
  1736  083D  342C               	retlw	44	;','
  1737  083E  3435               	retlw	53	;'5'
  1738  083F  340D               	retlw	13
  1739  0840  340A               	retlw	10
  1740  0841  3400               	retlw	0
  1741  0842                     STR_110:	
  1742  0842  3420               	retlw	32	;' '
  1743  0843  3450               	retlw	80	;'P'
  1744  0844  342F               	retlw	47	;'/'
  1745  0845  3420               	retlw	32	;' '
  1746  0846  3445               	retlw	69	;'E'
  1747  0847  3473               	retlw	115	;'s'
  1748  0848  3474               	retlw	116	;'t'
  1749  0849  3465               	retlw	101	;'e'
  1750  084A  3469               	retlw	105	;'i'
  1751  084B  3472               	retlw	114	;'r'
  1752  084C  3461               	retlw	97	;'a'
  1753  084D  3420               	retlw	32	;' '
  1754  084E  3400               	retlw	0
  1755  084F                     STR_85:	
  1756  084F  3441               	retlw	65	;'A'
  1757  0850  3454               	retlw	84	;'T'
  1758  0851  342B               	retlw	43	;'+'
  1759  0852  3443               	retlw	67	;'C'
  1760  0853  344D               	retlw	77	;'M'
  1761  0854  344F               	retlw	79	;'O'
  1762  0855  3444               	retlw	68	;'D'
  1763  0856  3445               	retlw	69	;'E'
  1764  0857  343D               	retlw	61	;'='
  1765  0858  3431               	retlw	49	;'1'
  1766  0859  340D               	retlw	13
  1767  085A  340A               	retlw	10
  1768  085B  3400               	retlw	0
  1769  085C                     STR_92:	
  1770  085C  3441               	retlw	65	;'A'
  1771  085D  3454               	retlw	84	;'T'
  1772  085E  342B               	retlw	43	;'+'
  1773  085F  3452               	retlw	82	;'R'
  1774  0860  344F               	retlw	79	;'O'
  1775  0861  344C               	retlw	76	;'L'
  1776  0862  3445               	retlw	69	;'E'
  1777  0863  343D               	retlw	61	;'='
  1778  0864  3430               	retlw	48	;'0'
  1779  0865  340D               	retlw	13
  1780  0866  340A               	retlw	10
  1781  0867  3400               	retlw	0
  1782  0868                     STR_84:	
  1783  0868  3441               	retlw	65	;'A'
  1784  0869  3454               	retlw	84	;'T'
  1785  086A  342B               	retlw	43	;'+'
  1786  086B  3452               	retlw	82	;'R'
  1787  086C  344F               	retlw	79	;'O'
  1788  086D  344C               	retlw	76	;'L'
  1789  086E  3445               	retlw	69	;'E'
  1790  086F  343D               	retlw	61	;'='
  1791  0870  3431               	retlw	49	;'1'
  1792  0871  340D               	retlw	13
  1793  0872  340A               	retlw	10
  1794  0873  3400               	retlw	0
  1795  0874                     STR_109:	
  1796  0874  3420               	retlw	32	;' '
  1797  0875  3445               	retlw	69	;'E'
  1798  0876  346E               	retlw	110	;'n'
  1799  0877  3476               	retlw	118	;'v'
  1800  0878  3469               	retlw	105	;'i'
  1801  0879  3461               	retlw	97	;'a'
  1802  087A  346E               	retlw	110	;'n'
  1803  087B  3464               	retlw	100	;'d'
  1804  087C  346F               	retlw	111	;'o'
  1805  087D  3420               	retlw	32	;' '
  1806  087E  3400               	retlw	0
  1807  087F                     STR_91:	
  1808  087F  3441               	retlw	65	;'A'
  1809  0880  3454               	retlw	84	;'T'
  1810  0881  342B               	retlw	43	;'+'
  1811  0882  3452               	retlw	82	;'R'
  1812  0883  344D               	retlw	77	;'M'
  1813  0884  3441               	retlw	65	;'A'
  1814  0885  3441               	retlw	65	;'A'
  1815  0886  3444               	retlw	68	;'D'
  1816  0887  340D               	retlw	13
  1817  0888  340A               	retlw	10
  1818  0889  3400               	retlw	0
  1819  088A                     STR_87:	
  1820  088A  3441               	retlw	65	;'A'
  1821  088B  3454               	retlw	84	;'T'
  1822  088C  342B               	retlw	43	;'+'
  1823  088D  3449               	retlw	73	;'I'
  1824  088E  344E               	retlw	78	;'N'
  1825  088F  3449               	retlw	73	;'I'
  1826  0890  3454               	retlw	84	;'T'
  1827  0891  340D               	retlw	13
  1828  0892  340A               	retlw	10
  1829  0893  3400               	retlw	0
  1830  0894                     STR_112:	
  1831  0894  3420               	retlw	32	;' '
  1832  0895  3450               	retlw	80	;'P'
  1833  0896  342F               	retlw	47	;'/'
  1834  0897  3420               	retlw	32	;' '
  1835  0898  3443               	retlw	67	;'C'
  1836  0899  344C               	retlw	76	;'L'
  1837  089A  3450               	retlw	80	;'P'
  1838  089B  3420               	retlw	32	;' '
  1839  089C  3400               	retlw	0
  1840  089D                     STR_88:	
  1841  089D  3441               	retlw	65	;'A'
  1842  089E  3454               	retlw	84	;'T'
  1843  089F  342B               	retlw	43	;'+'
  1844  08A0  3449               	retlw	73	;'I'
  1845  08A1  344E               	retlw	78	;'N'
  1846  08A2  3451               	retlw	81	;'Q'
  1847  08A3  340D               	retlw	13
  1848  08A4  340A               	retlw	10
  1849  08A5  3400               	retlw	0
  1850  08A6                     STR_47:	
  1851  08A6  3445               	retlw	69	;'E'
  1852  08A7  3453               	retlw	83	;'S'
  1853  08A8  3454               	retlw	84	;'T'
  1854  08A9  3445               	retlw	69	;'E'
  1855  08AA  3449               	retlw	73	;'I'
  1856  08AB  3452               	retlw	82	;'R'
  1857  08AC  3441               	retlw	65	;'A'
  1858  08AD  3400               	retlw	0
  1859  08AE                     STR_51:	
  1860  08AE  3450               	retlw	80	;'P'
  1861  08AF  3441               	retlw	65	;'A'
  1862  08B0  3452               	retlw	82	;'R'
  1863  08B1  3445               	retlw	69	;'E'
  1864  08B2  3441               	retlw	65	;'A'
  1865  08B3  3452               	retlw	82	;'R'
  1866  08B4  3400               	retlw	0
  1867  08B5                     STR_57:	
  1868  08B5  342E               	retlw	46	;'.'
  1869  08B6  3420               	retlw	32	;' '
  1870  08B7  3420               	retlw	32	;' '
  1871  08B8  3400               	retlw	0
  1872  08B9                     STR_58:	
  1873  08B9  3420               	retlw	32	;' '
  1874  08BA  342E               	retlw	46	;'.'
  1875  08BB  3420               	retlw	32	;' '
  1876  08BC  3400               	retlw	0
  1877  08BD                     STR_64:	
  1878  08BD  342E               	retlw	46	;'.'
  1879  08BE  342E               	retlw	46	;'.'
  1880  08BF  3420               	retlw	32	;' '
  1881  08C0  3400               	retlw	0
  1882  08C1                     STR_59:	
  1883  08C1  3420               	retlw	32	;' '
  1884  08C2  3420               	retlw	32	;' '
  1885  08C3  342E               	retlw	46	;'.'
  1886  08C4  3400               	retlw	0
  1887  08C5                     STR_65:	
  1888  08C5  342E               	retlw	46	;'.'
  1889  08C6  342E               	retlw	46	;'.'
  1890  08C7  342E               	retlw	46	;'.'
  1891  08C8  3400               	retlw	0
  1892  08C9                     STR_16:	
  1893  08C9  3431               	retlw	49	;'1'
  1894  08CA  3400               	retlw	0
  1895  08CB                     STR_14:	
  1896  08CB  3432               	retlw	50	;'2'
  1897  08CC  3400               	retlw	0
  1898  08CD                     STR_22:	
  1899  08CD  3434               	retlw	52	;'4'
  1900  08CE  3400               	retlw	0
  1901  08CF                     STR_26:	
  1902  08CF  3435               	retlw	53	;'5'
  1903  08D0  3400               	retlw	0
  1904  08D1                     STR_30:	
  1905  08D1  3436               	retlw	54	;'6'
  1906  08D2  3400               	retlw	0
  1907  08D3                     STR_34:	
  1908  08D3  3437               	retlw	55	;'7'
  1909  08D4  3400               	retlw	0
  1910  08D5                     STR_2:	
  1911  08D5  3442               	retlw	66	;'B'
  1912  08D6  3400               	retlw	0
  1913  08D7                     STR_5:	
  1914  08D7  3465               	retlw	101	;'e'
  1915  08D8  3400               	retlw	0
  1916  08D9                     STR_3:	
  1917  08D9  346C               	retlw	108	;'l'
  1918  08DA  3400               	retlw	0
  1919  08DB                     STR_4:	
  1920  08DB  3475               	retlw	117	;'u'
  1921  08DC  3400               	retlw	0
  1922  06FF                     
  1923                           ; #config settings
  1924  0000                     
  1925                           	psect	cinit
  1926  0015                     start_initialization:	
  1927  0015                     __initialization:	
  1928                           
  1929                           ; Clear objects allocated to COMMON
  1930  0015  01F0               	clrf	__pbssCOMMON& (0+127)
  1931  0016  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1932  0017  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1933  0018  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1934  0019  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1935                           
  1936                           ; Clear objects allocated to BANK0
  1937  001A  1383               	bcf	3,7	;select IRP bank0
  1938  001B  3020               	movlw	low __pbssBANK0
  1939  001C  0084               	movwf	4
  1940  001D  3047               	movlw	low (__pbssBANK0+39)
  1941  001E  160A  118A  21AF   	fcall	clear_ram0
  1942  0021                     end_of_initialization:	
  1943                           ;End of C runtime variable initialization code
  1944                           
  1945  0021                     __end_of__initialization:	
  1946  0021  0183               	clrf	3
  1947  0022  120A  118A  2825   	ljmp	_main	;jump to C main() function
  1948                           
  1949                           	psect	bssCOMMON
  1950  0070                     __pbssCOMMON:	
  1951  0070                     _fifoHead:	
  1952  0070                     	ds	1
  1953  0071                     _serial:	
  1954  0071                     	ds	1
  1955  0072                     _rhex:	
  1956  0072                     	ds	1
  1957  0073                     _tdez:	
  1958  0073                     	ds	1
  1959  0074                     _tuni:	
  1960  0074                     	ds	1
  1961                           
  1962                           	psect	bssBANK0
  1963  0020                     __pbssBANK0:	
  1964  0020                     _fifo:	
  1965  0020                     	ds	30
  1966  003E                     _t0cont:	
  1967  003E                     	ds	2
  1968  0040                     _t0final:	
  1969  0040                     	ds	2
  1970  0042                     _fifoTail:	
  1971  0042                     	ds	1
  1972  0043                     _estadoAnteriorB3:	
  1973  0043                     	ds	1
  1974  0044                     _estadoAnteriorB2:	
  1975  0044                     	ds	1
  1976  0045                     _estadoAnteriorB1:	
  1977  0045                     	ds	1
  1978  0046                     _comp:	
  1979  0046                     	ds	1
  1980                           
  1981                           	psect	clrtext
  1982  11AF                     clear_ram0:	
  1983                           ;	Called with FSR containing the base address, and
  1984                           ;	W with the last address+1
  1985                           
  1986  11AF  0064               	clrwdt	;clear the watchdog before getting into this loop
  1987  11B0                     clrloop0:	
  1988  11B0  0180               	clrf	0	;clear RAM location pointed to by FSR
  1989  11B1  0A84               	incf	4,f	;increment pointer
  1990  11B2  0604               	xorwf	4,w	;XOR with final address
  1991  11B3  1903               	btfsc	3,2	;have we reached the end yet?
  1992  11B4  3400               	retlw	0	;all done for this memory range, return
  1993  11B5  0604               	xorwf	4,w	;XOR again to restore value
  1994  11B6  29B0               	goto	clrloop0	;do the next byte
  1995                           
  1996                           	psect	cstackCOMMON
  1997  0075                     __pcstackCOMMON:	
  1998  0075                     ?_serialOut:	
  1999  0075                     ?_writeEUSART:	
  2000                           ; 1 bytes @ 0x0
  2001                           
  2002  0075                     ?_putFIFO:	
  2003                           ; 1 bytes @ 0x0
  2004                           
  2005  0075                     ?_readEUSART:	
  2006                           ; 1 bytes @ 0x0
  2007                           
  2008  0075                     ?_cmdLCD:	
  2009                           ; 1 bytes @ 0x0
  2010                           
  2011  0075                     ?_bordaSubidaB2:	
  2012                           ; 1 bytes @ 0x0
  2013                           
  2014  0075                     ?_bordaSubidaB3:	
  2015                           ; 1 bytes @ 0x0
  2016                           
  2017  0075                     ?_initTimer0:	
  2018                           ; 1 bytes @ 0x0
  2019                           
  2020  0075                     ?_intt0_1ms:	
  2021                           ; 1 bytes @ 0x0
  2022                           
  2023  0075                     ??_intt0_1ms:	
  2024                           ; 1 bytes @ 0x0
  2025                           
  2026  0075                     ?_getFIFO:	
  2027                           ; 1 bytes @ 0x0
  2028                           
  2029  0075                     ?_initSerial:	
  2030                           ; 1 bytes @ 0x0
  2031                           
  2032  0075                     ?_serialIn:	
  2033                           ; 1 bytes @ 0x0
  2034                           
  2035  0075                     ?_convHexToAnsc:	
  2036                           ; 1 bytes @ 0x0
  2037                           
  2038  0075                     ?_transmite:	
  2039                           ; 1 bytes @ 0x0
  2040                           
  2041  0075                     ?_convAsciToHex:	
  2042                           ; 1 bytes @ 0x0
  2043                           
  2044  0075                     ?_recebe:	
  2045                           ; 1 bytes @ 0x0
  2046                           
  2047  0075                     ?_logo:	
  2048                           ; 1 bytes @ 0x0
  2049                           
  2050  0075                     ?_textConfig:	
  2051                           ; 1 bytes @ 0x0
  2052                           
  2053  0075                     ?_textCMpar:	
  2054                           ; 1 bytes @ 0x0
  2055                           
  2056  0075                     ?_textCMdat:	
  2057                           ; 1 bytes @ 0x0
  2058                           
  2059  0075                     ?_textSelection1:	
  2060                           ; 1 bytes @ 0x0
  2061                           
  2062  0075                     ?_textSelection2:	
  2063                           ; 1 bytes @ 0x0
  2064                           
  2065  0075                     ?_textSelection3:	
  2066                           ; 1 bytes @ 0x0
  2067                           
  2068  0075                     ?_textSelection4:	
  2069                           ; 1 bytes @ 0x0
  2070                           
  2071  0075                     ?_textSelection5:	
  2072                           ; 1 bytes @ 0x0
  2073                           
  2074  0075                     ?_textSelection6:	
  2075                           ; 1 bytes @ 0x0
  2076                           
  2077  0075                     ?_textSelection7:	
  2078                           ; 1 bytes @ 0x0
  2079                           
  2080  0075                     ?_textSelection8:	
  2081                           ; 1 bytes @ 0x0
  2082                           
  2083  0075                     ?_textSelectionEST:	
  2084                           ; 1 bytes @ 0x0
  2085                           
  2086  0075                     ?_textSelectionCLP:	
  2087                           ; 1 bytes @ 0x0
  2088                           
  2089  0075                     ?_textLoading:	
  2090                           ; 1 bytes @ 0x0
  2091                           
  2092  0075                     ?_easterEgg:	
  2093                           ; 1 bytes @ 0x0
  2094                           
  2095  0075                     ?_initBT:	
  2096                           ; 1 bytes @ 0x0
  2097                           
  2098  0075                     ?_B1:	
  2099                           ; 1 bytes @ 0x0
  2100                           
  2101  0075                     ?_B2:	
  2102                           ; 1 bytes @ 0x0
  2103                           
  2104  0075                     ?_B3:	
  2105                           ; 1 bytes @ 0x0
  2106                           
  2107  0075                     ?_bordaSubidaB1:	
  2108                           ; 1 bytes @ 0x0
  2109                           
  2110  0075                     ?_master1:	
  2111                           ; 1 bytes @ 0x0
  2112                           
  2113  0075                     ?_slave1:	
  2114                           ; 1 bytes @ 0x0
  2115                           
  2116  0075                     ?_putLCD:	
  2117                           ; 1 bytes @ 0x0
  2118                           
  2119  0075                     ?_initLCD:	
  2120                           ; 1 bytes @ 0x0
  2121                           
  2122  0075                     ?_main:	
  2123                           ; 1 bytes @ 0x0
  2124                           
  2125  0075                     ?_interrup:	
  2126                           ; 1 bytes @ 0x0
  2127                           
  2128                           
  2129                           ; 1 bytes @ 0x0
  2130  0075                     	ds	1
  2131  0076                     ??_interrup:	
  2132                           
  2133                           ; 1 bytes @ 0x1
  2134  0076                     	ds	4
  2135                           
  2136                           	psect	cstackBANK0
  2137  0047                     __pcstackBANK0:	
  2138  0047                     ??_serialOut:	
  2139  0047                     ??_writeEUSART:	
  2140                           ; 1 bytes @ 0x0
  2141                           
  2142  0047                     ??_cmdLCD:	
  2143                           ; 1 bytes @ 0x0
  2144                           
  2145  0047                     ??_bordaSubidaB3:	
  2146                           ; 1 bytes @ 0x0
  2147                           
  2148  0047                     ??_serialIn:	
  2149                           ; 1 bytes @ 0x0
  2150                           
  2151  0047                     ??_convHexToAnsc:	
  2152                           ; 1 bytes @ 0x0
  2153                           
  2154  0047                     ??_initBT:	
  2155                           ; 1 bytes @ 0x0
  2156                           
  2157  0047                     ??_B1:	
  2158                           ; 1 bytes @ 0x0
  2159                           
  2160  0047                     ??_B2:	
  2161                           ; 1 bytes @ 0x0
  2162                           
  2163  0047                     ??_B3:	
  2164                           ; 1 bytes @ 0x0
  2165                           
  2166  0047                     ??_bordaSubidaB1:	
  2167                           ; 1 bytes @ 0x0
  2168                           
  2169  0047                     ??_putLCD:	
  2170                           ; 1 bytes @ 0x0
  2171                           
  2172  0047                     ?_setT0limite:	
  2173                           ; 1 bytes @ 0x0
  2174                           
  2175  0047                     ?___bmul:	
  2176                           ; 1 bytes @ 0x0
  2177                           
  2178  0047                     ?_statusT0:	
  2179                           ; 1 bytes @ 0x0
  2180                           
  2181  0047                     ?_statusT0limite:	
  2182                           ; 2 bytes @ 0x0
  2183                           
  2184  0047                     ?___awmod:	
  2185                           ; 2 bytes @ 0x0
  2186                           
  2187  0047                     ?___lldiv:	
  2188                           ; 2 bytes @ 0x0
  2189                           
  2190  0047                     writeEUSART@d:	
  2191                           ; 4 bytes @ 0x0
  2192                           
  2193  0047                     ___bmul@multiplicand:	
  2194                           ; 1 bytes @ 0x0
  2195                           
  2196  0047                     setT0limite@c:	
  2197                           ; 1 bytes @ 0x0
  2198                           
  2199  0047                     ___awmod@divisor:	
  2200                           ; 2 bytes @ 0x0
  2201                           
  2202  0047                     ___lldiv@divisor:	
  2203                           ; 2 bytes @ 0x0
  2204                           
  2205                           
  2206                           ; 4 bytes @ 0x0
  2207  0047                     	ds	1
  2208  0048                     ??_bordaSubidaB2:	
  2209  0048                     ?_writeString:	
  2210                           ; 1 bytes @ 0x1
  2211                           
  2212  0048                     ??___bmul:	
  2213                           ; 1 bytes @ 0x1
  2214                           
  2215  0048                     serialOut@d:	
  2216                           ; 1 bytes @ 0x1
  2217                           
  2218  0048                     serialIn@dado:	
  2219                           ; 1 bytes @ 0x1
  2220                           
  2221  0048                     convHexToAnsc@dado:	
  2222                           ; 1 bytes @ 0x1
  2223                           
  2224  0048                     bordaSubidaB1@resp:	
  2225                           ; 1 bytes @ 0x1
  2226                           
  2227  0048                     bordaSubidaB3@resp2:	
  2228                           ; 1 bytes @ 0x1
  2229                           
  2230  0048                     putLCD@c:	
  2231                           ; 1 bytes @ 0x1
  2232                           
  2233  0048                     writeString@str:	
  2234                           ; 1 bytes @ 0x1
  2235                           
  2236                           
  2237                           ; 2 bytes @ 0x1
  2238  0048                     	ds	1
  2239  0049                     ??_statusT0:	
  2240  0049                     ??_statusT0limite:	
  2241                           ; 1 bytes @ 0x2
  2242                           
  2243  0049                     ??_initTimer0:	
  2244                           ; 1 bytes @ 0x2
  2245                           
  2246  0049                     ??_setT0limite:	
  2247                           ; 1 bytes @ 0x2
  2248                           
  2249  0049                     ?___awdiv:	
  2250                           ; 1 bytes @ 0x2
  2251                           
  2252  0049                     serialOut@i:	
  2253                           ; 2 bytes @ 0x2
  2254                           
  2255  0049                     serialIn@i:	
  2256                           ; 1 bytes @ 0x2
  2257                           
  2258  0049                     convHexToAnsc@uni:	
  2259                           ; 1 bytes @ 0x2
  2260                           
  2261  0049                     bordaSubidaB1@estadoAtualB1:	
  2262                           ; 1 bytes @ 0x2
  2263                           
  2264  0049                     bordaSubidaB2@resp1:	
  2265                           ; 1 bytes @ 0x2
  2266                           
  2267  0049                     bordaSubidaB3@estadoAtualB3:	
  2268                           ; 1 bytes @ 0x2
  2269                           
  2270  0049                     cmdLCD@cmd:	
  2271                           ; 1 bytes @ 0x2
  2272                           
  2273  0049                     putLCD@nibble:	
  2274                           ; 1 bytes @ 0x2
  2275                           
  2276  0049                     ___bmul@product:	
  2277                           ; 1 bytes @ 0x2
  2278                           
  2279  0049                     ___awdiv@divisor:	
  2280                           ; 1 bytes @ 0x2
  2281                           
  2282  0049                     ___awmod@dividend:	
  2283                           ; 2 bytes @ 0x2
  2284                           
  2285                           
  2286                           ; 2 bytes @ 0x2
  2287  0049                     	ds	1
  2288  004A                     ??_writeString:	
  2289  004A                     ??_initSerial:	
  2290                           ; 1 bytes @ 0x3
  2291                           
  2292  004A                     convHexToAnsc@dez:	
  2293                           ; 1 bytes @ 0x3
  2294                           
  2295  004A                     bordaSubidaB2@estadoAtualB2:	
  2296                           ; 1 bytes @ 0x3
  2297                           
  2298  004A                     cmdLCD@nibble:	
  2299                           ; 1 bytes @ 0x3
  2300                           
  2301  004A                     ___bmul@multiplier:	
  2302                           ; 1 bytes @ 0x3
  2303                           
  2304                           
  2305                           ; 1 bytes @ 0x3
  2306  004A                     	ds	1
  2307  004B                     ??_transmite:	
  2308  004B                     ?_gotoxy:	
  2309                           ; 1 bytes @ 0x4
  2310                           
  2311  004B                     ??_initLCD:	
  2312                           ; 1 bytes @ 0x4
  2313                           
  2314  004B                     ??___awmod:	
  2315                           ; 1 bytes @ 0x4
  2316                           
  2317  004B                     gotoxy@y:	
  2318                           ; 1 bytes @ 0x4
  2319                           
  2320  004B                     ___awdiv@dividend:	
  2321                           ; 1 bytes @ 0x4
  2322                           
  2323  004B                     ___lldiv@dividend:	
  2324                           ; 2 bytes @ 0x4
  2325                           
  2326                           
  2327                           ; 4 bytes @ 0x4
  2328  004B                     	ds	1
  2329  004C                     ??_gotoxy:	
  2330  004C                     ___awmod@counter:	
  2331                           ; 1 bytes @ 0x5
  2332                           
  2333                           
  2334                           ; 1 bytes @ 0x5
  2335  004C                     	ds	1
  2336  004D                     ??___awdiv:	
  2337  004D                     ___awmod@sign:	
  2338                           ; 1 bytes @ 0x6
  2339                           
  2340                           
  2341                           ; 1 bytes @ 0x6
  2342  004D                     	ds	1
  2343  004E                     ??_putFIFO:	
  2344  004E                     ??_getFIFO:	
  2345                           ; 1 bytes @ 0x7
  2346                           
  2347  004E                     gotoxy@x:	
  2348                           ; 1 bytes @ 0x7
  2349                           
  2350  004E                     ___awdiv@counter:	
  2351                           ; 1 bytes @ 0x7
  2352                           
  2353                           
  2354                           ; 1 bytes @ 0x7
  2355  004E                     	ds	1
  2356  004F                     ?_writeLCD:	
  2357  004F                     ??___lldiv:	
  2358                           ; 1 bytes @ 0x8
  2359                           
  2360  004F                     writeLCD@y:	
  2361                           ; 1 bytes @ 0x8
  2362                           
  2363  004F                     ___awdiv@sign:	
  2364                           ; 1 bytes @ 0x8
  2365                           
  2366                           
  2367                           ; 1 bytes @ 0x8
  2368  004F                     	ds	1
  2369  0050                     writeLCD@ptr:	
  2370  0050                     ___awdiv@quotient:	
  2371                           ; 2 bytes @ 0x9
  2372                           
  2373  0050                     ___lldiv@quotient:	
  2374                           ; 2 bytes @ 0x9
  2375                           
  2376                           
  2377                           ; 4 bytes @ 0x9
  2378  0050                     	ds	2
  2379  0052                     ??_writeLCD:	
  2380  0052                     putFIFO@c:	
  2381                           ; 1 bytes @ 0xB
  2382                           
  2383  0052                     getFIFO@aux:	
  2384                           ; 1 bytes @ 0xB
  2385                           
  2386                           
  2387                           ; 1 bytes @ 0xB
  2388  0052                     	ds	1
  2389  0053                     ??_readEUSART:	
  2390  0053                     ??_convAsciToHex:	
  2391                           ; 1 bytes @ 0xC
  2392                           
  2393  0053                     writeLCD@x:	
  2394                           ; 1 bytes @ 0xC
  2395                           
  2396                           
  2397                           ; 1 bytes @ 0xC
  2398  0053                     	ds	1
  2399  0054                     ??_logo:	
  2400  0054                     ??_textConfig:	
  2401                           ; 1 bytes @ 0xD
  2402                           
  2403  0054                     ??_textCMpar:	
  2404                           ; 1 bytes @ 0xD
  2405                           
  2406  0054                     ??_textCMdat:	
  2407                           ; 1 bytes @ 0xD
  2408                           
  2409  0054                     ??_textSelection1:	
  2410                           ; 1 bytes @ 0xD
  2411                           
  2412  0054                     ??_textSelection2:	
  2413                           ; 1 bytes @ 0xD
  2414                           
  2415  0054                     ??_textSelection3:	
  2416                           ; 1 bytes @ 0xD
  2417                           
  2418  0054                     ??_textSelection4:	
  2419                           ; 1 bytes @ 0xD
  2420                           
  2421  0054                     ??_textSelection5:	
  2422                           ; 1 bytes @ 0xD
  2423                           
  2424  0054                     ??_textSelection6:	
  2425                           ; 1 bytes @ 0xD
  2426                           
  2427  0054                     ??_textSelection7:	
  2428                           ; 1 bytes @ 0xD
  2429                           
  2430  0054                     ??_textSelection8:	
  2431                           ; 1 bytes @ 0xD
  2432                           
  2433  0054                     ??_textSelectionEST:	
  2434                           ; 1 bytes @ 0xD
  2435                           
  2436  0054                     ??_textSelectionCLP:	
  2437                           ; 1 bytes @ 0xD
  2438                           
  2439  0054                     ??_textLoading:	
  2440                           ; 1 bytes @ 0xD
  2441                           
  2442  0054                     ??_easterEgg:	
  2443                           ; 1 bytes @ 0xD
  2444                           
  2445  0054                     convAsciToHex@uni:	
  2446                           ; 1 bytes @ 0xD
  2447                           
  2448  0054                     ___lldiv@counter:	
  2449                           ; 1 bytes @ 0xD
  2450                           
  2451                           
  2452                           ; 1 bytes @ 0xD
  2453  0054                     	ds	1
  2454  0055                     ?_initEUSART:	
  2455  0055                     convAsciToHex@dez:	
  2456                           ; 1 bytes @ 0xE
  2457                           
  2458  0055                     initEUSART@baudRate:	
  2459                           ; 1 bytes @ 0xE
  2460                           
  2461                           
  2462                           ; 4 bytes @ 0xE
  2463  0055                     	ds	1
  2464  0056                     ??_recebe:	
  2465                           
  2466                           ; 1 bytes @ 0xF
  2467  0056                     	ds	3
  2468  0059                     ??_initEUSART:	
  2469                           
  2470                           ; 1 bytes @ 0x12
  2471  0059                     	ds	6
  2472  005F                     ??_master1:	
  2473  005F                     ??_slave1:	
  2474                           ; 1 bytes @ 0x18
  2475                           
  2476                           
  2477                           ; 1 bytes @ 0x18
  2478  005F                     	ds	3
  2479  0062                     ??_main:	
  2480                           
  2481                           ; 1 bytes @ 0x1B
  2482  0062                     	ds	3
  2483  0065                     main@t:	
  2484                           
  2485                           ; 1 bytes @ 0x1E
  2486  0065                     	ds	1
  2487  0066                     main@i:	
  2488                           
  2489                           ; 1 bytes @ 0x1F
  2490  0066                     	ds	1
  2491  0067                     main@a:	
  2492                           
  2493                           ; 1 bytes @ 0x20
  2494  0067                     	ds	1
  2495  0068                     main@aux:	
  2496                           
  2497                           ; 2 bytes @ 0x21
  2498  0068                     	ds	2
  2499                           
  2500                           	psect	maintext
  2501  0025                     __pmaintext:	
  2502 ;;
  2503 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2504 ;;
  2505 ;; *************** function _main *****************
  2506 ;; Defined at:
  2507 ;;		line 22 in file "main.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;		None
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  t               1   30[BANK0 ] unsigned char 
  2512 ;;  aux             2   33[BANK0 ] unsigned int 
  2513 ;;  a               1   32[BANK0 ] unsigned char 
  2514 ;;  i               1   31[BANK0 ] unsigned char 
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      void 
  2517 ;; Registers used:
  2518 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2519 ;; Tracked objects:
  2520 ;;		On entry : B00/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2524 ;;      Params:         0       0       0       0       0
  2525 ;;      Locals:         0       5       0       0       0
  2526 ;;      Temps:          0       3       0       0       0
  2527 ;;      Totals:         0       8       0       0       0
  2528 ;;Total ram usage:        8 bytes
  2529 ;; Hardware stack levels required when called:    7
  2530 ;; This function calls:
  2531 ;;		_B1
  2532 ;;		_B2
  2533 ;;		_B3
  2534 ;;		_bordaSubidaB1
  2535 ;;		_bordaSubidaB2
  2536 ;;		_bordaSubidaB3
  2537 ;;		_cmdLCD
  2538 ;;		_easterEgg
  2539 ;;		_initBT
  2540 ;;		_initEUSART
  2541 ;;		_initLCD
  2542 ;;		_initSerial
  2543 ;;		_initTimer0
  2544 ;;		_logo
  2545 ;;		_master1
  2546 ;;		_recebe
  2547 ;;		_slave1
  2548 ;;		_textCMdat
  2549 ;;		_textCMpar
  2550 ;;		_textConfig
  2551 ;;		_textLoading
  2552 ;;		_textSelection1
  2553 ;;		_textSelection2
  2554 ;;		_textSelection3
  2555 ;;		_textSelection4
  2556 ;;		_textSelection5
  2557 ;;		_textSelection6
  2558 ;;		_textSelection7
  2559 ;;		_textSelection8
  2560 ;;		_textSelectionCLP
  2561 ;;		_textSelectionEST
  2562 ;;		_transmite
  2563 ;;		_writeLCD
  2564 ;; This function is called by:
  2565 ;;		Startup code after reset
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           
  2570                           ;psect for function _main
  2571  0025                     _main:	
  2572                           
  2573                           ;main.c: 24: initBT();
  2574                           
  2575                           ;incstack = 0
  2576                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2577  0025  160A  118A  21B7  120A  118A  	fcall	_initBT
  2578                           
  2579                           ;main.c: 25: initLCD();
  2580  002A  160A  118A  2458  120A  118A  	fcall	_initLCD
  2581                           
  2582                           ;main.c: 26: initTimer0();
  2583  002F  160A  118A  22AF  120A  118A  	fcall	_initTimer0
  2584                           
  2585                           ;main.c: 27: initEUSART(9600);
  2586  0034  3000               	movlw	0
  2587  0035  1283               	bcf	3,5	;RP0=0, select bank0
  2588  0036  1303               	bcf	3,6	;RP1=0, select bank0
  2589  0037  00D8               	movwf	initEUSART@baudRate+3
  2590  0038  3000               	movlw	0
  2591  0039  00D7               	movwf	initEUSART@baudRate+2
  2592  003A  3025               	movlw	37
  2593  003B  00D6               	movwf	initEUSART@baudRate+1
  2594  003C  3080               	movlw	128
  2595  003D  00D5               	movwf	initEUSART@baudRate
  2596  003E  160A  118A  261C  120A  118A  	fcall	_initEUSART
  2597                           
  2598                           ;main.c: 28: initSerial();
  2599  0043  120A  118A  24E9  120A  118A  	fcall	_initSerial
  2600                           
  2601                           ;main.c: 31: unsigned int aux = 210;
  2602  0048  30D2               	movlw	210
  2603  0049  1283               	bcf	3,5	;RP0=0, select bank0
  2604  004A  1303               	bcf	3,6	;RP1=0, select bank0
  2605  004B  00E8               	movwf	main@aux
  2606  004C  3000               	movlw	0
  2607  004D  00E9               	movwf	main@aux+1
  2608                           
  2609                           ;main.c: 32: unsigned char a = 0;
  2610  004E  01E7               	clrf	main@a
  2611                           
  2612                           ;main.c: 33: unsigned char i = 0;
  2613  004F  01E6               	clrf	main@i
  2614                           
  2615                           ;main.c: 36: {
  2616                           ;main.c: 37: switch (aux)
  2617                           
  2618                           ;main.c: 35: while(1)
  2619  0050  2C81               	goto	l5019
  2620  0051                     l4601:	
  2621                           ;main.c: 38: {
  2622                           ;main.c: 39: case 0 :
  2623                           
  2624                           
  2625                           ;main.c: 40: logo();
  2626  0051  120A  158A  23CC  120A  118A  	fcall	_logo
  2627  0056  29C3               	goto	L48
  2628  0057                     l4605:	
  2629                           ;main.c: 44: case 1:
  2630                           
  2631                           ;main.c: 42: break;
  2632                           
  2633                           ;main.c: 41: aux = 1;
  2634                           
  2635                           
  2636                           ;main.c: 45: textConfig();
  2637  0057  160A  118A  230A  120A  118A  	fcall	_textConfig
  2638                           
  2639                           ;main.c: 46: aux = 10;
  2640  005C  300A               	movlw	10
  2641  005D  2C72               	goto	L45
  2642  005E                     l4609:	
  2643                           ;main.c: 49: case 2:
  2644                           
  2645                           ;main.c: 47: break;
  2646                           
  2647                           
  2648                           ;main.c: 50: textCMdat();
  2649  005E  160A  118A  22CA  120A  118A  	fcall	_textCMdat
  2650                           
  2651                           ;main.c: 51: aux = 20;
  2652  0063  3014               	movlw	20
  2653  0064  2C72               	goto	L45
  2654  0065                     l4613:	
  2655                           ;main.c: 54: case 3:
  2656                           
  2657                           ;main.c: 52: break;
  2658                           
  2659                           
  2660                           ;main.c: 55: textCMpar();
  2661  0065  160A  118A  22EA  120A  118A  	fcall	_textCMpar
  2662                           
  2663                           ;main.c: 56: aux = 30;
  2664  006A  301E               	movlw	30
  2665  006B  2C72               	goto	L45
  2666  006C                     l4617:	
  2667                           ;main.c: 61: case 10:
  2668                           
  2669                           ;main.c: 57: break;
  2670                           
  2671                           
  2672                           ;main.c: 62: if(bordaSubidaB1()) aux = 2;
  2673  006C  160A  118A  2246  120A  118A  	fcall	_bordaSubidaB1
  2674  0071  3A00               	xorlw	0
  2675  0072  1903               	skipnz
  2676  0073  287A               	goto	l4621
  2677  0074  3002               	movlw	2
  2678  0075  1283               	bcf	3,5	;RP0=0, select bank0
  2679  0076  1303               	bcf	3,6	;RP1=0, select bank0
  2680  0077  00E8               	movwf	main@aux
  2681  0078  3000               	movlw	0
  2682  0079  00E9               	movwf	main@aux+1
  2683  007A                     l4621:	
  2684                           
  2685                           ;main.c: 63: if(bordaSubidaB2()) aux = 3;
  2686  007A  160A  118A  2260  120A  118A  	fcall	_bordaSubidaB2
  2687  007F  3A00               	xorlw	0
  2688  0080  1903               	skipnz
  2689  0081  2888               	goto	l4625
  2690  0082  3003               	movlw	3
  2691  0083  1283               	bcf	3,5	;RP0=0, select bank0
  2692  0084  1303               	bcf	3,6	;RP1=0, select bank0
  2693  0085  00E8               	movwf	main@aux
  2694  0086  3000               	movlw	0
  2695  0087  00E9               	movwf	main@aux+1
  2696  0088                     l4625:	
  2697                           
  2698                           ;main.c: 64: if(bordaSubidaB3()) aux = 100;
  2699  0088  160A  118A  227A  120A  118A  	fcall	_bordaSubidaB3
  2700  008D  3A00               	xorlw	0
  2701  008E  1903               	skipnz
  2702  008F  2C81               	goto	l5019
  2703  0090  3064               	movlw	100
  2704  0091  2C72               	goto	L45
  2705  0092                     l4629:	
  2706                           ;main.c: 67: case 20:
  2707                           
  2708                           ;main.c: 65: break;
  2709                           
  2710                           
  2711                           ;main.c: 68: if(bordaSubidaB1()) aux = 3;
  2712  0092  160A  118A  2246  120A  118A  	fcall	_bordaSubidaB1
  2713  0097  3A00               	xorlw	0
  2714  0098  1903               	skipnz
  2715  0099  28A0               	goto	l4633
  2716  009A  3003               	movlw	3
  2717  009B  1283               	bcf	3,5	;RP0=0, select bank0
  2718  009C  1303               	bcf	3,6	;RP1=0, select bank0
  2719  009D  00E8               	movwf	main@aux
  2720  009E  3000               	movlw	0
  2721  009F  00E9               	movwf	main@aux+1
  2722  00A0                     l4633:	
  2723                           
  2724                           ;main.c: 69: if(bordaSubidaB2()) aux = 1;
  2725  00A0  160A  118A  2260  120A  118A  	fcall	_bordaSubidaB2
  2726  00A5  3A00               	xorlw	0
  2727  00A6  1903               	skipnz
  2728  00A7  28AE               	goto	l4637
  2729  00A8  3001               	movlw	1
  2730  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  2731  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  2732  00AB  00E8               	movwf	main@aux
  2733  00AC  3000               	movlw	0
  2734  00AD  00E9               	movwf	main@aux+1
  2735  00AE                     l4637:	
  2736                           
  2737                           ;main.c: 70: if(bordaSubidaB3()) aux = 200;
  2738  00AE  160A  118A  227A  120A  118A  	fcall	_bordaSubidaB3
  2739  00B3  3A00               	xorlw	0
  2740  00B4  1903               	skipnz
  2741  00B5  2C81               	goto	l5019
  2742  00B6  30C8               	movlw	200
  2743  00B7  2C72               	goto	L45
  2744  00B8                     l4641:	
  2745                           ;main.c: 73: case 30:
  2746                           
  2747                           ;main.c: 71: break;
  2748                           
  2749                           
  2750                           ;main.c: 74: if(bordaSubidaB1()) aux = 1;
  2751  00B8  160A  118A  2246  120A  118A  	fcall	_bordaSubidaB1
  2752  00BD  3A00               	xorlw	0
  2753  00BE  1903               	skipnz
  2754  00BF  28C6               	goto	l4645
  2755  00C0  3001               	movlw	1
  2756  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  2757  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  2758  00C3  00E8               	movwf	main@aux
  2759  00C4  3000               	movlw	0
  2760  00C5  00E9               	movwf	main@aux+1
  2761  00C6                     l4645:	
  2762                           
  2763                           ;main.c: 75: if(bordaSubidaB2()) aux = 2;
  2764  00C6  160A  118A  2260  120A  118A  	fcall	_bordaSubidaB2
  2765  00CB  3A00               	xorlw	0
  2766  00CC  1903               	skipnz
  2767  00CD  28D4               	goto	l4649
  2768  00CE  3002               	movlw	2
  2769  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  2770  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  2771  00D1  00E8               	movwf	main@aux
  2772  00D2  3000               	movlw	0
  2773  00D3  00E9               	movwf	main@aux+1
  2774  00D4                     l4649:	
  2775                           
  2776                           ;main.c: 76: if(bordaSubidaB3()) aux = 300;
  2777  00D4  160A  118A  227A  120A  118A  	fcall	_bordaSubidaB3
  2778  00D9  3A00               	xorlw	0
  2779  00DA  1903               	skipnz
  2780  00DB  28E2               	goto	l4653
  2781  00DC  302C               	movlw	44
  2782  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  2783  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  2784  00DF  00E8               	movwf	main@aux
  2785  00E0  3001               	movlw	1
  2786  00E1  00E9               	movwf	main@aux+1
  2787  00E2                     l4653:	
  2788                           
  2789                           ;main.c: 77: if(B2() & B3()) aux = 666;
  2790  00E2  160A  118A  2188  120A  118A  	fcall	_B3
  2791  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  2792  00E8  1303               	bcf	3,6	;RP1=0, select bank0
  2793  00E9  00E2               	movwf	??_main
  2794  00EA  160A  118A  2193  120A  118A  	fcall	_B2
  2795  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  2796  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  2797  00F1  0562               	andwf	??_main,w
  2798  00F2  1903               	btfsc	3,2
  2799  00F3  2C81               	goto	l5019
  2800  00F4  309A               	movlw	154
  2801  00F5  00E8               	movwf	main@aux
  2802  00F6  3002               	movlw	2
  2803  00F7  2C76               	goto	L34
  2804  00F8                     l4657:	
  2805                           ;main.c: 82: case 100:
  2806                           
  2807                           ;main.c: 78: break;
  2808                           
  2809                           
  2810                           ;main.c: 83: cmdLCD(0x01);
  2811  00F8  3001               	movlw	1
  2812  00F9  160A  118A  25C2  120A  118A  	fcall	_cmdLCD
  2813                           
  2814                           ;main.c: 84: writeLCD(0,0,"MODULO  DESEJADO");
  2815  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  2816  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  2817  0100  01CF               	clrf	writeLCD@y
  2818  0101  30CD               	movlw	low (STR_107| (0+32768))
  2819  0102  00D0               	movwf	writeLCD@ptr
  2820  0103  3086               	movlw	high (STR_107| (0+32768))
  2821  0104  00D1               	movwf	writeLCD@ptr+1
  2822  0105  3000               	movlw	0
  2823  0106  160A  118A  2426  120A  118A  	fcall	_writeLCD
  2824                           
  2825                           ;main.c: 85: writeLCD(0,1,"ESTEIRA      CLP");
  2826  010B  1283               	bcf	3,5	;RP0=0, select bank0
  2827  010C  1303               	bcf	3,6	;RP1=0, select bank0
  2828  010D  01CF               	clrf	writeLCD@y
  2829  010E  0ACF               	incf	writeLCD@y,f
  2830  010F  30DE               	movlw	low (STR_108| (0+32768))
  2831  0110  00D0               	movwf	writeLCD@ptr
  2832  0111  3086               	movlw	high (STR_108| (0+32768))
  2833  0112  00D1               	movwf	writeLCD@ptr+1
  2834  0113  3000               	movlw	0
  2835  0114  160A  118A  2426  120A  118A  	fcall	_writeLCD
  2836                           
  2837                           ;main.c: 86: aux = 110;
  2838  0119  306E               	movlw	110
  2839  011A  2C72               	goto	L45
  2840  011B                     l4665:	
  2841                           ;main.c: 91: {
  2842                           ;main.c: 92: case 0:
  2843                           
  2844                           ;main.c: 90: switch(i)
  2845                           
  2846                           ;main.c: 89: case 110:
  2847                           
  2848                           ;main.c: 87: break;
  2849                           
  2850                           
  2851                           ;main.c: 93: textSelectionEST();
  2852  011B  160A  118A  256D  120A  118A  	fcall	_textSelectionEST
  2853                           
  2854                           ;main.c: 94: if(bordaSubidaB2()) i = 1;
  2855  0120  160A  118A  2260  120A  118A  	fcall	_bordaSubidaB2
  2856  0125  3A00               	xorlw	0
  2857  0126  1903               	skipnz
  2858  0127  292C               	goto	l4671
  2859  0128  1283               	bcf	3,5	;RP0=0, select bank0
  2860  0129  1303               	bcf	3,6	;RP1=0, select bank0
  2861  012A  01E6               	clrf	main@i
  2862  012B  0AE6               	incf	main@i,f
  2863  012C                     l4671:	
  2864                           
  2865                           ;main.c: 95: if(bordaSubidaB3()) aux = 111;
  2866  012C  160A  118A  227A  120A  118A  	fcall	_bordaSubidaB3
  2867  0131  3A00               	xorlw	0
  2868  0132  1903               	skipnz
  2869  0133  2954               	goto	l4689
  2870  0134  306F               	movlw	111
  2871  0135  294F               	goto	L49
  2872  0136                     l4679:	
  2873                           ;main.c: 99: case 1:
  2874                           
  2875                           ;main.c: 97: break;
  2876                           
  2877                           ;main.c: 96: if(B1() & B2()) aux = 10;
  2878                           
  2879                           
  2880                           ;main.c: 100: textSelectionCLP();
  2881  0136  160A  118A  2518  120A  118A  	fcall	_textSelectionCLP
  2882                           
  2883                           ;main.c: 101: if(bordaSubidaB1()) i=0;
  2884  013B  160A  118A  2246  120A  118A  	fcall	_bordaSubidaB1
  2885  0140  3A00               	xorlw	0
  2886  0141  1903               	skipnz
  2887  0142  2946               	goto	l4685
  2888  0143  1283               	bcf	3,5	;RP0=0, select bank0
  2889  0144  1303               	bcf	3,6	;RP1=0, select bank0
  2890  0145  01E6               	clrf	main@i
  2891  0146                     l4685:	
  2892                           
  2893                           ;main.c: 102: if(bordaSubidaB3()) aux = 112;
  2894  0146  160A  118A  227A  120A  118A  	fcall	_bordaSubidaB3
  2895  014B  3A00               	xorlw	0
  2896  014C  1903               	skipnz
  2897  014D  2954               	goto	l4689
  2898  014E  3070               	movlw	112
  2899  014F                     L49:	
  2900  014F  1283               	bcf	3,5	;RP0=0, select bank0
  2901  0150  1303               	bcf	3,6	;RP1=0, select bank0
  2902  0151  00E8               	movwf	main@aux
  2903  0152  3000               	movlw	0
  2904  0153  00E9               	movwf	main@aux+1
  2905  0154                     l4689:	
  2906                           
  2907                           ;main.c: 103: if(B1() & B2()) aux = 10;
  2908  0154  160A  118A  2193  120A  118A  	fcall	_B2
  2909  0159  1283               	bcf	3,5	;RP0=0, select bank0
  2910  015A  1303               	bcf	3,6	;RP1=0, select bank0
  2911  015B  00E2               	movwf	??_main
  2912  015C  160A  118A  2183  120A  118A  	fcall	_B1
  2913  0161  1283               	bcf	3,5	;RP0=0, select bank0
  2914  0162  1303               	bcf	3,6	;RP1=0, select bank0
  2915  0163  0562               	andwf	??_main,w
  2916  0164  1903               	btfsc	3,2
  2917  0165  2C81               	goto	l5019
  2918  0166  300A               	movlw	10
  2919  0167  2C74               	goto	L36
  2920  0168                     l4695:	
  2921                           ;main.c: 106: }
  2922                           
  2923                           ;main.c: 104: break;
  2924                           
  2925  0168  0866               	movf	main@i,w
  2926                           
  2927                           ; Switch size 1, requested type "space"
  2928                           ; Number of cases is 2, Range of values is 0 to 1
  2929                           ; switch strategies available:
  2930                           ; Name         Instructions Cycles
  2931                           ; simple_byte            7     4 (average)
  2932                           ; direct_byte           14     8 (fixed)
  2933                           ; jumptable            260     6 (fixed)
  2934                           ;	Chosen strategy is simple_byte
  2935  0169  3A00               	xorlw	0	; case 0
  2936  016A  1903               	skipnz
  2937  016B  291B               	goto	l4665
  2938  016C  3A01               	xorlw	1	; case 1
  2939  016D  1903               	skipnz
  2940  016E  2936               	goto	l4679
  2941  016F  2C81               	goto	l5019
  2942                           
  2943                           ;main.c: 107: break;
  2944  0170  2C81               	goto	l5019
  2945  0171                     l4697:	
  2946                           ;main.c: 109: case 111:
  2947                           
  2948                           
  2949                           ;main.c: 110: cmdLCD(0x01);
  2950  0171  3001               	movlw	1
  2951  0172  160A  118A  25C2  120A  118A  	fcall	_cmdLCD
  2952                           
  2953                           ;main.c: 111: writeLCD(0,0," Enviando ");
  2954  0177  1283               	bcf	3,5	;RP0=0, select bank0
  2955  0178  1303               	bcf	3,6	;RP1=0, select bank0
  2956  0179  01CF               	clrf	writeLCD@y
  2957  017A  3074               	movlw	low (STR_109| (0+32768))
  2958  017B  00D0               	movwf	writeLCD@ptr
  2959  017C  3088               	movlw	high (STR_109| (0+32768))
  2960  017D  00D1               	movwf	writeLCD@ptr+1
  2961  017E  3000               	movlw	0
  2962  017F  160A  118A  2426  120A  118A  	fcall	_writeLCD
  2963                           
  2964                           ;main.c: 112: writeLCD(0,1," P/ Esteira ");
  2965  0184  1283               	bcf	3,5	;RP0=0, select bank0
  2966  0185  1303               	bcf	3,6	;RP1=0, select bank0
  2967  0186  01CF               	clrf	writeLCD@y
  2968  0187  0ACF               	incf	writeLCD@y,f
  2969  0188  3042               	movlw	low (STR_110| (0+32768))
  2970  0189  00D0               	movwf	writeLCD@ptr
  2971  018A  3088               	movlw	high (STR_110| (0+32768))
  2972  018B  00D1               	movwf	writeLCD@ptr+1
  2973  018C  3000               	movlw	0
  2974  018D  160A  118A  2426  120A  118A  	fcall	_writeLCD
  2975                           
  2976                           ;main.c: 113: slave1();
  2977  0192  120A  158A  2476  120A  118A  	fcall	_slave1
  2978  0197  29BE               	goto	L50
  2979  0198                     l4709:	
  2980                           ;main.c: 118: case 112:
  2981                           
  2982                           ;main.c: 116: break;
  2983                           
  2984                           ;main.c: 115: aux = 1;
  2985                           
  2986                           ;main.c: 114: textLoading();
  2987                           
  2988                           
  2989                           ;main.c: 119: cmdLCD(0x01);
  2990  0198  3001               	movlw	1
  2991  0199  160A  118A  25C2  120A  118A  	fcall	_cmdLCD
  2992                           
  2993                           ;main.c: 120: writeLCD(0,0," Enviando ");
  2994  019E  1283               	bcf	3,5	;RP0=0, select bank0
  2995  019F  1303               	bcf	3,6	;RP1=0, select bank0
  2996  01A0  01CF               	clrf	writeLCD@y
  2997  01A1  3074               	movlw	low (STR_109| (0+32768))
  2998  01A2  00D0               	movwf	writeLCD@ptr
  2999  01A3  3088               	movlw	high (STR_109| (0+32768))
  3000  01A4  00D1               	movwf	writeLCD@ptr+1
  3001  01A5  3000               	movlw	0
  3002  01A6  160A  118A  2426  120A  118A  	fcall	_writeLCD
  3003                           
  3004                           ;main.c: 121: writeLCD(0,1," P/ CLP ");
  3005  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  3006  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  3007  01AD  01CF               	clrf	writeLCD@y
  3008  01AE  0ACF               	incf	writeLCD@y,f
  3009  01AF  3094               	movlw	low (STR_112| (0+32768))
  3010  01B0  00D0               	movwf	writeLCD@ptr
  3011  01B1  3088               	movlw	high (STR_112| (0+32768))
  3012  01B2  00D1               	movwf	writeLCD@ptr+1
  3013  01B3  3000               	movlw	0
  3014  01B4  160A  118A  2426  120A  118A  	fcall	_writeLCD
  3015                           
  3016                           ;main.c: 122: master1();
  3017  01B9  120A  158A  232B  120A  118A  	fcall	_master1
  3018  01BE                     L50:	
  3019                           
  3020                           ;main.c: 123: textLoading();
  3021  01BE  120A  158A  2530  120A  118A  	fcall	_textLoading
  3022  01C3                     L48:	
  3023                           
  3024                           ;main.c: 124: aux = 1;
  3025  01C3  3001               	movlw	1
  3026  01C4  2C72               	goto	L45
  3027  01C5                     l4721:	
  3028                           ;main.c: 131: case 200:
  3029                           
  3030                           ;main.c: 125: break;
  3031                           
  3032                           
  3033                           ;main.c: 132: cmdLCD(0x01);
  3034  01C5  3001               	movlw	1
  3035  01C6  160A  118A  25C2  120A  118A  	fcall	_cmdLCD
  3036                           
  3037                           ;main.c: 133: writeLCD(0,0," CONFIRMA TROCA ");
  3038  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  3039  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  3040  01CD  01CF               	clrf	writeLCD@y
  3041  01CE  309A               	movlw	low (STR_113| (0+32768))
  3042  01CF  00D0               	movwf	writeLCD@ptr
  3043  01D0  3086               	movlw	high (STR_113| (0+32768))
  3044  01D1  00D1               	movwf	writeLCD@ptr+1
  3045  01D2  3000               	movlw	0
  3046  01D3  160A  118A  2426  120A  118A  	fcall	_writeLCD
  3047                           
  3048                           ;main.c: 134: writeLCD(0,1,"    DE DADOS    ");
  3049  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  3050  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  3051  01DA  01CF               	clrf	writeLCD@y
  3052  01DB  0ACF               	incf	writeLCD@y,f
  3053  01DC  3034               	movlw	low (STR_114| (0+32768))
  3054  01DD  00D0               	movwf	writeLCD@ptr
  3055  01DE  3086               	movlw	high (STR_114| (0+32768))
  3056  01DF  00D1               	movwf	writeLCD@ptr+1
  3057  01E0  3000               	movlw	0
  3058  01E1  160A  118A  2426  120A  118A  	fcall	_writeLCD
  3059                           
  3060                           ;main.c: 135: aux = 210;
  3061  01E6  30D2               	movlw	210
  3062  01E7  2C72               	goto	L45
  3063  01E8                     l4729:	
  3064                           ;main.c: 138: case 210:
  3065                           
  3066                           ;main.c: 136: break;
  3067                           
  3068                           
  3069                           ;main.c: 141: {
  3070                           ;main.c: 142: cmdLCD(0x01);
  3071  01E8  3001               	movlw	1
  3072  01E9  160A  118A  25C2  120A  118A  	fcall	_cmdLCD
  3073                           
  3074                           ;main.c: 143: writeLCD(0,0,"    TROCANDO    ");
  3075  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  3076  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  3077  01F0  01CF               	clrf	writeLCD@y
  3078  01F1  3023               	movlw	low (STR_115| (0+32768))
  3079  01F2  00D0               	movwf	writeLCD@ptr
  3080  01F3  3086               	movlw	high (STR_115| (0+32768))
  3081  01F4  00D1               	movwf	writeLCD@ptr+1
  3082  01F5  3000               	movlw	0
  3083  01F6  160A  118A  2426  120A  118A  	fcall	_writeLCD
  3084                           
  3085                           ;main.c: 144: writeLCD(0,1,"   INFORMACAO   ");
  3086  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  3087  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  3088  01FD  01CF               	clrf	writeLCD@y
  3089  01FE  0ACF               	incf	writeLCD@y,f
  3090  01FF  3045               	movlw	low (STR_116| (0+32768))
  3091  0200  00D0               	movwf	writeLCD@ptr
  3092  0201  3086               	movlw	high (STR_116| (0+32768))
  3093  0202  00D1               	movwf	writeLCD@ptr+1
  3094  0203  3000               	movlw	0
  3095  0204  160A  118A  2426  120A  118A  	fcall	_writeLCD
  3096                           
  3097                           ;main.c: 146: char t = 1;
  3098  0209  1283               	bcf	3,5	;RP0=0, select bank0
  3099  020A  1303               	bcf	3,6	;RP1=0, select bank0
  3100  020B  01E5               	clrf	main@t
  3101  020C  0AE5               	incf	main@t,f
  3102                           
  3103                           ;main.c: 148: PORTBbits.RB4 = 0;
  3104  020D  1206               	bcf	6,4	;volatile
  3105  020E                     l4743:	
  3106                           ;main.c: 150: while(t)
  3107                           
  3108  020E  1283               	bcf	3,5	;RP0=0, select bank0
  3109  020F  1303               	bcf	3,6	;RP1=0, select bank0
  3110  0210  0865               	movf	main@t,w
  3111  0211  1903               	btfsc	3,2
  3112  0212  2A1E               	goto	l383
  3113                           
  3114                           ;main.c: 151: {
  3115                           ;main.c: 153: recebe();
  3116  0213  160A  118A  21C2  120A  118A  	fcall	_recebe
  3117                           
  3118                           ;main.c: 154: transmite();
  3119  0218  160A  118A  23A0  120A  118A  	fcall	_transmite
  3120  021D  2A0E               	goto	l4743
  3121  021E                     l383:	
  3122                           
  3123                           ;main.c: 157: }
  3124                           ;main.c: 158: PORTBbits.RB4 = 1;
  3125  021E  1606               	bsf	6,4	;volatile
  3126                           
  3127                           ;main.c: 159: aux = 2;
  3128  021F  3002               	movlw	2
  3129  0220  2C74               	goto	L36
  3130  0221                     l4747:	
  3131                           ;main.c: 165: case 300:
  3132                           
  3133                           ;main.c: 160: }
  3134                           ;main.c: 161: break;
  3135                           
  3136                           
  3137                           ;main.c: 166: cmdLCD(0x01);
  3138  0221  3001               	movlw	1
  3139  0222  160A  118A  25C2  120A  118A  	fcall	_cmdLCD
  3140                           
  3141                           ;main.c: 167: writeLCD(0,0,"BLUETOOTH <---->");
  3142  0227  1283               	bcf	3,5	;RP0=0, select bank0
  3143  0228  1303               	bcf	3,6	;RP1=0, select bank0
  3144  0229  01CF               	clrf	writeLCD@y
  3145  022A  30BC               	movlw	low (STR_117| (0+32768))
  3146  022B  00D0               	movwf	writeLCD@ptr
  3147  022C  3086               	movlw	high (STR_117| (0+32768))
  3148  022D  00D1               	movwf	writeLCD@ptr+1
  3149  022E  3000               	movlw	0
  3150  022F  160A  118A  2426  120A  118A  	fcall	_writeLCD
  3151                           
  3152                           ;main.c: 168: aux = 301;
  3153  0234  302D               	movlw	45
  3154  0235  2AB0               	goto	L37
  3155  0236                     l4753:	
  3156                           ;main.c: 171: case 301:
  3157                           
  3158                           ;main.c: 169: break;
  3159                           
  3160                           
  3161                           ;main.c: 172: writeLCD(0,1,"PAREAR      BT  ");
  3162  0236  01CF               	clrf	writeLCD@y
  3163  0237  0ACF               	incf	writeLCD@y,f
  3164  0238  3078               	movlw	low (STR_118| (0+32768))
  3165  0239  00D0               	movwf	writeLCD@ptr
  3166  023A  3086               	movlw	high (STR_118| (0+32768))
  3167  023B  00D1               	movwf	writeLCD@ptr+1
  3168  023C  3000               	movlw	0
  3169  023D  160A  118A  2426  120A  118A  	fcall	_writeLCD
  3170                           
  3171                           ;main.c: 173: if(bordaSubidaB1() || bordaSubidaB2()) aux = 302;
  3172  0242  160A  118A  2246  120A  118A  	fcall	_bordaSubidaB1
  3173  0247  3A00               	xorlw	0
  3174  0248  1D03               	skipz
  3175  0249  2A52               	goto	l4759
  3176  024A  160A  118A  2260  120A  118A  	fcall	_bordaSubidaB2
  3177  024F  3A00               	xorlw	0
  3178  0250  1903               	skipnz
  3179  0251  2A58               	goto	l4761
  3180  0252                     l4759:	
  3181  0252  302E               	movlw	46
  3182  0253  1283               	bcf	3,5	;RP0=0, select bank0
  3183  0254  1303               	bcf	3,6	;RP1=0, select bank0
  3184  0255  00E8               	movwf	main@aux
  3185  0256  3001               	movlw	1
  3186  0257  00E9               	movwf	main@aux+1
  3187  0258                     l4761:	
  3188                           
  3189                           ;main.c: 174: if(bordaSubidaB3()) aux = 305;
  3190  0258  160A  118A  227A  120A  118A  	fcall	_bordaSubidaB3
  3191  025D  3A00               	xorlw	0
  3192  025E  1903               	skipnz
  3193  025F  2C2A               	goto	l4941
  3194  0260  3031               	movlw	49
  3195  0261  2C25               	goto	L51
  3196  0262                     l4769:	
  3197                           ;main.c: 178: case 302:
  3198                           
  3199                           ;main.c: 176: break;
  3200                           
  3201                           ;main.c: 175: if(B1() & B2()) aux = 30;
  3202                           
  3203                           
  3204                           ;main.c: 179: writeLCD(0,1,"DESCONECTAR BT  ");
  3205  0262  01CF               	clrf	writeLCD@y
  3206  0263  0ACF               	incf	writeLCD@y,f
  3207  0264  3089               	movlw	low (STR_119| (0+32768))
  3208  0265  00D0               	movwf	writeLCD@ptr
  3209  0266  3086               	movlw	high (STR_119| (0+32768))
  3210  0267  00D1               	movwf	writeLCD@ptr+1
  3211  0268  3000               	movlw	0
  3212  0269  160A  118A  2426  120A  118A  	fcall	_writeLCD
  3213                           
  3214                           ;main.c: 180: if(bordaSubidaB1() || bordaSubidaB2()) aux = 301;
  3215  026E  160A  118A  2246  120A  118A  	fcall	_bordaSubidaB1
  3216  0273  3A00               	xorlw	0
  3217  0274  1D03               	skipz
  3218  0275  2A7E               	goto	l4775
  3219  0276  160A  118A  2260  120A  118A  	fcall	_bordaSubidaB2
  3220  027B  3A00               	xorlw	0
  3221  027C  1903               	skipnz
  3222  027D  2A84               	goto	l4777
  3223  027E                     l4775:	
  3224  027E  302D               	movlw	45
  3225  027F  1283               	bcf	3,5	;RP0=0, select bank0
  3226  0280  1303               	bcf	3,6	;RP1=0, select bank0
  3227  0281  00E8               	movwf	main@aux
  3228  0282  3001               	movlw	1
  3229  0283  00E9               	movwf	main@aux+1
  3230  0284                     l4777:	
  3231                           
  3232                           ;main.c: 181: if(bordaSubidaB3()) aux = 306;
  3233  0284  160A  118A  227A  120A  118A  	fcall	_bordaSubidaB3
  3234  0289  3A00               	xorlw	0
  3235  028A  1903               	skipnz
  3236  028B  2C2A               	goto	l4941
  3237  028C  3032               	movlw	50
  3238  028D  2C25               	goto	L51
  3239  028E                     l4785:	
  3240                           ;main.c: 186: case 305:
  3241                           
  3242                           ;main.c: 183: break;
  3243                           
  3244                           ;main.c: 182: if(B1() & B2()) aux = 30;
  3245                           
  3246                           
  3247                           ;main.c: 187: cmdLCD(0x01);
  3248  028E  3001               	movlw	1
  3249  028F  160A  118A  25C2  120A  118A  	fcall	_cmdLCD
  3250                           
  3251                           ;main.c: 188: writeLCD(0,0," PAREAR COM IP  ");
  3252  0294  1283               	bcf	3,5	;RP0=0, select bank0
  3253  0295  1303               	bcf	3,6	;RP1=0, select bank0
  3254  0296  01CF               	clrf	writeLCD@y
  3255  0297  3067               	movlw	low (STR_120| (0+32768))
  3256  0298  00D0               	movwf	writeLCD@ptr
  3257  0299  3086               	movlw	high (STR_120| (0+32768))
  3258  029A  00D1               	movwf	writeLCD@ptr+1
  3259  029B  3000               	movlw	0
  3260  029C  160A  118A  2426  120A  118A  	fcall	_writeLCD
  3261                           
  3262                           ;main.c: 189: writeLCD(0,1,"1 2 3 4  5 6 7 8");
  3263  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  3264  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  3265  02A3  01CF               	clrf	writeLCD@y
  3266  02A4  0ACF               	incf	writeLCD@y,f
  3267  02A5  30AB               	movlw	low (STR_121| (0+32768))
  3268  02A6  00D0               	movwf	writeLCD@ptr
  3269  02A7  3086               	movlw	high (STR_121| (0+32768))
  3270  02A8  00D1               	movwf	writeLCD@ptr+1
  3271  02A9  3000               	movlw	0
  3272  02AA  160A  118A  2426  120A  118A  	fcall	_writeLCD
  3273                           
  3274                           ;main.c: 190: aux = 310;
  3275  02AF  3036               	movlw	54
  3276  02B0                     L37:	
  3277  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  3278  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  3279  02B2  00E8               	movwf	main@aux
  3280  02B3  3001               	movlw	1
  3281  02B4  2C76               	goto	L34
  3282  02B5                     l4793:	
  3283                           ;main.c: 193: case 306:
  3284                           
  3285                           ;main.c: 191: break;
  3286                           
  3287                           
  3288                           ;main.c: 194: cmdLCD(0x01);
  3289  02B5  3001               	movlw	1
  3290  02B6  160A  118A  25C2  120A  118A  	fcall	_cmdLCD
  3291                           
  3292                           ;main.c: 195: writeLCD(0,0,"DESCONECTANDO   ");
  3293  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  3294  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  3295  02BD  01CF               	clrf	writeLCD@y
  3296  02BE  3056               	movlw	low (STR_122| (0+32768))
  3297  02BF  00D0               	movwf	writeLCD@ptr
  3298  02C0  3086               	movlw	high (STR_122| (0+32768))
  3299  02C1  00D1               	movwf	writeLCD@ptr+1
  3300  02C2  3000               	movlw	0
  3301  02C3  160A  118A  2426  120A  118A  	fcall	_writeLCD
  3302                           
  3303                           ;main.c: 197: _delay((unsigned long)((500)*(20000000/4000.0)));
  3304  02C8  300D               	movlw	13
  3305  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  3306  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  3307  02CB  00E4               	movwf	??_main+2
  3308  02CC  30AF               	movlw	175
  3309  02CD  00E3               	movwf	??_main+1
  3310  02CE  30B5               	movlw	181
  3311  02CF  00E2               	movwf	??_main
  3312  02D0                     u3917:	
  3313  02D0  0BE2               	decfsz	??_main,f
  3314  02D1  2AD0               	goto	u3917
  3315  02D2  0BE3               	decfsz	??_main+1,f
  3316  02D3  2AD0               	goto	u3917
  3317  02D4  0BE4               	decfsz	??_main+2,f
  3318  02D5  2AD0               	goto	u3917
  3319  02D6  2AD7               	nop2
  3320  02D7  2C71               	goto	L35
  3321  02D8                     l4801:	
  3322                           ;main.c: 204: {
  3323                           ;main.c: 205: case 0:
  3324                           
  3325                           ;main.c: 203: switch(a)
  3326                           
  3327                           ;main.c: 202: case 310:
  3328                           
  3329                           ;main.c: 199: break;
  3330                           
  3331                           ;main.c: 198: aux = 3;
  3332                           
  3333                           
  3334                           ;main.c: 206: textSelection1();
  3335  02D8  160A  118A  26D7  120A  118A  	fcall	_textSelection1
  3336                           
  3337                           ;main.c: 207: if(bordaSubidaB1()) a=7;
  3338  02DD  160A  118A  2246  120A  118A  	fcall	_bordaSubidaB1
  3339  02E2  3A00               	xorlw	0
  3340  02E3  1903               	skipnz
  3341  02E4  2AEB               	goto	l4807
  3342  02E5  3007               	movlw	7
  3343  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  3344  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  3345  02E8  00E2               	movwf	??_main
  3346  02E9  0862               	movf	??_main,w
  3347  02EA  00E7               	movwf	main@a
  3348  02EB                     l4807:	
  3349                           
  3350                           ;main.c: 208: if(bordaSubidaB2()) a=1;
  3351  02EB  160A  118A  2260  120A  118A  	fcall	_bordaSubidaB2
  3352  02F0  3A00               	xorlw	0
  3353  02F1  1903               	skipnz
  3354  02F2  2AF7               	goto	l4811
  3355  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  3356  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  3357  02F5  01E7               	clrf	main@a
  3358  02F6  0AE7               	incf	main@a,f
  3359  02F7                     l4811:	
  3360                           
  3361                           ;main.c: 209: if(bordaSubidaB3()) aux = 311;
  3362  02F7  160A  118A  227A  120A  118A  	fcall	_bordaSubidaB3
  3363  02FC  3A00               	xorlw	0
  3364  02FD  1903               	skipnz
  3365  02FE  2C2A               	goto	l4941
  3366  02FF  3037               	movlw	55
  3367  0300  2C25               	goto	L51
  3368  0301                     l4819:	
  3369                           ;main.c: 213: case 1:
  3370                           
  3371                           ;main.c: 211: break;
  3372                           
  3373                           ;main.c: 210: if(B1() & B2()) aux = 30;
  3374                           
  3375                           
  3376                           ;main.c: 214: textSelection2();
  3377  0301  160A  118A  273A  120A  118A  	fcall	_textSelection2
  3378                           
  3379                           ;main.c: 215: if(bordaSubidaB1()) a=0;
  3380  0306  160A  118A  2246  120A  118A  	fcall	_bordaSubidaB1
  3381  030B  3A00               	xorlw	0
  3382  030C  1903               	skipnz
  3383  030D  2B11               	goto	l4825
  3384  030E  1283               	bcf	3,5	;RP0=0, select bank0
  3385  030F  1303               	bcf	3,6	;RP1=0, select bank0
  3386  0310  01E7               	clrf	main@a
  3387  0311                     l4825:	
  3388                           
  3389                           ;main.c: 216: if(bordaSubidaB2()) a=2;
  3390  0311  160A  118A  2260  120A  118A  	fcall	_bordaSubidaB2
  3391  0316  3A00               	xorlw	0
  3392  0317  1903               	skipnz
  3393  0318  2B1F               	goto	l4829
  3394  0319  3002               	movlw	2
  3395  031A  1283               	bcf	3,5	;RP0=0, select bank0
  3396  031B  1303               	bcf	3,6	;RP1=0, select bank0
  3397  031C  00E2               	movwf	??_main
  3398  031D  0862               	movf	??_main,w
  3399  031E  00E7               	movwf	main@a
  3400  031F                     l4829:	
  3401                           
  3402                           ;main.c: 217: if(bordaSubidaB3()) aux = 312;
  3403  031F  160A  118A  227A  120A  118A  	fcall	_bordaSubidaB3
  3404  0324  3A00               	xorlw	0
  3405  0325  1903               	skipnz
  3406  0326  2C2A               	goto	l4941
  3407  0327  3038               	movlw	56
  3408  0328  2C25               	goto	L51
  3409  0329                     l4837:	
  3410                           ;main.c: 221: case 2:
  3411                           
  3412                           ;main.c: 219: break;
  3413                           
  3414                           ;main.c: 218: if(B1() & B2()) aux = 30;
  3415                           
  3416                           
  3417                           ;main.c: 222: textSelection3();
  3418  0329  160A  118A  279D  120A  118A  	fcall	_textSelection3
  3419                           
  3420                           ;main.c: 223: if(bordaSubidaB1()) a=1;
  3421  032E  160A  118A  2246  120A  118A  	fcall	_bordaSubidaB1
  3422  0333  3A00               	xorlw	0
  3423  0334  1903               	skipnz
  3424  0335  2B3A               	goto	l4843
  3425  0336  1283               	bcf	3,5	;RP0=0, select bank0
  3426  0337  1303               	bcf	3,6	;RP1=0, select bank0
  3427  0338  01E7               	clrf	main@a
  3428  0339  0AE7               	incf	main@a,f
  3429  033A                     l4843:	
  3430                           
  3431                           ;main.c: 224: if(bordaSubidaB2()) a=3;
  3432  033A  160A  118A  2260  120A  118A  	fcall	_bordaSubidaB2
  3433  033F  3A00               	xorlw	0
  3434  0340  1903               	skipnz
  3435  0341  2B48               	goto	l4847
  3436  0342  3003               	movlw	3
  3437  0343  1283               	bcf	3,5	;RP0=0, select bank0
  3438  0344  1303               	bcf	3,6	;RP1=0, select bank0
  3439  0345  00E2               	movwf	??_main
  3440  0346  0862               	movf	??_main,w
  3441  0347  00E7               	movwf	main@a
  3442  0348                     l4847:	
  3443                           
  3444                           ;main.c: 225: if(bordaSubidaB3()) aux = 313;
  3445  0348  160A  118A  227A  120A  118A  	fcall	_bordaSubidaB3
  3446  034D  3A00               	xorlw	0
  3447  034E  1903               	skipnz
  3448  034F  2C2A               	goto	l4941
  3449  0350  3039               	movlw	57
  3450  0351  2C25               	goto	L51
  3451  0352                     l4855:	
  3452                           ;main.c: 229: case 3:
  3453                           
  3454                           ;main.c: 227: break;
  3455                           
  3456                           ;main.c: 226: if(B1() & B2()) aux = 30;
  3457                           
  3458                           
  3459                           ;main.c: 230: textSelection4();
  3460  0352  120A  158A  213C  120A  118A  	fcall	_textSelection4
  3461                           
  3462                           ;main.c: 231: if(bordaSubidaB1()) a=2;
  3463  0357  160A  118A  2246  120A  118A  	fcall	_bordaSubidaB1
  3464  035C  3A00               	xorlw	0
  3465  035D  1903               	skipnz
  3466  035E  2B65               	goto	l4861
  3467  035F  3002               	movlw	2
  3468  0360  1283               	bcf	3,5	;RP0=0, select bank0
  3469  0361  1303               	bcf	3,6	;RP1=0, select bank0
  3470  0362  00E2               	movwf	??_main
  3471  0363  0862               	movf	??_main,w
  3472  0364  00E7               	movwf	main@a
  3473  0365                     l4861:	
  3474                           
  3475                           ;main.c: 232: if(bordaSubidaB2()) a=4;
  3476  0365  160A  118A  2260  120A  118A  	fcall	_bordaSubidaB2
  3477  036A  3A00               	xorlw	0
  3478  036B  1903               	skipnz
  3479  036C  2B73               	goto	l4865
  3480  036D  3004               	movlw	4
  3481  036E  1283               	bcf	3,5	;RP0=0, select bank0
  3482  036F  1303               	bcf	3,6	;RP1=0, select bank0
  3483  0370  00E2               	movwf	??_main
  3484  0371  0862               	movf	??_main,w
  3485  0372  00E7               	movwf	main@a
  3486  0373                     l4865:	
  3487                           
  3488                           ;main.c: 233: if(bordaSubidaB3()) aux = 314;
  3489  0373  160A  118A  227A  120A  118A  	fcall	_bordaSubidaB3
  3490  0378  3A00               	xorlw	0
  3491  0379  1903               	skipnz
  3492  037A  2C2A               	goto	l4941
  3493  037B  303A               	movlw	58
  3494  037C  2C25               	goto	L51
  3495  037D                     l4873:	
  3496                           ;main.c: 237: case 4:
  3497                           
  3498                           ;main.c: 235: break;
  3499                           
  3500                           ;main.c: 234: if(B1() & B2()) aux = 30;
  3501                           
  3502                           
  3503                           ;main.c: 238: textSelection5();
  3504  037D  120A  158A  219F  120A  118A  	fcall	_textSelection5
  3505                           
  3506                           ;main.c: 239: if(bordaSubidaB1()) a=3;
  3507  0382  160A  118A  2246  120A  118A  	fcall	_bordaSubidaB1
  3508  0387  3A00               	xorlw	0
  3509  0388  1903               	skipnz
  3510  0389  2B90               	goto	l4879
  3511  038A  3003               	movlw	3
  3512  038B  1283               	bcf	3,5	;RP0=0, select bank0
  3513  038C  1303               	bcf	3,6	;RP1=0, select bank0
  3514  038D  00E2               	movwf	??_main
  3515  038E  0862               	movf	??_main,w
  3516  038F  00E7               	movwf	main@a
  3517  0390                     l4879:	
  3518                           
  3519                           ;main.c: 240: if(bordaSubidaB2()) a=5;
  3520  0390  160A  118A  2260  120A  118A  	fcall	_bordaSubidaB2
  3521  0395  3A00               	xorlw	0
  3522  0396  1903               	skipnz
  3523  0397  2B9E               	goto	l4883
  3524  0398  3005               	movlw	5
  3525  0399  1283               	bcf	3,5	;RP0=0, select bank0
  3526  039A  1303               	bcf	3,6	;RP1=0, select bank0
  3527  039B  00E2               	movwf	??_main
  3528  039C  0862               	movf	??_main,w
  3529  039D  00E7               	movwf	main@a
  3530  039E                     l4883:	
  3531                           
  3532                           ;main.c: 241: if(bordaSubidaB3()) aux = 315;
  3533  039E  160A  118A  227A  120A  118A  	fcall	_bordaSubidaB3
  3534  03A3  3A00               	xorlw	0
  3535  03A4  1903               	skipnz
  3536  03A5  2C2A               	goto	l4941
  3537  03A6  303B               	movlw	59
  3538  03A7  2C25               	goto	L51
  3539  03A8                     l4891:	
  3540                           ;main.c: 245: case 5:
  3541                           
  3542                           ;main.c: 243: break;
  3543                           
  3544                           ;main.c: 242: if(B1() & B2()) aux = 30;
  3545                           
  3546                           
  3547                           ;main.c: 246: textSelection6();
  3548  03A8  120A  158A  2202  120A  118A  	fcall	_textSelection6
  3549                           
  3550                           ;main.c: 247: if(bordaSubidaB1()) a=4;
  3551  03AD  160A  118A  2246  120A  118A  	fcall	_bordaSubidaB1
  3552  03B2  3A00               	xorlw	0
  3553  03B3  1903               	skipnz
  3554  03B4  2BBB               	goto	l4897
  3555  03B5  3004               	movlw	4
  3556  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  3557  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  3558  03B8  00E2               	movwf	??_main
  3559  03B9  0862               	movf	??_main,w
  3560  03BA  00E7               	movwf	main@a
  3561  03BB                     l4897:	
  3562                           
  3563                           ;main.c: 248: if(bordaSubidaB2()) a=6;
  3564  03BB  160A  118A  2260  120A  118A  	fcall	_bordaSubidaB2
  3565  03C0  3A00               	xorlw	0
  3566  03C1  1903               	skipnz
  3567  03C2  2BC9               	goto	l4901
  3568  03C3  3006               	movlw	6
  3569  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  3570  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  3571  03C6  00E2               	movwf	??_main
  3572  03C7  0862               	movf	??_main,w
  3573  03C8  00E7               	movwf	main@a
  3574  03C9                     l4901:	
  3575                           
  3576                           ;main.c: 249: if(bordaSubidaB3()) aux = 316;
  3577  03C9  160A  118A  227A  120A  118A  	fcall	_bordaSubidaB3
  3578  03CE  3A00               	xorlw	0
  3579  03CF  1903               	skipnz
  3580  03D0  2C2A               	goto	l4941
  3581  03D1  303C               	movlw	60
  3582  03D2  2C25               	goto	L51
  3583  03D3                     l4909:	
  3584                           ;main.c: 253: case 6:
  3585                           
  3586                           ;main.c: 251: break;
  3587                           
  3588                           ;main.c: 250: if(B1() & B2()) aux = 30;
  3589                           
  3590                           
  3591                           ;main.c: 254: textSelection7();
  3592  03D3  120A  158A  2265  120A  118A  	fcall	_textSelection7
  3593                           
  3594                           ;main.c: 255: if(bordaSubidaB1()) a=5;
  3595  03D8  160A  118A  2246  120A  118A  	fcall	_bordaSubidaB1
  3596  03DD  3A00               	xorlw	0
  3597  03DE  1903               	skipnz
  3598  03DF  2BE6               	goto	l4915
  3599  03E0  3005               	movlw	5
  3600  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  3601  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  3602  03E3  00E2               	movwf	??_main
  3603  03E4  0862               	movf	??_main,w
  3604  03E5  00E7               	movwf	main@a
  3605  03E6                     l4915:	
  3606                           
  3607                           ;main.c: 256: if(bordaSubidaB2()) a=7;
  3608  03E6  160A  118A  2260  120A  118A  	fcall	_bordaSubidaB2
  3609  03EB  3A00               	xorlw	0
  3610  03EC  1903               	skipnz
  3611  03ED  2BF4               	goto	l4919
  3612  03EE  3007               	movlw	7
  3613  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  3614  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  3615  03F1  00E2               	movwf	??_main
  3616  03F2  0862               	movf	??_main,w
  3617  03F3  00E7               	movwf	main@a
  3618  03F4                     l4919:	
  3619                           
  3620                           ;main.c: 257: if(bordaSubidaB3()) aux = 317;
  3621  03F4  160A  118A  227A  120A  118A  	fcall	_bordaSubidaB3
  3622  03F9  3A00               	xorlw	0
  3623  03FA  1903               	skipnz
  3624  03FB  2C2A               	goto	l4941
  3625  03FC  303D               	movlw	61
  3626  03FD  2C25               	goto	L51
  3627  03FE                     l4927:	
  3628                           ;main.c: 261: case 7:
  3629                           
  3630                           ;main.c: 259: break;
  3631                           
  3632                           ;main.c: 258: if(B1() & B2()) aux = 30;
  3633                           
  3634                           
  3635                           ;main.c: 262: textSelection8();
  3636  03FE  120A  158A  22C8  120A  118A  	fcall	_textSelection8
  3637                           
  3638                           ;main.c: 263: if(bordaSubidaB1()) a=6;
  3639  0403  160A  118A  2246  120A  118A  	fcall	_bordaSubidaB1
  3640  0408  3A00               	xorlw	0
  3641  0409  1903               	skipnz
  3642  040A  2C11               	goto	l4933
  3643  040B  3006               	movlw	6
  3644  040C  1283               	bcf	3,5	;RP0=0, select bank0
  3645  040D  1303               	bcf	3,6	;RP1=0, select bank0
  3646  040E  00E2               	movwf	??_main
  3647  040F  0862               	movf	??_main,w
  3648  0410  00E7               	movwf	main@a
  3649  0411                     l4933:	
  3650                           
  3651                           ;main.c: 264: if(bordaSubidaB2()) a=0;
  3652  0411  160A  118A  2260  120A  118A  	fcall	_bordaSubidaB2
  3653  0416  3A00               	xorlw	0
  3654  0417  1903               	skipnz
  3655  0418  2C1C               	goto	l4937
  3656  0419  1283               	bcf	3,5	;RP0=0, select bank0
  3657  041A  1303               	bcf	3,6	;RP1=0, select bank0
  3658  041B  01E7               	clrf	main@a
  3659  041C                     l4937:	
  3660                           
  3661                           ;main.c: 265: if(bordaSubidaB3()) aux = 318;
  3662  041C  160A  118A  227A  120A  118A  	fcall	_bordaSubidaB3
  3663  0421  3A00               	xorlw	0
  3664  0422  1903               	skipnz
  3665  0423  2C2A               	goto	l4941
  3666  0424  303E               	movlw	62
  3667  0425                     L51:	
  3668  0425  1283               	bcf	3,5	;RP0=0, select bank0
  3669  0426  1303               	bcf	3,6	;RP1=0, select bank0
  3670  0427  00E8               	movwf	main@aux
  3671  0428  3001               	movlw	1
  3672  0429  00E9               	movwf	main@aux+1
  3673  042A                     l4941:	
  3674                           
  3675                           ;main.c: 266: if(B1() & B2()) aux = 30;
  3676  042A  160A  118A  2193  120A  118A  	fcall	_B2
  3677  042F  1283               	bcf	3,5	;RP0=0, select bank0
  3678  0430  1303               	bcf	3,6	;RP1=0, select bank0
  3679  0431  00E2               	movwf	??_main
  3680  0432  160A  118A  2183  120A  118A  	fcall	_B1
  3681  0437  1283               	bcf	3,5	;RP0=0, select bank0
  3682  0438  1303               	bcf	3,6	;RP1=0, select bank0
  3683  0439  0562               	andwf	??_main,w
  3684  043A  1903               	btfsc	3,2
  3685  043B  2C81               	goto	l5019
  3686  043C  301E               	movlw	30
  3687  043D  2C74               	goto	L36
  3688  043E                     l4947:	
  3689                           ;main.c: 268: }
  3690                           
  3691                           ;main.c: 267: break;
  3692                           
  3693  043E  0867               	movf	main@a,w
  3694                           
  3695                           ; Switch size 1, requested type "space"
  3696                           ; Number of cases is 8, Range of values is 0 to 7
  3697                           ; switch strategies available:
  3698                           ; Name         Instructions Cycles
  3699                           ; simple_byte           25    13 (average)
  3700                           ; direct_byte           32     8 (fixed)
  3701                           ; jumptable            260     6 (fixed)
  3702                           ;	Chosen strategy is simple_byte
  3703  043F  3A00               	xorlw	0	; case 0
  3704  0440  1903               	skipnz
  3705  0441  2AD8               	goto	l4801
  3706  0442  3A01               	xorlw	1	; case 1
  3707  0443  1903               	skipnz
  3708  0444  2B01               	goto	l4819
  3709  0445  3A03               	xorlw	3	; case 2
  3710  0446  1903               	skipnz
  3711  0447  2B29               	goto	l4837
  3712  0448  3A01               	xorlw	1	; case 3
  3713  0449  1903               	skipnz
  3714  044A  2B52               	goto	l4855
  3715  044B  3A07               	xorlw	7	; case 4
  3716  044C  1903               	skipnz
  3717  044D  2B7D               	goto	l4873
  3718  044E  3A01               	xorlw	1	; case 5
  3719  044F  1903               	skipnz
  3720  0450  2BA8               	goto	l4891
  3721  0451  3A03               	xorlw	3	; case 6
  3722  0452  1903               	skipnz
  3723  0453  2BD3               	goto	l4909
  3724  0454  3A01               	xorlw	1	; case 7
  3725  0455  1903               	skipnz
  3726  0456  2BFE               	goto	l4927
  3727  0457  2C81               	goto	l5019
  3728                           
  3729                           ;main.c: 269: break;
  3730  0458  2C81               	goto	l5019
  3731  0459                     l4949:	
  3732                           ;main.c: 271: case 311:
  3733                           
  3734  0459                     l4957:	
  3735                           ;main.c: 279: case 312:
  3736                           
  3737                           ;main.c: 277: break;
  3738                           
  3739                           ;main.c: 276: aux = 3;
  3740                           
  3741                           ;main.c: 275: textLoading();
  3742                           
  3743                           ;main.c: 273: writeLCD(0,0," Enviando ");
  3744                           
  3745                           ;main.c: 272: cmdLCD(0x01);
  3746                           
  3747  0459                     l4965:	
  3748                           ;main.c: 287: case 313:
  3749                           
  3750                           ;main.c: 285: break;
  3751                           
  3752                           ;main.c: 284: aux = 3;
  3753                           
  3754                           ;main.c: 283: textLoading();
  3755                           
  3756                           ;main.c: 281: writeLCD(0,0," Enviando ");
  3757                           
  3758                           ;main.c: 280: cmdLCD(0x01);
  3759                           
  3760  0459                     l4973:	
  3761                           ;main.c: 295: case 314:
  3762                           
  3763                           ;main.c: 293: break;
  3764                           
  3765                           ;main.c: 292: aux = 3;
  3766                           
  3767                           ;main.c: 291: textLoading();
  3768                           
  3769                           ;main.c: 289: writeLCD(0,0," Enviando ");
  3770                           
  3771                           ;main.c: 288: cmdLCD(0x01);
  3772                           
  3773  0459                     l4981:	
  3774                           ;main.c: 303: case 315:
  3775                           
  3776                           ;main.c: 301: break;
  3777                           
  3778                           ;main.c: 300: aux = 3;
  3779                           
  3780                           ;main.c: 299: textLoading();
  3781                           
  3782                           ;main.c: 297: writeLCD(0,0," Enviando ");
  3783                           
  3784                           ;main.c: 296: cmdLCD(0x01);
  3785                           
  3786  0459                     l4989:	
  3787                           ;main.c: 311: case 316:
  3788                           
  3789                           ;main.c: 309: break;
  3790                           
  3791                           ;main.c: 308: aux = 3;
  3792                           
  3793                           ;main.c: 307: textLoading();
  3794                           
  3795                           ;main.c: 305: writeLCD(0,0," Enviando ");
  3796                           
  3797                           ;main.c: 304: cmdLCD(0x01);
  3798                           
  3799  0459                     l4997:	
  3800                           ;main.c: 319: case 317:
  3801                           
  3802                           ;main.c: 317: break;
  3803                           
  3804                           ;main.c: 316: aux = 3;
  3805                           
  3806                           ;main.c: 315: textLoading();
  3807                           
  3808                           ;main.c: 313: writeLCD(0,0," Enviando ");
  3809                           
  3810                           ;main.c: 312: cmdLCD(0x01);
  3811                           
  3812  0459                     l5005:	
  3813                           ;main.c: 327: case 318:
  3814                           
  3815                           ;main.c: 325: break;
  3816                           
  3817                           ;main.c: 324: aux = 3;
  3818                           
  3819                           ;main.c: 323: textLoading();
  3820                           
  3821                           ;main.c: 321: writeLCD(0,0," Enviando ");
  3822                           
  3823                           ;main.c: 320: cmdLCD(0x01);
  3824                           
  3825                           
  3826                           ;main.c: 328: cmdLCD(0x01);
  3827  0459  3001               	movlw	1
  3828  045A  160A  118A  25C2  120A  118A  	fcall	_cmdLCD
  3829                           
  3830                           ;main.c: 329: writeLCD(0,0," Enviando ");
  3831  045F  1283               	bcf	3,5	;RP0=0, select bank0
  3832  0460  1303               	bcf	3,6	;RP1=0, select bank0
  3833  0461  01CF               	clrf	writeLCD@y
  3834  0462  3074               	movlw	low (STR_109| (0+32768))
  3835  0463  00D0               	movwf	writeLCD@ptr
  3836  0464  3088               	movlw	high (STR_109| (0+32768))
  3837  0465  00D1               	movwf	writeLCD@ptr+1
  3838  0466  3000               	movlw	0
  3839  0467  160A  118A  2426  120A  118A  	fcall	_writeLCD
  3840                           
  3841                           ;main.c: 331: textLoading();
  3842  046C  120A  158A  2530  120A  118A  	fcall	_textLoading
  3843  0471                     L35:	
  3844                           
  3845                           ;main.c: 332: aux = 3;
  3846  0471  3003               	movlw	3
  3847  0472                     L45:	
  3848  0472  1283               	bcf	3,5	;RP0=0, select bank0
  3849  0473  1303               	bcf	3,6	;RP1=0, select bank0
  3850  0474                     L36:	
  3851  0474  00E8               	movwf	main@aux
  3852  0475  3000               	movlw	0
  3853  0476                     L34:	
  3854  0476  00E9               	movwf	main@aux+1
  3855                           
  3856                           ;main.c: 333: break;
  3857  0477  2C81               	goto	l5019
  3858  0478                     l5013:	
  3859                           ;main.c: 337: case 666:
  3860                           
  3861                           
  3862                           ;main.c: 338: easterEgg();
  3863  0478  120A  158A  262D  120A  118A  	fcall	_easterEgg
  3864                           
  3865                           ;main.c: 339: aux = 0;
  3866  047D  1283               	bcf	3,5	;RP0=0, select bank0
  3867  047E  1303               	bcf	3,6	;RP1=0, select bank0
  3868  047F  01E8               	clrf	main@aux
  3869  0480  01E9               	clrf	main@aux+1
  3870  0481                     l5019:	
  3871                           ;main.c: 341: }
  3872                           
  3873                           ;main.c: 340: break;
  3874                           
  3875                           
  3876                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  3877                           ; Switch size 1, requested type "space"
  3878                           ; Number of cases is 3, Range of values is 0 to 2
  3879                           ; switch strategies available:
  3880                           ; Name         Instructions Cycles
  3881                           ; simple_byte           10     6 (average)
  3882                           ; direct_byte           17     8 (fixed)
  3883                           ; jumptable            260     6 (fixed)
  3884                           ;	Chosen strategy is simple_byte
  3885  0481  1283               	bcf	3,5	;RP0=0, select bank0
  3886  0482  1303               	bcf	3,6	;RP1=0, select bank0
  3887  0483  0869               	movf	main@aux+1,w
  3888  0484  3A00               	xorlw	0	; case 0
  3889  0485  1903               	skipnz
  3890  0486  2C8E               	goto	l5113
  3891  0487  3A01               	xorlw	1	; case 1
  3892  0488  1903               	skipnz
  3893  0489  2CB7               	goto	l5115
  3894  048A  3A03               	xorlw	3	; case 2
  3895  048B  1903               	skipnz
  3896  048C  2CE3               	goto	l5117
  3897  048D  2C81               	goto	l5019
  3898  048E                     l5113:	
  3899                           
  3900                           ; Switch size 1, requested type "space"
  3901                           ; Number of cases is 13, Range of values is 0 to 210
  3902                           ; switch strategies available:
  3903                           ; Name         Instructions Cycles
  3904                           ; simple_byte           40    21 (average)
  3905                           ; jumptable            260     6 (fixed)
  3906                           ;	Chosen strategy is simple_byte
  3907  048E  0868               	movf	main@aux,w
  3908  048F  3A00               	xorlw	0	; case 0
  3909  0490  1903               	skipnz
  3910  0491  2851               	goto	l4601
  3911  0492  3A01               	xorlw	1	; case 1
  3912  0493  1903               	skipnz
  3913  0494  2857               	goto	l4605
  3914  0495  3A03               	xorlw	3	; case 2
  3915  0496  1903               	skipnz
  3916  0497  285E               	goto	l4609
  3917  0498  3A01               	xorlw	1	; case 3
  3918  0499  1903               	skipnz
  3919  049A  2865               	goto	l4613
  3920  049B  3A09               	xorlw	9	; case 10
  3921  049C  1903               	skipnz
  3922  049D  286C               	goto	l4617
  3923  049E  3A1E               	xorlw	30	; case 20
  3924  049F  1903               	skipnz
  3925  04A0  2892               	goto	l4629
  3926  04A1  3A0A               	xorlw	10	; case 30
  3927  04A2  1903               	skipnz
  3928  04A3  28B8               	goto	l4641
  3929  04A4  3A7A               	xorlw	122	; case 100
  3930  04A5  1903               	skipnz
  3931  04A6  28F8               	goto	l4657
  3932  04A7  3A0A               	xorlw	10	; case 110
  3933  04A8  1903               	skipnz
  3934  04A9  2968               	goto	l4695
  3935  04AA  3A01               	xorlw	1	; case 111
  3936  04AB  1903               	skipnz
  3937  04AC  2971               	goto	l4697
  3938  04AD  3A1F               	xorlw	31	; case 112
  3939  04AE  1903               	skipnz
  3940  04AF  2998               	goto	l4709
  3941  04B0  3AB8               	xorlw	184	; case 200
  3942  04B1  1903               	skipnz
  3943  04B2  29C5               	goto	l4721
  3944  04B3  3A1A               	xorlw	26	; case 210
  3945  04B4  1903               	skipnz
  3946  04B5  29E8               	goto	l4729
  3947  04B6  2C81               	goto	l5019
  3948  04B7                     l5115:	
  3949                           
  3950                           ; Switch size 1, requested type "space"
  3951                           ; Number of cases is 14, Range of values is 44 to 62
  3952                           ; switch strategies available:
  3953                           ; Name         Instructions Cycles
  3954                           ; simple_byte           43    22 (average)
  3955                           ; direct_byte           68    11 (fixed)
  3956                           ; jumptable            263     9 (fixed)
  3957                           ;	Chosen strategy is simple_byte
  3958  04B7  0868               	movf	main@aux,w
  3959  04B8  3A2C               	xorlw	44	; case 44
  3960  04B9  1903               	skipnz
  3961  04BA  2A21               	goto	l4747
  3962  04BB  3A01               	xorlw	1	; case 45
  3963  04BC  1903               	skipnz
  3964  04BD  2A36               	goto	l4753
  3965  04BE  3A03               	xorlw	3	; case 46
  3966  04BF  1903               	skipnz
  3967  04C0  2A62               	goto	l4769
  3968  04C1  3A1F               	xorlw	31	; case 49
  3969  04C2  1903               	skipnz
  3970  04C3  2A8E               	goto	l4785
  3971  04C4  3A03               	xorlw	3	; case 50
  3972  04C5  1903               	skipnz
  3973  04C6  2AB5               	goto	l4793
  3974  04C7  3A04               	xorlw	4	; case 54
  3975  04C8  1903               	skipnz
  3976  04C9  2C3E               	goto	l4947
  3977  04CA  3A01               	xorlw	1	; case 55
  3978  04CB  1903               	skipnz
  3979  04CC  2C59               	goto	l4949
  3980  04CD  3A0F               	xorlw	15	; case 56
  3981  04CE  1903               	skipnz
  3982  04CF  2C59               	goto	l4957
  3983  04D0  3A01               	xorlw	1	; case 57
  3984  04D1  1903               	skipnz
  3985  04D2  2C59               	goto	l4965
  3986  04D3  3A03               	xorlw	3	; case 58
  3987  04D4  1903               	skipnz
  3988  04D5  2C59               	goto	l4973
  3989  04D6  3A01               	xorlw	1	; case 59
  3990  04D7  1903               	skipnz
  3991  04D8  2C59               	goto	l4981
  3992  04D9  3A07               	xorlw	7	; case 60
  3993  04DA  1903               	skipnz
  3994  04DB  2C59               	goto	l4989
  3995  04DC  3A01               	xorlw	1	; case 61
  3996  04DD  1903               	skipnz
  3997  04DE  2C59               	goto	l4997
  3998  04DF  3A03               	xorlw	3	; case 62
  3999  04E0  1903               	skipnz
  4000  04E1  2C59               	goto	l5005
  4001  04E2  2C81               	goto	l5019
  4002  04E3                     l5117:	
  4003                           
  4004                           ; Switch size 1, requested type "space"
  4005                           ; Number of cases is 1, Range of values is 154 to 154
  4006                           ; switch strategies available:
  4007                           ; Name         Instructions Cycles
  4008                           ; simple_byte            4     3 (average)
  4009                           ; direct_byte           14    11 (fixed)
  4010                           ; jumptable            263     9 (fixed)
  4011                           ;	Chosen strategy is simple_byte
  4012  04E3  0868               	movf	main@aux,w
  4013  04E4  3A9A               	xorlw	154	; case 154
  4014  04E5  1903               	skipnz
  4015  04E6  2C78               	goto	l5013
  4016  04E7  2C81               	goto	l5019
  4017  04E8  2C81               	goto	l5019
  4018  04E9                     __end_of_main:	
  4019                           
  4020                           	psect	text1
  4021  13A0                     __ptext1:	
  4022 ;; *************** function _transmite *****************
  4023 ;; Defined at:
  4024 ;;		line 83 in file "Serial.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;		None
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;		None
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  1    wreg      void 
  4031 ;; Registers used:
  4032 ;;		wreg, status,2, status,0, pclath, cstack
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4038 ;;      Params:         0       0       0       0       0
  4039 ;;      Locals:         0       0       0       0       0
  4040 ;;      Temps:          0       1       0       0       0
  4041 ;;      Totals:         0       1       0       0       0
  4042 ;;Total ram usage:        1 bytes
  4043 ;; Hardware stack levels used:    1
  4044 ;; Hardware stack levels required when called:    3
  4045 ;; This function calls:
  4046 ;;		_convHexToAnsc
  4047 ;;		_serialIn
  4048 ;;		_writeEUSART
  4049 ;; This function is called by:
  4050 ;;		_main
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054                           
  4055                           ;psect for function _transmite
  4056  13A0                     _transmite:	
  4057                           
  4058                           ;Serial.c: 85: serial = serialIn();
  4059                           
  4060                           ;incstack = 0
  4061                           ; Regs used in _transmite: [wreg+status,2+status,0+pclath+cstack]
  4062  13A0  160A  118A  222D  160A  118A  	fcall	_serialIn
  4063  13A5  1283               	bcf	3,5	;RP0=0, select bank0
  4064  13A6  1303               	bcf	3,6	;RP1=0, select bank0
  4065  13A7  00CB               	movwf	??_transmite
  4066  13A8  084B               	movf	??_transmite,w
  4067  13A9  00F1               	movwf	_serial
  4068                           
  4069                           ;Serial.c: 87: if(serial != comp)
  4070  13AA  0871               	movf	_serial,w
  4071  13AB  0646               	xorwf	_comp,w
  4072  13AC  1903               	skipnz
  4073  13AD  0008               	return
  4074                           
  4075                           ;Serial.c: 88: {
  4076                           ;Serial.c: 89: convHexToAnsc(serialIn());
  4077  13AE  160A  118A  222D  160A  118A  	fcall	_serialIn
  4078  13B3  160A  118A  23C9  160A  118A  	fcall	_convHexToAnsc
  4079                           
  4080                           ;Serial.c: 90: writeEUSART(tdez);
  4081  13B8  0873               	movf	_tdez,w
  4082  13B9  160A  118A  218D  160A  118A  	fcall	_writeEUSART
  4083                           
  4084                           ;Serial.c: 91: writeEUSART(tuni);
  4085  13BE  0874               	movf	_tuni,w
  4086  13BF  160A  118A  218D   	fcall	_writeEUSART
  4087                           
  4088                           ;Serial.c: 92: comp = serial;
  4089  13C2  0871               	movf	_serial,w
  4090  13C3  1283               	bcf	3,5	;RP0=0, select bank0
  4091  13C4  1303               	bcf	3,6	;RP1=0, select bank0
  4092  13C5  00CB               	movwf	??_transmite
  4093  13C6  084B               	movf	??_transmite,w
  4094  13C7  00C6               	movwf	_comp
  4095  13C8  0008               	return
  4096  13C9                     __end_of_transmite:	
  4097                           
  4098                           	psect	text2
  4099  122D                     __ptext2:	
  4100 ;; *************** function _serialIn *****************
  4101 ;; Defined at:
  4102 ;;		line 40 in file "Serial.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;		None
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;  i               1    2[BANK0 ] unsigned char 
  4107 ;;  dado            1    1[BANK0 ] unsigned char 
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  1    wreg      unsigned char 
  4110 ;; Registers used:
  4111 ;;		wreg, status,2, status,0
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4117 ;;      Params:         0       0       0       0       0
  4118 ;;      Locals:         0       2       0       0       0
  4119 ;;      Temps:          0       1       0       0       0
  4120 ;;      Totals:         0       3       0       0       0
  4121 ;;Total ram usage:        3 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; Hardware stack levels required when called:    2
  4124 ;; This function calls:
  4125 ;;		Nothing
  4126 ;; This function is called by:
  4127 ;;		_transmite
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           
  4132                           ;psect for function _serialIn
  4133  122D                     _serialIn:	
  4134                           
  4135                           ;Serial.c: 42: unsigned char i = 0x80;
  4136                           
  4137                           ;incstack = 0
  4138                           ; Regs used in _serialIn: [wreg+status,2+status,0]
  4139  122D  3080               	movlw	128
  4140  122E  1283               	bcf	3,5	;RP0=0, select bank0
  4141  122F  1303               	bcf	3,6	;RP1=0, select bank0
  4142  1230  00C7               	movwf	??_serialIn
  4143  1231  0847               	movf	??_serialIn,w
  4144  1232  00C9               	movwf	serialIn@i
  4145                           
  4146                           ;Serial.c: 43: unsigned char dado = 0;
  4147  1233  01C8               	clrf	serialIn@dado
  4148                           
  4149                           ;Serial.c: 44: PORTBbits.RB3 = 0;
  4150  1234  1186               	bcf	6,3	;volatile
  4151                           
  4152                           ;Serial.c: 45: PORTBbits.RB3 = 1;
  4153  1235  1586               	bsf	6,3	;volatile
  4154  1236                     l3971:	
  4155                           ;Serial.c: 46: while (i)
  4156                           
  4157  1236  0849               	movf	serialIn@i,w
  4158  1237  1903               	btfsc	3,2
  4159  1238  2A44               	goto	l3973
  4160                           
  4161                           ;Serial.c: 47: {
  4162                           ;Serial.c: 48: PORTBbits.RB2 = 0;
  4163  1239  1106               	bcf	6,2	;volatile
  4164                           
  4165                           ;Serial.c: 49: if(PORTBbits.RB1)
  4166  123A  1C86               	btfss	6,1	;volatile
  4167  123B  2A40               	goto	l3967
  4168                           
  4169                           ;Serial.c: 50: dado |=i;
  4170  123C  0849               	movf	serialIn@i,w
  4171  123D  00C7               	movwf	??_serialIn
  4172  123E  0847               	movf	??_serialIn,w
  4173  123F  04C8               	iorwf	serialIn@dado,f
  4174  1240                     l3967:	
  4175                           
  4176                           ;Serial.c: 51: i >>=1;
  4177  1240  1003               	clrc
  4178  1241  0CC9               	rrf	serialIn@i,f
  4179                           
  4180                           ;Serial.c: 52: PORTBbits.RB2 = 1;
  4181  1242  1506               	bsf	6,2	;volatile
  4182  1243  2A36               	goto	l3971
  4183  1244                     l3973:	
  4184                           
  4185                           ;Serial.c: 53: }
  4186                           ;Serial.c: 54: return(dado);
  4187  1244  0848               	movf	serialIn@dado,w
  4188  1245  0008               	return
  4189  1246                     __end_of_serialIn:	
  4190                           
  4191                           	psect	text3
  4192  13C9                     __ptext3:	
  4193 ;; *************** function _convHexToAnsc *****************
  4194 ;; Defined at:
  4195 ;;		line 57 in file "Serial.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;  dado            1    wreg     unsigned char 
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;  dado            1    1[BANK0 ] unsigned char 
  4200 ;;  dez             1    3[BANK0 ] unsigned char 
  4201 ;;  uni             1    2[BANK0 ] unsigned char 
  4202 ;; Return value:  Size  Location     Type
  4203 ;;                  1    wreg      void 
  4204 ;; Registers used:
  4205 ;;		wreg, status,2, status,0
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/0
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4211 ;;      Params:         0       0       0       0       0
  4212 ;;      Locals:         0       3       0       0       0
  4213 ;;      Temps:          0       1       0       0       0
  4214 ;;      Totals:         0       4       0       0       0
  4215 ;;Total ram usage:        4 bytes
  4216 ;; Hardware stack levels used:    1
  4217 ;; Hardware stack levels required when called:    2
  4218 ;; This function calls:
  4219 ;;		Nothing
  4220 ;; This function is called by:
  4221 ;;		_transmite
  4222 ;; This function uses a non-reentrant model
  4223 ;;
  4224                           
  4225                           
  4226                           ;psect for function _convHexToAnsc
  4227  13C9                     _convHexToAnsc:	
  4228                           
  4229                           ;incstack = 0
  4230                           ; Regs used in _convHexToAnsc: [wreg+status,2+status,0]
  4231                           ;convHexToAnsc@dado stored from wreg
  4232  13C9  1283               	bcf	3,5	;RP0=0, select bank0
  4233  13CA  1303               	bcf	3,6	;RP1=0, select bank0
  4234  13CB  00C8               	movwf	convHexToAnsc@dado
  4235                           
  4236                           ;Serial.c: 59: char dez;
  4237                           ;Serial.c: 60: char uni;
  4238                           ;Serial.c: 62: uni = dado & 0x0F;
  4239  13CC  0848               	movf	convHexToAnsc@dado,w
  4240  13CD  390F               	andlw	15
  4241  13CE  00C7               	movwf	??_convHexToAnsc
  4242  13CF  0847               	movf	??_convHexToAnsc,w
  4243  13D0  00C9               	movwf	convHexToAnsc@uni
  4244                           
  4245                           ;Serial.c: 63: dez = dado & 0xF0;
  4246  13D1  0848               	movf	convHexToAnsc@dado,w
  4247  13D2  39F0               	andlw	240
  4248  13D3  00C7               	movwf	??_convHexToAnsc
  4249  13D4  0847               	movf	??_convHexToAnsc,w
  4250  13D5  00CA               	movwf	convHexToAnsc@dez
  4251                           
  4252                           ;Serial.c: 64: dez >>= 4 ;
  4253  13D6  0ECA               	swapf	convHexToAnsc@dez,f
  4254  13D7  300F               	movlw	15
  4255  13D8  05CA               	andwf	convHexToAnsc@dez,f
  4256                           
  4257                           ;Serial.c: 66: if (uni > 0x09)
  4258  13D9  300A               	movlw	10
  4259  13DA  0249               	subwf	convHexToAnsc@uni,w
  4260  13DB  1C03               	skipc
  4261  13DC  2BDF               	goto	l3985
  4262                           
  4263                           ;Serial.c: 67: uni += 0x37;
  4264  13DD  3037               	movlw	55
  4265  13DE  2BE0               	goto	L52
  4266  13DF                     l3985:	
  4267                           
  4268                           ;Serial.c: 68: else
  4269                           ;Serial.c: 69: uni += 0x30;
  4270  13DF  3030               	movlw	48
  4271  13E0                     L52:	
  4272  13E0  00C7               	movwf	??_convHexToAnsc
  4273  13E1  0847               	movf	??_convHexToAnsc,w
  4274  13E2  07C9               	addwf	convHexToAnsc@uni,f
  4275                           
  4276                           ;Serial.c: 71: if (dez > 0x09)
  4277  13E3  300A               	movlw	10
  4278  13E4  024A               	subwf	convHexToAnsc@dez,w
  4279  13E5  1C03               	skipc
  4280  13E6  2BE9               	goto	l3991
  4281                           
  4282                           ;Serial.c: 72: dez += 0x37;
  4283  13E7  3037               	movlw	55
  4284  13E8  2BEA               	goto	L53
  4285  13E9                     l3991:	
  4286                           
  4287                           ;Serial.c: 73: else
  4288                           ;Serial.c: 74: dez += 0x30;
  4289  13E9  3030               	movlw	48
  4290  13EA                     L53:	
  4291  13EA  00C7               	movwf	??_convHexToAnsc
  4292  13EB  0847               	movf	??_convHexToAnsc,w
  4293  13EC  07CA               	addwf	convHexToAnsc@dez,f
  4294                           
  4295                           ;Serial.c: 76: tdez = dez;
  4296  13ED  084A               	movf	convHexToAnsc@dez,w
  4297  13EE  00C7               	movwf	??_convHexToAnsc
  4298  13EF  0847               	movf	??_convHexToAnsc,w
  4299  13F0  00F3               	movwf	_tdez
  4300                           
  4301                           ;Serial.c: 77: tuni = uni;
  4302  13F1  0849               	movf	convHexToAnsc@uni,w
  4303  13F2  00C7               	movwf	??_convHexToAnsc
  4304  13F3  0847               	movf	??_convHexToAnsc,w
  4305  13F4  00F4               	movwf	_tuni
  4306  13F5  0008               	return
  4307  13F6                     __end_of_convHexToAnsc:	
  4308                           
  4309                           	psect	text4
  4310  156D                     __ptext4:	
  4311 ;; *************** function _textSelectionEST *****************
  4312 ;; Defined at:
  4313 ;;		line 120 in file "auxiliar.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;		None
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;		None
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  1    wreg      void 
  4320 ;; Registers used:
  4321 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4327 ;;      Params:         0       0       0       0       0
  4328 ;;      Locals:         0       0       0       0       0
  4329 ;;      Temps:          0       3       0       0       0
  4330 ;;      Totals:         0       3       0       0       0
  4331 ;;Total ram usage:        3 bytes
  4332 ;; Hardware stack levels used:    1
  4333 ;; Hardware stack levels required when called:    5
  4334 ;; This function calls:
  4335 ;;		___awdiv
  4336 ;;		_statusT0
  4337 ;;		_statusT0limite
  4338 ;;		_writeLCD
  4339 ;; This function is called by:
  4340 ;;		_main
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           
  4345                           ;psect for function _textSelectionEST
  4346  156D                     _textSelectionEST:	
  4347                           
  4348                           ;auxiliar.c: 122: writeLCD(13,1,"CLP");
  4349                           
  4350                           ;incstack = 0
  4351                           ; Regs used in _textSelectionEST: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4352  156D  1283               	bcf	3,5	;RP0=0, select bank0
  4353  156E  1303               	bcf	3,6	;RP1=0, select bank0
  4354  156F  01CF               	clrf	writeLCD@y
  4355  1570  0ACF               	incf	writeLCD@y,f
  4356  1571  30EB               	movlw	low ((STR_108+13)| (0+32768))
  4357  1572  00D0               	movwf	writeLCD@ptr
  4358  1573  3086               	movlw	high ((STR_108+13)| (0+32768))
  4359  1574  00D1               	movwf	writeLCD@ptr+1
  4360  1575  300D               	movlw	13
  4361  1576  160A  118A  2426  160A  118A  	fcall	_writeLCD
  4362                           
  4363                           ;auxiliar.c: 123: if( statusT0() < ( statusT0limite()/2 ) )
  4364  157B  160A  118A  21A1  160A  118A  	fcall	_statusT0
  4365  1580  1283               	bcf	3,5	;RP0=0, select bank0
  4366  1581  1303               	bcf	3,6	;RP1=0, select bank0
  4367  1582  0847               	movf	?_statusT0,w
  4368  1583  00D4               	movwf	??_textSelectionEST
  4369  1584  0848               	movf	?_statusT0+1,w
  4370  1585  00D5               	movwf	??_textSelectionEST+1
  4371  1586  3002               	movlw	2
  4372  1587  00C9               	movwf	___awdiv@divisor
  4373  1588  3000               	movlw	0
  4374  1589  00CA               	movwf	___awdiv@divisor+1
  4375  158A  160A  118A  21A8  160A  118A  	fcall	_statusT0limite
  4376  158F  1283               	bcf	3,5	;RP0=0, select bank0
  4377  1590  1303               	bcf	3,6	;RP1=0, select bank0
  4378  1591  0848               	movf	?_statusT0limite+1,w
  4379  1592  00CC               	movwf	___awdiv@dividend+1
  4380  1593  0847               	movf	?_statusT0limite,w
  4381  1594  00CB               	movwf	___awdiv@dividend
  4382  1595  120A  158A  20E1  160A  118A  	fcall	___awdiv
  4383  159A  1283               	bcf	3,5	;RP0=0, select bank0
  4384  159B  1303               	bcf	3,6	;RP1=0, select bank0
  4385  159C  0855               	movf	??_textSelectionEST+1,w
  4386  159D  3A80               	xorlw	128
  4387  159E  00D6               	movwf	??_textSelectionEST+2
  4388  159F  084A               	movf	?___awdiv+1,w
  4389  15A0  3A80               	xorlw	128
  4390  15A1  0256               	subwf	??_textSelectionEST+2,w
  4391  15A2  1D03               	skipz
  4392  15A3  2DA6               	goto	u3265
  4393  15A4  0849               	movf	?___awdiv,w
  4394  15A5  0254               	subwf	??_textSelectionEST,w
  4395  15A6                     u3265:	
  4396  15A6  1803               	skipnc
  4397  15A7  2DB5               	goto	l4299
  4398                           
  4399                           ;auxiliar.c: 124: writeLCD(0,1,"       ");
  4400  15A8  1283               	bcf	3,5	;RP0=0, select bank0
  4401  15A9  1303               	bcf	3,6	;RP1=0, select bank0
  4402  15AA  01CF               	clrf	writeLCD@y
  4403  15AB  0ACF               	incf	writeLCD@y,f
  4404  15AC  3009               	movlw	low ((STR_68+9)| (0+32768))
  4405  15AD  00D0               	movwf	writeLCD@ptr
  4406  15AE  3087               	movlw	high ((STR_68+9)| (0+32768))
  4407  15AF  00D1               	movwf	writeLCD@ptr+1
  4408  15B0  3000               	movlw	0
  4409  15B1  160A  118A  2426   	fcall	_writeLCD
  4410  15B4  0008               	return
  4411  15B5                     l4299:	
  4412                           
  4413                           ;auxiliar.c: 125: else
  4414                           ;auxiliar.c: 126: writeLCD(0,1,"ESTEIRA");
  4415  15B5  1283               	bcf	3,5	;RP0=0, select bank0
  4416  15B6  1303               	bcf	3,6	;RP1=0, select bank0
  4417  15B7  01CF               	clrf	writeLCD@y
  4418  15B8  0ACF               	incf	writeLCD@y,f
  4419  15B9  30A6               	movlw	low (STR_47| (0+32768))
  4420  15BA  00D0               	movwf	writeLCD@ptr
  4421  15BB  3088               	movlw	high (STR_47| (0+32768))
  4422  15BC  00D1               	movwf	writeLCD@ptr+1
  4423  15BD  3000               	movlw	0
  4424  15BE  160A  118A  2426   	fcall	_writeLCD
  4425  15C1  0008               	return
  4426  15C2                     __end_of_textSelectionEST:	
  4427                           
  4428                           	psect	text5
  4429  1518                     __ptext5:	
  4430 ;; *************** function _textSelectionCLP *****************
  4431 ;; Defined at:
  4432 ;;		line 128 in file "auxiliar.c"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;		None
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;		None
  4437 ;; Return value:  Size  Location     Type
  4438 ;;                  1    wreg      void 
  4439 ;; Registers used:
  4440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4441 ;; Tracked objects:
  4442 ;;		On entry : 0/0
  4443 ;;		On exit  : 0/0
  4444 ;;		Unchanged: 0/0
  4445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4446 ;;      Params:         0       0       0       0       0
  4447 ;;      Locals:         0       0       0       0       0
  4448 ;;      Temps:          0       3       0       0       0
  4449 ;;      Totals:         0       3       0       0       0
  4450 ;;Total ram usage:        3 bytes
  4451 ;; Hardware stack levels used:    1
  4452 ;; Hardware stack levels required when called:    5
  4453 ;; This function calls:
  4454 ;;		___awdiv
  4455 ;;		_statusT0
  4456 ;;		_statusT0limite
  4457 ;;		_writeLCD
  4458 ;; This function is called by:
  4459 ;;		_main
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           
  4463                           
  4464                           ;psect for function _textSelectionCLP
  4465  1518                     _textSelectionCLP:	
  4466                           
  4467                           ;auxiliar.c: 130: writeLCD(0,1,"ESTEIRA");
  4468                           
  4469                           ;incstack = 0
  4470                           ; Regs used in _textSelectionCLP: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4471  1518  1283               	bcf	3,5	;RP0=0, select bank0
  4472  1519  1303               	bcf	3,6	;RP1=0, select bank0
  4473  151A  01CF               	clrf	writeLCD@y
  4474  151B  0ACF               	incf	writeLCD@y,f
  4475  151C  30A6               	movlw	low (STR_47| (0+32768))
  4476  151D  00D0               	movwf	writeLCD@ptr
  4477  151E  3088               	movlw	high (STR_47| (0+32768))
  4478  151F  00D1               	movwf	writeLCD@ptr+1
  4479  1520  3000               	movlw	0
  4480  1521  160A  118A  2426  160A  118A  	fcall	_writeLCD
  4481                           
  4482                           ;auxiliar.c: 131: if( statusT0() < ( statusT0limite()/2 ) )
  4483  1526  160A  118A  21A1  160A  118A  	fcall	_statusT0
  4484  152B  1283               	bcf	3,5	;RP0=0, select bank0
  4485  152C  1303               	bcf	3,6	;RP1=0, select bank0
  4486  152D  0847               	movf	?_statusT0,w
  4487  152E  00D4               	movwf	??_textSelectionCLP
  4488  152F  0848               	movf	?_statusT0+1,w
  4489  1530  00D5               	movwf	??_textSelectionCLP+1
  4490  1531  3002               	movlw	2
  4491  1532  00C9               	movwf	___awdiv@divisor
  4492  1533  3000               	movlw	0
  4493  1534  00CA               	movwf	___awdiv@divisor+1
  4494  1535  160A  118A  21A8  160A  118A  	fcall	_statusT0limite
  4495  153A  1283               	bcf	3,5	;RP0=0, select bank0
  4496  153B  1303               	bcf	3,6	;RP1=0, select bank0
  4497  153C  0848               	movf	?_statusT0limite+1,w
  4498  153D  00CC               	movwf	___awdiv@dividend+1
  4499  153E  0847               	movf	?_statusT0limite,w
  4500  153F  00CB               	movwf	___awdiv@dividend
  4501  1540  120A  158A  20E1  160A  118A  	fcall	___awdiv
  4502  1545  1283               	bcf	3,5	;RP0=0, select bank0
  4503  1546  1303               	bcf	3,6	;RP1=0, select bank0
  4504  1547  0855               	movf	??_textSelectionCLP+1,w
  4505  1548  3A80               	xorlw	128
  4506  1549  00D6               	movwf	??_textSelectionCLP+2
  4507  154A  084A               	movf	?___awdiv+1,w
  4508  154B  3A80               	xorlw	128
  4509  154C  0256               	subwf	??_textSelectionCLP+2,w
  4510  154D  1D03               	skipz
  4511  154E  2D51               	goto	u3275
  4512  154F  0849               	movf	?___awdiv,w
  4513  1550  0254               	subwf	??_textSelectionCLP,w
  4514  1551                     u3275:	
  4515  1551  1803               	skipnc
  4516  1552  2D60               	goto	l4307
  4517                           
  4518                           ;auxiliar.c: 132: writeLCD(13,1,"   ");
  4519  1553  1283               	bcf	3,5	;RP0=0, select bank0
  4520  1554  1303               	bcf	3,6	;RP1=0, select bank0
  4521  1555  01CF               	clrf	writeLCD@y
  4522  1556  0ACF               	incf	writeLCD@y,f
  4523  1557  300D               	movlw	low ((STR_68+13)| (0+32768))
  4524  1558  00D0               	movwf	writeLCD@ptr
  4525  1559  3087               	movlw	high ((STR_68+13)| (0+32768))
  4526  155A  00D1               	movwf	writeLCD@ptr+1
  4527  155B  300D               	movlw	13
  4528  155C  160A  118A  2426   	fcall	_writeLCD
  4529  155F  0008               	return
  4530  1560                     l4307:	
  4531                           
  4532                           ;auxiliar.c: 133: else
  4533                           ;auxiliar.c: 134: writeLCD(13,1,"CLP");
  4534  1560  1283               	bcf	3,5	;RP0=0, select bank0
  4535  1561  1303               	bcf	3,6	;RP1=0, select bank0
  4536  1562  01CF               	clrf	writeLCD@y
  4537  1563  0ACF               	incf	writeLCD@y,f
  4538  1564  30EB               	movlw	low ((STR_108+13)| (0+32768))
  4539  1565  00D0               	movwf	writeLCD@ptr
  4540  1566  3086               	movlw	high ((STR_108+13)| (0+32768))
  4541  1567  00D1               	movwf	writeLCD@ptr+1
  4542  1568  300D               	movlw	13
  4543  1569  160A  118A  2426   	fcall	_writeLCD
  4544  156C  0008               	return
  4545  156D                     __end_of_textSelectionCLP:	
  4546                           
  4547                           	psect	text6
  4548  0AC8                     __ptext6:	
  4549 ;; *************** function _textSelection8 *****************
  4550 ;; Defined at:
  4551 ;;		line 110 in file "auxiliar.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;		None
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;		None
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  1    wreg      void 
  4558 ;; Registers used:
  4559 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4565 ;;      Params:         0       0       0       0       0
  4566 ;;      Locals:         0       0       0       0       0
  4567 ;;      Temps:          0       3       0       0       0
  4568 ;;      Totals:         0       3       0       0       0
  4569 ;;Total ram usage:        3 bytes
  4570 ;; Hardware stack levels used:    1
  4571 ;; Hardware stack levels required when called:    5
  4572 ;; This function calls:
  4573 ;;		___awdiv
  4574 ;;		_statusT0
  4575 ;;		_statusT0limite
  4576 ;;		_writeLCD
  4577 ;; This function is called by:
  4578 ;;		_main
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582                           
  4583                           ;psect for function _textSelection8
  4584  0AC8                     _textSelection8:	
  4585                           
  4586                           ;auxiliar.c: 112: writeLCD(13,1,"7");
  4587                           
  4588                           ;incstack = 0
  4589                           ; Regs used in _textSelection8: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4590  0AC8  1283               	bcf	3,5	;RP0=0, select bank0
  4591  0AC9  1303               	bcf	3,6	;RP1=0, select bank0
  4592  0ACA  01CF               	clrf	writeLCD@y
  4593  0ACB  0ACF               	incf	writeLCD@y,f
  4594  0ACC  30D3               	movlw	low (STR_34| (0+32768))
  4595  0ACD  00D0               	movwf	writeLCD@ptr
  4596  0ACE  3088               	movlw	high (STR_34| (0+32768))
  4597  0ACF  00D1               	movwf	writeLCD@ptr+1
  4598  0AD0  300D               	movlw	13
  4599  0AD1  160A  118A  2426  120A  158A  	fcall	_writeLCD
  4600                           
  4601                           ;auxiliar.c: 113: writeLCD(0,1,"1");
  4602  0AD6  1283               	bcf	3,5	;RP0=0, select bank0
  4603  0AD7  1303               	bcf	3,6	;RP1=0, select bank0
  4604  0AD8  01CF               	clrf	writeLCD@y
  4605  0AD9  0ACF               	incf	writeLCD@y,f
  4606  0ADA  30C9               	movlw	low (STR_16| (0+32768))
  4607  0ADB  00D0               	movwf	writeLCD@ptr
  4608  0ADC  3088               	movlw	high (STR_16| (0+32768))
  4609  0ADD  00D1               	movwf	writeLCD@ptr+1
  4610  0ADE  3000               	movlw	0
  4611  0ADF  160A  118A  2426  120A  158A  	fcall	_writeLCD
  4612                           
  4613                           ;auxiliar.c: 114: if( statusT0() < ( statusT0limite()/2 ) )
  4614  0AE4  160A  118A  21A1  120A  158A  	fcall	_statusT0
  4615  0AE9  1283               	bcf	3,5	;RP0=0, select bank0
  4616  0AEA  1303               	bcf	3,6	;RP1=0, select bank0
  4617  0AEB  0847               	movf	?_statusT0,w
  4618  0AEC  00D4               	movwf	??_textSelection8
  4619  0AED  0848               	movf	?_statusT0+1,w
  4620  0AEE  00D5               	movwf	??_textSelection8+1
  4621  0AEF  3002               	movlw	2
  4622  0AF0  00C9               	movwf	___awdiv@divisor
  4623  0AF1  3000               	movlw	0
  4624  0AF2  00CA               	movwf	___awdiv@divisor+1
  4625  0AF3  160A  118A  21A8  120A  158A  	fcall	_statusT0limite
  4626  0AF8  1283               	bcf	3,5	;RP0=0, select bank0
  4627  0AF9  1303               	bcf	3,6	;RP1=0, select bank0
  4628  0AFA  0848               	movf	?_statusT0limite+1,w
  4629  0AFB  00CC               	movwf	___awdiv@dividend+1
  4630  0AFC  0847               	movf	?_statusT0limite,w
  4631  0AFD  00CB               	movwf	___awdiv@dividend
  4632  0AFE  120A  158A  20E1  120A  158A  	fcall	___awdiv
  4633  0B03  1283               	bcf	3,5	;RP0=0, select bank0
  4634  0B04  1303               	bcf	3,6	;RP1=0, select bank0
  4635  0B05  0855               	movf	??_textSelection8+1,w
  4636  0B06  3A80               	xorlw	128
  4637  0B07  00D6               	movwf	??_textSelection8+2
  4638  0B08  084A               	movf	?___awdiv+1,w
  4639  0B09  3A80               	xorlw	128
  4640  0B0A  0256               	subwf	??_textSelection8+2,w
  4641  0B0B  1D03               	skipz
  4642  0B0C  2B0F               	goto	u3255
  4643  0B0D  0849               	movf	?___awdiv,w
  4644  0B0E  0254               	subwf	??_textSelection8,w
  4645  0B0F                     u3255:	
  4646  0B0F  1803               	skipnc
  4647  0B10  2B1E               	goto	l4291
  4648                           
  4649                           ;auxiliar.c: 115: writeLCD(15,1," ");
  4650  0B11  1283               	bcf	3,5	;RP0=0, select bank0
  4651  0B12  1303               	bcf	3,6	;RP1=0, select bank0
  4652  0B13  01CF               	clrf	writeLCD@y
  4653  0B14  0ACF               	incf	writeLCD@y,f
  4654  0B15  300F               	movlw	low ((STR_68+15)| (0+32768))
  4655  0B16  00D0               	movwf	writeLCD@ptr
  4656  0B17  3087               	movlw	high ((STR_68+15)| (0+32768))
  4657  0B18  00D1               	movwf	writeLCD@ptr+1
  4658  0B19  300F               	movlw	15
  4659  0B1A  160A  118A  2426   	fcall	_writeLCD
  4660  0B1D  0008               	return
  4661  0B1E                     l4291:	
  4662                           
  4663                           ;auxiliar.c: 116: else
  4664                           ;auxiliar.c: 117: writeLCD(15,1,"8");
  4665  0B1E  1283               	bcf	3,5	;RP0=0, select bank0
  4666  0B1F  1303               	bcf	3,6	;RP1=0, select bank0
  4667  0B20  01CF               	clrf	writeLCD@y
  4668  0B21  0ACF               	incf	writeLCD@y,f
  4669  0B22  30BA               	movlw	low ((STR_121+15)| (0+32768))
  4670  0B23  00D0               	movwf	writeLCD@ptr
  4671  0B24  3086               	movlw	high ((STR_121+15)| (0+32768))
  4672  0B25  00D1               	movwf	writeLCD@ptr+1
  4673  0B26  300F               	movlw	15
  4674  0B27  160A  118A  2426   	fcall	_writeLCD
  4675  0B2A  0008               	return
  4676  0B2B                     __end_of_textSelection8:	
  4677                           
  4678                           	psect	text7
  4679  0A65                     __ptext7:	
  4680 ;; *************** function _textSelection7 *****************
  4681 ;; Defined at:
  4682 ;;		line 100 in file "auxiliar.c"
  4683 ;; Parameters:    Size  Location     Type
  4684 ;;		None
  4685 ;; Auto vars:     Size  Location     Type
  4686 ;;		None
  4687 ;; Return value:  Size  Location     Type
  4688 ;;                  1    wreg      void 
  4689 ;; Registers used:
  4690 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4691 ;; Tracked objects:
  4692 ;;		On entry : 0/0
  4693 ;;		On exit  : 0/0
  4694 ;;		Unchanged: 0/0
  4695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4696 ;;      Params:         0       0       0       0       0
  4697 ;;      Locals:         0       0       0       0       0
  4698 ;;      Temps:          0       3       0       0       0
  4699 ;;      Totals:         0       3       0       0       0
  4700 ;;Total ram usage:        3 bytes
  4701 ;; Hardware stack levels used:    1
  4702 ;; Hardware stack levels required when called:    5
  4703 ;; This function calls:
  4704 ;;		___awdiv
  4705 ;;		_statusT0
  4706 ;;		_statusT0limite
  4707 ;;		_writeLCD
  4708 ;; This function is called by:
  4709 ;;		_main
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713                           
  4714                           ;psect for function _textSelection7
  4715  0A65                     _textSelection7:	
  4716                           
  4717                           ;auxiliar.c: 102: writeLCD(11,1,"6");
  4718                           
  4719                           ;incstack = 0
  4720                           ; Regs used in _textSelection7: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4721  0A65  1283               	bcf	3,5	;RP0=0, select bank0
  4722  0A66  1303               	bcf	3,6	;RP1=0, select bank0
  4723  0A67  01CF               	clrf	writeLCD@y
  4724  0A68  0ACF               	incf	writeLCD@y,f
  4725  0A69  30D1               	movlw	low (STR_30| (0+32768))
  4726  0A6A  00D0               	movwf	writeLCD@ptr
  4727  0A6B  3088               	movlw	high (STR_30| (0+32768))
  4728  0A6C  00D1               	movwf	writeLCD@ptr+1
  4729  0A6D  300B               	movlw	11
  4730  0A6E  160A  118A  2426  120A  158A  	fcall	_writeLCD
  4731                           
  4732                           ;auxiliar.c: 103: writeLCD(15,1,"8");
  4733  0A73  1283               	bcf	3,5	;RP0=0, select bank0
  4734  0A74  1303               	bcf	3,6	;RP1=0, select bank0
  4735  0A75  01CF               	clrf	writeLCD@y
  4736  0A76  0ACF               	incf	writeLCD@y,f
  4737  0A77  30BA               	movlw	low ((STR_121+15)| (0+32768))
  4738  0A78  00D0               	movwf	writeLCD@ptr
  4739  0A79  3086               	movlw	high ((STR_121+15)| (0+32768))
  4740  0A7A  00D1               	movwf	writeLCD@ptr+1
  4741  0A7B  300F               	movlw	15
  4742  0A7C  160A  118A  2426  120A  158A  	fcall	_writeLCD
  4743                           
  4744                           ;auxiliar.c: 104: if( statusT0() < ( statusT0limite()/2 ) )
  4745  0A81  160A  118A  21A1  120A  158A  	fcall	_statusT0
  4746  0A86  1283               	bcf	3,5	;RP0=0, select bank0
  4747  0A87  1303               	bcf	3,6	;RP1=0, select bank0
  4748  0A88  0847               	movf	?_statusT0,w
  4749  0A89  00D4               	movwf	??_textSelection7
  4750  0A8A  0848               	movf	?_statusT0+1,w
  4751  0A8B  00D5               	movwf	??_textSelection7+1
  4752  0A8C  3002               	movlw	2
  4753  0A8D  00C9               	movwf	___awdiv@divisor
  4754  0A8E  3000               	movlw	0
  4755  0A8F  00CA               	movwf	___awdiv@divisor+1
  4756  0A90  160A  118A  21A8  120A  158A  	fcall	_statusT0limite
  4757  0A95  1283               	bcf	3,5	;RP0=0, select bank0
  4758  0A96  1303               	bcf	3,6	;RP1=0, select bank0
  4759  0A97  0848               	movf	?_statusT0limite+1,w
  4760  0A98  00CC               	movwf	___awdiv@dividend+1
  4761  0A99  0847               	movf	?_statusT0limite,w
  4762  0A9A  00CB               	movwf	___awdiv@dividend
  4763  0A9B  120A  158A  20E1  120A  158A  	fcall	___awdiv
  4764  0AA0  1283               	bcf	3,5	;RP0=0, select bank0
  4765  0AA1  1303               	bcf	3,6	;RP1=0, select bank0
  4766  0AA2  0855               	movf	??_textSelection7+1,w
  4767  0AA3  3A80               	xorlw	128
  4768  0AA4  00D6               	movwf	??_textSelection7+2
  4769  0AA5  084A               	movf	?___awdiv+1,w
  4770  0AA6  3A80               	xorlw	128
  4771  0AA7  0256               	subwf	??_textSelection7+2,w
  4772  0AA8  1D03               	skipz
  4773  0AA9  2AAC               	goto	u3245
  4774  0AAA  0849               	movf	?___awdiv,w
  4775  0AAB  0254               	subwf	??_textSelection7,w
  4776  0AAC                     u3245:	
  4777  0AAC  1803               	skipnc
  4778  0AAD  2ABB               	goto	l4283
  4779                           
  4780                           ;auxiliar.c: 105: writeLCD(13,1," ");
  4781  0AAE  1283               	bcf	3,5	;RP0=0, select bank0
  4782  0AAF  1303               	bcf	3,6	;RP1=0, select bank0
  4783  0AB0  01CF               	clrf	writeLCD@y
  4784  0AB1  0ACF               	incf	writeLCD@y,f
  4785  0AB2  300F               	movlw	low ((STR_68+15)| (0+32768))
  4786  0AB3  00D0               	movwf	writeLCD@ptr
  4787  0AB4  3087               	movlw	high ((STR_68+15)| (0+32768))
  4788  0AB5  00D1               	movwf	writeLCD@ptr+1
  4789  0AB6  300D               	movlw	13
  4790  0AB7  160A  118A  2426   	fcall	_writeLCD
  4791  0ABA  0008               	return
  4792  0ABB                     l4283:	
  4793                           
  4794                           ;auxiliar.c: 106: else
  4795                           ;auxiliar.c: 107: writeLCD(13,1,"7");
  4796  0ABB  1283               	bcf	3,5	;RP0=0, select bank0
  4797  0ABC  1303               	bcf	3,6	;RP1=0, select bank0
  4798  0ABD  01CF               	clrf	writeLCD@y
  4799  0ABE  0ACF               	incf	writeLCD@y,f
  4800  0ABF  30D3               	movlw	low (STR_34| (0+32768))
  4801  0AC0  00D0               	movwf	writeLCD@ptr
  4802  0AC1  3088               	movlw	high (STR_34| (0+32768))
  4803  0AC2  00D1               	movwf	writeLCD@ptr+1
  4804  0AC3  300D               	movlw	13
  4805  0AC4  160A  118A  2426   	fcall	_writeLCD
  4806  0AC7  0008               	return
  4807  0AC8                     __end_of_textSelection7:	
  4808                           
  4809                           	psect	text8
  4810  0A02                     __ptext8:	
  4811 ;; *************** function _textSelection6 *****************
  4812 ;; Defined at:
  4813 ;;		line 90 in file "auxiliar.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;		None
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;		None
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  1    wreg      void 
  4820 ;; Registers used:
  4821 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4827 ;;      Params:         0       0       0       0       0
  4828 ;;      Locals:         0       0       0       0       0
  4829 ;;      Temps:          0       3       0       0       0
  4830 ;;      Totals:         0       3       0       0       0
  4831 ;;Total ram usage:        3 bytes
  4832 ;; Hardware stack levels used:    1
  4833 ;; Hardware stack levels required when called:    5
  4834 ;; This function calls:
  4835 ;;		___awdiv
  4836 ;;		_statusT0
  4837 ;;		_statusT0limite
  4838 ;;		_writeLCD
  4839 ;; This function is called by:
  4840 ;;		_main
  4841 ;; This function uses a non-reentrant model
  4842 ;;
  4843                           
  4844                           
  4845                           ;psect for function _textSelection6
  4846  0A02                     _textSelection6:	
  4847                           
  4848                           ;auxiliar.c: 92: writeLCD(9,1,"5");
  4849                           
  4850                           ;incstack = 0
  4851                           ; Regs used in _textSelection6: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4852  0A02  1283               	bcf	3,5	;RP0=0, select bank0
  4853  0A03  1303               	bcf	3,6	;RP1=0, select bank0
  4854  0A04  01CF               	clrf	writeLCD@y
  4855  0A05  0ACF               	incf	writeLCD@y,f
  4856  0A06  30CF               	movlw	low (STR_26| (0+32768))
  4857  0A07  00D0               	movwf	writeLCD@ptr
  4858  0A08  3088               	movlw	high (STR_26| (0+32768))
  4859  0A09  00D1               	movwf	writeLCD@ptr+1
  4860  0A0A  3009               	movlw	9
  4861  0A0B  160A  118A  2426  120A  158A  	fcall	_writeLCD
  4862                           
  4863                           ;auxiliar.c: 93: writeLCD(13,1,"7");
  4864  0A10  1283               	bcf	3,5	;RP0=0, select bank0
  4865  0A11  1303               	bcf	3,6	;RP1=0, select bank0
  4866  0A12  01CF               	clrf	writeLCD@y
  4867  0A13  0ACF               	incf	writeLCD@y,f
  4868  0A14  30D3               	movlw	low (STR_34| (0+32768))
  4869  0A15  00D0               	movwf	writeLCD@ptr
  4870  0A16  3088               	movlw	high (STR_34| (0+32768))
  4871  0A17  00D1               	movwf	writeLCD@ptr+1
  4872  0A18  300D               	movlw	13
  4873  0A19  160A  118A  2426  120A  158A  	fcall	_writeLCD
  4874                           
  4875                           ;auxiliar.c: 94: if( statusT0() < ( statusT0limite()/2 ) )
  4876  0A1E  160A  118A  21A1  120A  158A  	fcall	_statusT0
  4877  0A23  1283               	bcf	3,5	;RP0=0, select bank0
  4878  0A24  1303               	bcf	3,6	;RP1=0, select bank0
  4879  0A25  0847               	movf	?_statusT0,w
  4880  0A26  00D4               	movwf	??_textSelection6
  4881  0A27  0848               	movf	?_statusT0+1,w
  4882  0A28  00D5               	movwf	??_textSelection6+1
  4883  0A29  3002               	movlw	2
  4884  0A2A  00C9               	movwf	___awdiv@divisor
  4885  0A2B  3000               	movlw	0
  4886  0A2C  00CA               	movwf	___awdiv@divisor+1
  4887  0A2D  160A  118A  21A8  120A  158A  	fcall	_statusT0limite
  4888  0A32  1283               	bcf	3,5	;RP0=0, select bank0
  4889  0A33  1303               	bcf	3,6	;RP1=0, select bank0
  4890  0A34  0848               	movf	?_statusT0limite+1,w
  4891  0A35  00CC               	movwf	___awdiv@dividend+1
  4892  0A36  0847               	movf	?_statusT0limite,w
  4893  0A37  00CB               	movwf	___awdiv@dividend
  4894  0A38  120A  158A  20E1  120A  158A  	fcall	___awdiv
  4895  0A3D  1283               	bcf	3,5	;RP0=0, select bank0
  4896  0A3E  1303               	bcf	3,6	;RP1=0, select bank0
  4897  0A3F  0855               	movf	??_textSelection6+1,w
  4898  0A40  3A80               	xorlw	128
  4899  0A41  00D6               	movwf	??_textSelection6+2
  4900  0A42  084A               	movf	?___awdiv+1,w
  4901  0A43  3A80               	xorlw	128
  4902  0A44  0256               	subwf	??_textSelection6+2,w
  4903  0A45  1D03               	skipz
  4904  0A46  2A49               	goto	u3235
  4905  0A47  0849               	movf	?___awdiv,w
  4906  0A48  0254               	subwf	??_textSelection6,w
  4907  0A49                     u3235:	
  4908  0A49  1803               	skipnc
  4909  0A4A  2A58               	goto	l4275
  4910                           
  4911                           ;auxiliar.c: 95: writeLCD(11,1," ");
  4912  0A4B  1283               	bcf	3,5	;RP0=0, select bank0
  4913  0A4C  1303               	bcf	3,6	;RP1=0, select bank0
  4914  0A4D  01CF               	clrf	writeLCD@y
  4915  0A4E  0ACF               	incf	writeLCD@y,f
  4916  0A4F  300F               	movlw	low ((STR_68+15)| (0+32768))
  4917  0A50  00D0               	movwf	writeLCD@ptr
  4918  0A51  3087               	movlw	high ((STR_68+15)| (0+32768))
  4919  0A52  00D1               	movwf	writeLCD@ptr+1
  4920  0A53  300B               	movlw	11
  4921  0A54  160A  118A  2426   	fcall	_writeLCD
  4922  0A57  0008               	return
  4923  0A58                     l4275:	
  4924                           
  4925                           ;auxiliar.c: 96: else
  4926                           ;auxiliar.c: 97: writeLCD(11,1,"6");
  4927  0A58  1283               	bcf	3,5	;RP0=0, select bank0
  4928  0A59  1303               	bcf	3,6	;RP1=0, select bank0
  4929  0A5A  01CF               	clrf	writeLCD@y
  4930  0A5B  0ACF               	incf	writeLCD@y,f
  4931  0A5C  30D1               	movlw	low (STR_30| (0+32768))
  4932  0A5D  00D0               	movwf	writeLCD@ptr
  4933  0A5E  3088               	movlw	high (STR_30| (0+32768))
  4934  0A5F  00D1               	movwf	writeLCD@ptr+1
  4935  0A60  300B               	movlw	11
  4936  0A61  160A  118A  2426   	fcall	_writeLCD
  4937  0A64  0008               	return
  4938  0A65                     __end_of_textSelection6:	
  4939                           
  4940                           	psect	text9
  4941  099F                     __ptext9:	
  4942 ;; *************** function _textSelection5 *****************
  4943 ;; Defined at:
  4944 ;;		line 80 in file "auxiliar.c"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;		None
  4947 ;; Auto vars:     Size  Location     Type
  4948 ;;		None
  4949 ;; Return value:  Size  Location     Type
  4950 ;;                  1    wreg      void 
  4951 ;; Registers used:
  4952 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4953 ;; Tracked objects:
  4954 ;;		On entry : 0/0
  4955 ;;		On exit  : 0/0
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4958 ;;      Params:         0       0       0       0       0
  4959 ;;      Locals:         0       0       0       0       0
  4960 ;;      Temps:          0       3       0       0       0
  4961 ;;      Totals:         0       3       0       0       0
  4962 ;;Total ram usage:        3 bytes
  4963 ;; Hardware stack levels used:    1
  4964 ;; Hardware stack levels required when called:    5
  4965 ;; This function calls:
  4966 ;;		___awdiv
  4967 ;;		_statusT0
  4968 ;;		_statusT0limite
  4969 ;;		_writeLCD
  4970 ;; This function is called by:
  4971 ;;		_main
  4972 ;; This function uses a non-reentrant model
  4973 ;;
  4974                           
  4975                           
  4976                           ;psect for function _textSelection5
  4977  099F                     _textSelection5:	
  4978                           
  4979                           ;auxiliar.c: 82: writeLCD(6,1,"4");
  4980                           
  4981                           ;incstack = 0
  4982                           ; Regs used in _textSelection5: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4983  099F  1283               	bcf	3,5	;RP0=0, select bank0
  4984  09A0  1303               	bcf	3,6	;RP1=0, select bank0
  4985  09A1  01CF               	clrf	writeLCD@y
  4986  09A2  0ACF               	incf	writeLCD@y,f
  4987  09A3  30CD               	movlw	low (STR_22| (0+32768))
  4988  09A4  00D0               	movwf	writeLCD@ptr
  4989  09A5  3088               	movlw	high (STR_22| (0+32768))
  4990  09A6  00D1               	movwf	writeLCD@ptr+1
  4991  09A7  3006               	movlw	6
  4992  09A8  160A  118A  2426  120A  158A  	fcall	_writeLCD
  4993                           
  4994                           ;auxiliar.c: 83: writeLCD(11,1,"6");
  4995  09AD  1283               	bcf	3,5	;RP0=0, select bank0
  4996  09AE  1303               	bcf	3,6	;RP1=0, select bank0
  4997  09AF  01CF               	clrf	writeLCD@y
  4998  09B0  0ACF               	incf	writeLCD@y,f
  4999  09B1  30D1               	movlw	low (STR_30| (0+32768))
  5000  09B2  00D0               	movwf	writeLCD@ptr
  5001  09B3  3088               	movlw	high (STR_30| (0+32768))
  5002  09B4  00D1               	movwf	writeLCD@ptr+1
  5003  09B5  300B               	movlw	11
  5004  09B6  160A  118A  2426  120A  158A  	fcall	_writeLCD
  5005                           
  5006                           ;auxiliar.c: 84: if( statusT0() < ( statusT0limite()/2 ) )
  5007  09BB  160A  118A  21A1  120A  158A  	fcall	_statusT0
  5008  09C0  1283               	bcf	3,5	;RP0=0, select bank0
  5009  09C1  1303               	bcf	3,6	;RP1=0, select bank0
  5010  09C2  0847               	movf	?_statusT0,w
  5011  09C3  00D4               	movwf	??_textSelection5
  5012  09C4  0848               	movf	?_statusT0+1,w
  5013  09C5  00D5               	movwf	??_textSelection5+1
  5014  09C6  3002               	movlw	2
  5015  09C7  00C9               	movwf	___awdiv@divisor
  5016  09C8  3000               	movlw	0
  5017  09C9  00CA               	movwf	___awdiv@divisor+1
  5018  09CA  160A  118A  21A8  120A  158A  	fcall	_statusT0limite
  5019  09CF  1283               	bcf	3,5	;RP0=0, select bank0
  5020  09D0  1303               	bcf	3,6	;RP1=0, select bank0
  5021  09D1  0848               	movf	?_statusT0limite+1,w
  5022  09D2  00CC               	movwf	___awdiv@dividend+1
  5023  09D3  0847               	movf	?_statusT0limite,w
  5024  09D4  00CB               	movwf	___awdiv@dividend
  5025  09D5  120A  158A  20E1  120A  158A  	fcall	___awdiv
  5026  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  5027  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  5028  09DC  0855               	movf	??_textSelection5+1,w
  5029  09DD  3A80               	xorlw	128
  5030  09DE  00D6               	movwf	??_textSelection5+2
  5031  09DF  084A               	movf	?___awdiv+1,w
  5032  09E0  3A80               	xorlw	128
  5033  09E1  0256               	subwf	??_textSelection5+2,w
  5034  09E2  1D03               	skipz
  5035  09E3  29E6               	goto	u3225
  5036  09E4  0849               	movf	?___awdiv,w
  5037  09E5  0254               	subwf	??_textSelection5,w
  5038  09E6                     u3225:	
  5039  09E6  1803               	skipnc
  5040  09E7  29F5               	goto	l4267
  5041                           
  5042                           ;auxiliar.c: 85: writeLCD(9,1," ");
  5043  09E8  1283               	bcf	3,5	;RP0=0, select bank0
  5044  09E9  1303               	bcf	3,6	;RP1=0, select bank0
  5045  09EA  01CF               	clrf	writeLCD@y
  5046  09EB  0ACF               	incf	writeLCD@y,f
  5047  09EC  300F               	movlw	low ((STR_68+15)| (0+32768))
  5048  09ED  00D0               	movwf	writeLCD@ptr
  5049  09EE  3087               	movlw	high ((STR_68+15)| (0+32768))
  5050  09EF  00D1               	movwf	writeLCD@ptr+1
  5051  09F0  3009               	movlw	9
  5052  09F1  160A  118A  2426   	fcall	_writeLCD
  5053  09F4  0008               	return
  5054  09F5                     l4267:	
  5055                           
  5056                           ;auxiliar.c: 86: else
  5057                           ;auxiliar.c: 87: writeLCD(9,1,"5");
  5058  09F5  1283               	bcf	3,5	;RP0=0, select bank0
  5059  09F6  1303               	bcf	3,6	;RP1=0, select bank0
  5060  09F7  01CF               	clrf	writeLCD@y
  5061  09F8  0ACF               	incf	writeLCD@y,f
  5062  09F9  30CF               	movlw	low (STR_26| (0+32768))
  5063  09FA  00D0               	movwf	writeLCD@ptr
  5064  09FB  3088               	movlw	high (STR_26| (0+32768))
  5065  09FC  00D1               	movwf	writeLCD@ptr+1
  5066  09FD  3009               	movlw	9
  5067  09FE  160A  118A  2426   	fcall	_writeLCD
  5068  0A01  0008               	return
  5069  0A02                     __end_of_textSelection5:	
  5070                           
  5071                           	psect	text10
  5072  093C                     __ptext10:	
  5073 ;; *************** function _textSelection4 *****************
  5074 ;; Defined at:
  5075 ;;		line 70 in file "auxiliar.c"
  5076 ;; Parameters:    Size  Location     Type
  5077 ;;		None
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;		None
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  1    wreg      void 
  5082 ;; Registers used:
  5083 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5089 ;;      Params:         0       0       0       0       0
  5090 ;;      Locals:         0       0       0       0       0
  5091 ;;      Temps:          0       3       0       0       0
  5092 ;;      Totals:         0       3       0       0       0
  5093 ;;Total ram usage:        3 bytes
  5094 ;; Hardware stack levels used:    1
  5095 ;; Hardware stack levels required when called:    5
  5096 ;; This function calls:
  5097 ;;		___awdiv
  5098 ;;		_statusT0
  5099 ;;		_statusT0limite
  5100 ;;		_writeLCD
  5101 ;; This function is called by:
  5102 ;;		_main
  5103 ;; This function uses a non-reentrant model
  5104 ;;
  5105                           
  5106                           
  5107                           ;psect for function _textSelection4
  5108  093C                     _textSelection4:	
  5109                           
  5110                           ;auxiliar.c: 72: writeLCD(4,1,"3");
  5111                           
  5112                           ;incstack = 0
  5113                           ; Regs used in _textSelection4: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5114  093C  1283               	bcf	3,5	;RP0=0, select bank0
  5115  093D  1303               	bcf	3,6	;RP1=0, select bank0
  5116  093E  01CF               	clrf	writeLCD@y
  5117  093F  0ACF               	incf	writeLCD@y,f
  5118  0940  30FD               	movlw	low ((STR_79+15)| (0+32768))
  5119  0941  00D0               	movwf	writeLCD@ptr
  5120  0942  3087               	movlw	high ((STR_79+15)| (0+32768))
  5121  0943  00D1               	movwf	writeLCD@ptr+1
  5122  0944  3004               	movlw	4
  5123  0945  160A  118A  2426  120A  158A  	fcall	_writeLCD
  5124                           
  5125                           ;auxiliar.c: 73: writeLCD(9,1,"5");
  5126  094A  1283               	bcf	3,5	;RP0=0, select bank0
  5127  094B  1303               	bcf	3,6	;RP1=0, select bank0
  5128  094C  01CF               	clrf	writeLCD@y
  5129  094D  0ACF               	incf	writeLCD@y,f
  5130  094E  30CF               	movlw	low (STR_26| (0+32768))
  5131  094F  00D0               	movwf	writeLCD@ptr
  5132  0950  3088               	movlw	high (STR_26| (0+32768))
  5133  0951  00D1               	movwf	writeLCD@ptr+1
  5134  0952  3009               	movlw	9
  5135  0953  160A  118A  2426  120A  158A  	fcall	_writeLCD
  5136                           
  5137                           ;auxiliar.c: 74: if( statusT0() < ( statusT0limite()/2 ) )
  5138  0958  160A  118A  21A1  120A  158A  	fcall	_statusT0
  5139  095D  1283               	bcf	3,5	;RP0=0, select bank0
  5140  095E  1303               	bcf	3,6	;RP1=0, select bank0
  5141  095F  0847               	movf	?_statusT0,w
  5142  0960  00D4               	movwf	??_textSelection4
  5143  0961  0848               	movf	?_statusT0+1,w
  5144  0962  00D5               	movwf	??_textSelection4+1
  5145  0963  3002               	movlw	2
  5146  0964  00C9               	movwf	___awdiv@divisor
  5147  0965  3000               	movlw	0
  5148  0966  00CA               	movwf	___awdiv@divisor+1
  5149  0967  160A  118A  21A8  120A  158A  	fcall	_statusT0limite
  5150  096C  1283               	bcf	3,5	;RP0=0, select bank0
  5151  096D  1303               	bcf	3,6	;RP1=0, select bank0
  5152  096E  0848               	movf	?_statusT0limite+1,w
  5153  096F  00CC               	movwf	___awdiv@dividend+1
  5154  0970  0847               	movf	?_statusT0limite,w
  5155  0971  00CB               	movwf	___awdiv@dividend
  5156  0972  120A  158A  20E1  120A  158A  	fcall	___awdiv
  5157  0977  1283               	bcf	3,5	;RP0=0, select bank0
  5158  0978  1303               	bcf	3,6	;RP1=0, select bank0
  5159  0979  0855               	movf	??_textSelection4+1,w
  5160  097A  3A80               	xorlw	128
  5161  097B  00D6               	movwf	??_textSelection4+2
  5162  097C  084A               	movf	?___awdiv+1,w
  5163  097D  3A80               	xorlw	128
  5164  097E  0256               	subwf	??_textSelection4+2,w
  5165  097F  1D03               	skipz
  5166  0980  2983               	goto	u3215
  5167  0981  0849               	movf	?___awdiv,w
  5168  0982  0254               	subwf	??_textSelection4,w
  5169  0983                     u3215:	
  5170  0983  1803               	skipnc
  5171  0984  2992               	goto	l4259
  5172                           
  5173                           ;auxiliar.c: 75: writeLCD(6,1," ");
  5174  0985  1283               	bcf	3,5	;RP0=0, select bank0
  5175  0986  1303               	bcf	3,6	;RP1=0, select bank0
  5176  0987  01CF               	clrf	writeLCD@y
  5177  0988  0ACF               	incf	writeLCD@y,f
  5178  0989  300F               	movlw	low ((STR_68+15)| (0+32768))
  5179  098A  00D0               	movwf	writeLCD@ptr
  5180  098B  3087               	movlw	high ((STR_68+15)| (0+32768))
  5181  098C  00D1               	movwf	writeLCD@ptr+1
  5182  098D  3006               	movlw	6
  5183  098E  160A  118A  2426   	fcall	_writeLCD
  5184  0991  0008               	return
  5185  0992                     l4259:	
  5186                           
  5187                           ;auxiliar.c: 76: else
  5188                           ;auxiliar.c: 77: writeLCD(6,1,"4");
  5189  0992  1283               	bcf	3,5	;RP0=0, select bank0
  5190  0993  1303               	bcf	3,6	;RP1=0, select bank0
  5191  0994  01CF               	clrf	writeLCD@y
  5192  0995  0ACF               	incf	writeLCD@y,f
  5193  0996  30CD               	movlw	low (STR_22| (0+32768))
  5194  0997  00D0               	movwf	writeLCD@ptr
  5195  0998  3088               	movlw	high (STR_22| (0+32768))
  5196  0999  00D1               	movwf	writeLCD@ptr+1
  5197  099A  3006               	movlw	6
  5198  099B  160A  118A  2426   	fcall	_writeLCD
  5199  099E  0008               	return
  5200  099F                     __end_of_textSelection4:	
  5201                           
  5202                           	psect	text11
  5203  179D                     __ptext11:	
  5204 ;; *************** function _textSelection3 *****************
  5205 ;; Defined at:
  5206 ;;		line 60 in file "auxiliar.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;		None
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;		None
  5211 ;; Return value:  Size  Location     Type
  5212 ;;                  1    wreg      void 
  5213 ;; Registers used:
  5214 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5220 ;;      Params:         0       0       0       0       0
  5221 ;;      Locals:         0       0       0       0       0
  5222 ;;      Temps:          0       3       0       0       0
  5223 ;;      Totals:         0       3       0       0       0
  5224 ;;Total ram usage:        3 bytes
  5225 ;; Hardware stack levels used:    1
  5226 ;; Hardware stack levels required when called:    5
  5227 ;; This function calls:
  5228 ;;		___awdiv
  5229 ;;		_statusT0
  5230 ;;		_statusT0limite
  5231 ;;		_writeLCD
  5232 ;; This function is called by:
  5233 ;;		_main
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           
  5237                           
  5238                           ;psect for function _textSelection3
  5239  179D                     _textSelection3:	
  5240                           
  5241                           ;auxiliar.c: 62: writeLCD(2,1,"2");
  5242                           
  5243                           ;incstack = 0
  5244                           ; Regs used in _textSelection3: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5245  179D  1283               	bcf	3,5	;RP0=0, select bank0
  5246  179E  1303               	bcf	3,6	;RP1=0, select bank0
  5247  179F  01CF               	clrf	writeLCD@y
  5248  17A0  0ACF               	incf	writeLCD@y,f
  5249  17A1  30CB               	movlw	low (STR_14| (0+32768))
  5250  17A2  00D0               	movwf	writeLCD@ptr
  5251  17A3  3088               	movlw	high (STR_14| (0+32768))
  5252  17A4  00D1               	movwf	writeLCD@ptr+1
  5253  17A5  3002               	movlw	2
  5254  17A6  160A  118A  2426  160A  118A  	fcall	_writeLCD
  5255                           
  5256                           ;auxiliar.c: 63: writeLCD(6,1,"4");;
  5257  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  5258  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  5259  17AD  01CF               	clrf	writeLCD@y
  5260  17AE  0ACF               	incf	writeLCD@y,f
  5261  17AF  30CD               	movlw	low (STR_22| (0+32768))
  5262  17B0  00D0               	movwf	writeLCD@ptr
  5263  17B1  3088               	movlw	high (STR_22| (0+32768))
  5264  17B2  00D1               	movwf	writeLCD@ptr+1
  5265  17B3  3006               	movlw	6
  5266  17B4  160A  118A  2426  160A  118A  	fcall	_writeLCD
  5267                           
  5268                           ;auxiliar.c: 64: if( statusT0() < ( statusT0limite()/2 ) )
  5269  17B9  160A  118A  21A1  160A  118A  	fcall	_statusT0
  5270  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  5271  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  5272  17C0  0847               	movf	?_statusT0,w
  5273  17C1  00D4               	movwf	??_textSelection3
  5274  17C2  0848               	movf	?_statusT0+1,w
  5275  17C3  00D5               	movwf	??_textSelection3+1
  5276  17C4  3002               	movlw	2
  5277  17C5  00C9               	movwf	___awdiv@divisor
  5278  17C6  3000               	movlw	0
  5279  17C7  00CA               	movwf	___awdiv@divisor+1
  5280  17C8  160A  118A  21A8  160A  118A  	fcall	_statusT0limite
  5281  17CD  1283               	bcf	3,5	;RP0=0, select bank0
  5282  17CE  1303               	bcf	3,6	;RP1=0, select bank0
  5283  17CF  0848               	movf	?_statusT0limite+1,w
  5284  17D0  00CC               	movwf	___awdiv@dividend+1
  5285  17D1  0847               	movf	?_statusT0limite,w
  5286  17D2  00CB               	movwf	___awdiv@dividend
  5287  17D3  120A  158A  20E1  160A  118A  	fcall	___awdiv
  5288  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  5289  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  5290  17DA  0855               	movf	??_textSelection3+1,w
  5291  17DB  3A80               	xorlw	128
  5292  17DC  00D6               	movwf	??_textSelection3+2
  5293  17DD  084A               	movf	?___awdiv+1,w
  5294  17DE  3A80               	xorlw	128
  5295  17DF  0256               	subwf	??_textSelection3+2,w
  5296  17E0  1D03               	skipz
  5297  17E1  2FE4               	goto	u3205
  5298  17E2  0849               	movf	?___awdiv,w
  5299  17E3  0254               	subwf	??_textSelection3,w
  5300  17E4                     u3205:	
  5301  17E4  1803               	skipnc
  5302  17E5  2FF3               	goto	l4251
  5303                           
  5304                           ;auxiliar.c: 65: writeLCD(4,1," ");
  5305  17E6  1283               	bcf	3,5	;RP0=0, select bank0
  5306  17E7  1303               	bcf	3,6	;RP1=0, select bank0
  5307  17E8  01CF               	clrf	writeLCD@y
  5308  17E9  0ACF               	incf	writeLCD@y,f
  5309  17EA  300F               	movlw	low ((STR_68+15)| (0+32768))
  5310  17EB  00D0               	movwf	writeLCD@ptr
  5311  17EC  3087               	movlw	high ((STR_68+15)| (0+32768))
  5312  17ED  00D1               	movwf	writeLCD@ptr+1
  5313  17EE  3004               	movlw	4
  5314  17EF  160A  118A  2426   	fcall	_writeLCD
  5315  17F2  0008               	return
  5316  17F3                     l4251:	
  5317                           
  5318                           ;auxiliar.c: 66: else
  5319                           ;auxiliar.c: 67: writeLCD(4,1,"3");
  5320  17F3  1283               	bcf	3,5	;RP0=0, select bank0
  5321  17F4  1303               	bcf	3,6	;RP1=0, select bank0
  5322  17F5  01CF               	clrf	writeLCD@y
  5323  17F6  0ACF               	incf	writeLCD@y,f
  5324  17F7  30FD               	movlw	low ((STR_79+15)| (0+32768))
  5325  17F8  00D0               	movwf	writeLCD@ptr
  5326  17F9  3087               	movlw	high ((STR_79+15)| (0+32768))
  5327  17FA  00D1               	movwf	writeLCD@ptr+1
  5328  17FB  3004               	movlw	4
  5329  17FC  160A  118A  2426   	fcall	_writeLCD
  5330  17FF  0008               	return
  5331  1800                     __end_of_textSelection3:	
  5332                           
  5333                           	psect	text12
  5334  173A                     __ptext12:	
  5335 ;; *************** function _textSelection2 *****************
  5336 ;; Defined at:
  5337 ;;		line 50 in file "auxiliar.c"
  5338 ;; Parameters:    Size  Location     Type
  5339 ;;		None
  5340 ;; Auto vars:     Size  Location     Type
  5341 ;;		None
  5342 ;; Return value:  Size  Location     Type
  5343 ;;                  1    wreg      void 
  5344 ;; Registers used:
  5345 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5346 ;; Tracked objects:
  5347 ;;		On entry : 0/0
  5348 ;;		On exit  : 0/0
  5349 ;;		Unchanged: 0/0
  5350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5351 ;;      Params:         0       0       0       0       0
  5352 ;;      Locals:         0       0       0       0       0
  5353 ;;      Temps:          0       3       0       0       0
  5354 ;;      Totals:         0       3       0       0       0
  5355 ;;Total ram usage:        3 bytes
  5356 ;; Hardware stack levels used:    1
  5357 ;; Hardware stack levels required when called:    5
  5358 ;; This function calls:
  5359 ;;		___awdiv
  5360 ;;		_statusT0
  5361 ;;		_statusT0limite
  5362 ;;		_writeLCD
  5363 ;; This function is called by:
  5364 ;;		_main
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           
  5369                           ;psect for function _textSelection2
  5370  173A                     _textSelection2:	
  5371                           
  5372                           ;auxiliar.c: 52: writeLCD(0,1,"1");
  5373                           
  5374                           ;incstack = 0
  5375                           ; Regs used in _textSelection2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5376  173A  1283               	bcf	3,5	;RP0=0, select bank0
  5377  173B  1303               	bcf	3,6	;RP1=0, select bank0
  5378  173C  01CF               	clrf	writeLCD@y
  5379  173D  0ACF               	incf	writeLCD@y,f
  5380  173E  30C9               	movlw	low (STR_16| (0+32768))
  5381  173F  00D0               	movwf	writeLCD@ptr
  5382  1740  3088               	movlw	high (STR_16| (0+32768))
  5383  1741  00D1               	movwf	writeLCD@ptr+1
  5384  1742  3000               	movlw	0
  5385  1743  160A  118A  2426  160A  118A  	fcall	_writeLCD
  5386                           
  5387                           ;auxiliar.c: 53: writeLCD(4,1,"3");
  5388  1748  1283               	bcf	3,5	;RP0=0, select bank0
  5389  1749  1303               	bcf	3,6	;RP1=0, select bank0
  5390  174A  01CF               	clrf	writeLCD@y
  5391  174B  0ACF               	incf	writeLCD@y,f
  5392  174C  30FD               	movlw	low ((STR_79+15)| (0+32768))
  5393  174D  00D0               	movwf	writeLCD@ptr
  5394  174E  3087               	movlw	high ((STR_79+15)| (0+32768))
  5395  174F  00D1               	movwf	writeLCD@ptr+1
  5396  1750  3004               	movlw	4
  5397  1751  160A  118A  2426  160A  118A  	fcall	_writeLCD
  5398                           
  5399                           ;auxiliar.c: 54: if( statusT0() < ( statusT0limite()/2 ) )
  5400  1756  160A  118A  21A1  160A  118A  	fcall	_statusT0
  5401  175B  1283               	bcf	3,5	;RP0=0, select bank0
  5402  175C  1303               	bcf	3,6	;RP1=0, select bank0
  5403  175D  0847               	movf	?_statusT0,w
  5404  175E  00D4               	movwf	??_textSelection2
  5405  175F  0848               	movf	?_statusT0+1,w
  5406  1760  00D5               	movwf	??_textSelection2+1
  5407  1761  3002               	movlw	2
  5408  1762  00C9               	movwf	___awdiv@divisor
  5409  1763  3000               	movlw	0
  5410  1764  00CA               	movwf	___awdiv@divisor+1
  5411  1765  160A  118A  21A8  160A  118A  	fcall	_statusT0limite
  5412  176A  1283               	bcf	3,5	;RP0=0, select bank0
  5413  176B  1303               	bcf	3,6	;RP1=0, select bank0
  5414  176C  0848               	movf	?_statusT0limite+1,w
  5415  176D  00CC               	movwf	___awdiv@dividend+1
  5416  176E  0847               	movf	?_statusT0limite,w
  5417  176F  00CB               	movwf	___awdiv@dividend
  5418  1770  120A  158A  20E1  160A  118A  	fcall	___awdiv
  5419  1775  1283               	bcf	3,5	;RP0=0, select bank0
  5420  1776  1303               	bcf	3,6	;RP1=0, select bank0
  5421  1777  0855               	movf	??_textSelection2+1,w
  5422  1778  3A80               	xorlw	128
  5423  1779  00D6               	movwf	??_textSelection2+2
  5424  177A  084A               	movf	?___awdiv+1,w
  5425  177B  3A80               	xorlw	128
  5426  177C  0256               	subwf	??_textSelection2+2,w
  5427  177D  1D03               	skipz
  5428  177E  2F81               	goto	u3195
  5429  177F  0849               	movf	?___awdiv,w
  5430  1780  0254               	subwf	??_textSelection2,w
  5431  1781                     u3195:	
  5432  1781  1803               	skipnc
  5433  1782  2F90               	goto	l4243
  5434                           
  5435                           ;auxiliar.c: 55: writeLCD(2,1," ");
  5436  1783  1283               	bcf	3,5	;RP0=0, select bank0
  5437  1784  1303               	bcf	3,6	;RP1=0, select bank0
  5438  1785  01CF               	clrf	writeLCD@y
  5439  1786  0ACF               	incf	writeLCD@y,f
  5440  1787  300F               	movlw	low ((STR_68+15)| (0+32768))
  5441  1788  00D0               	movwf	writeLCD@ptr
  5442  1789  3087               	movlw	high ((STR_68+15)| (0+32768))
  5443  178A  00D1               	movwf	writeLCD@ptr+1
  5444  178B  3002               	movlw	2
  5445  178C  160A  118A  2426   	fcall	_writeLCD
  5446  178F  0008               	return
  5447  1790                     l4243:	
  5448                           
  5449                           ;auxiliar.c: 56: else
  5450                           ;auxiliar.c: 57: writeLCD(2,1,"2");
  5451  1790  1283               	bcf	3,5	;RP0=0, select bank0
  5452  1791  1303               	bcf	3,6	;RP1=0, select bank0
  5453  1792  01CF               	clrf	writeLCD@y
  5454  1793  0ACF               	incf	writeLCD@y,f
  5455  1794  30CB               	movlw	low (STR_14| (0+32768))
  5456  1795  00D0               	movwf	writeLCD@ptr
  5457  1796  3088               	movlw	high (STR_14| (0+32768))
  5458  1797  00D1               	movwf	writeLCD@ptr+1
  5459  1798  3002               	movlw	2
  5460  1799  160A  118A  2426   	fcall	_writeLCD
  5461  179C  0008               	return
  5462  179D                     __end_of_textSelection2:	
  5463                           
  5464                           	psect	text13
  5465  16D7                     __ptext13:	
  5466 ;; *************** function _textSelection1 *****************
  5467 ;; Defined at:
  5468 ;;		line 39 in file "auxiliar.c"
  5469 ;; Parameters:    Size  Location     Type
  5470 ;;		None
  5471 ;; Auto vars:     Size  Location     Type
  5472 ;;		None
  5473 ;; Return value:  Size  Location     Type
  5474 ;;                  1    wreg      void 
  5475 ;; Registers used:
  5476 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5477 ;; Tracked objects:
  5478 ;;		On entry : 0/0
  5479 ;;		On exit  : 0/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5482 ;;      Params:         0       0       0       0       0
  5483 ;;      Locals:         0       0       0       0       0
  5484 ;;      Temps:          0       3       0       0       0
  5485 ;;      Totals:         0       3       0       0       0
  5486 ;;Total ram usage:        3 bytes
  5487 ;; Hardware stack levels used:    1
  5488 ;; Hardware stack levels required when called:    5
  5489 ;; This function calls:
  5490 ;;		___awdiv
  5491 ;;		_statusT0
  5492 ;;		_statusT0limite
  5493 ;;		_writeLCD
  5494 ;; This function is called by:
  5495 ;;		_main
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499                           
  5500                           ;psect for function _textSelection1
  5501  16D7                     _textSelection1:	
  5502                           
  5503                           ;auxiliar.c: 41: writeLCD(15,1,"8");
  5504                           
  5505                           ;incstack = 0
  5506                           ; Regs used in _textSelection1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5507  16D7  1283               	bcf	3,5	;RP0=0, select bank0
  5508  16D8  1303               	bcf	3,6	;RP1=0, select bank0
  5509  16D9  01CF               	clrf	writeLCD@y
  5510  16DA  0ACF               	incf	writeLCD@y,f
  5511  16DB  30BA               	movlw	low ((STR_121+15)| (0+32768))
  5512  16DC  00D0               	movwf	writeLCD@ptr
  5513  16DD  3086               	movlw	high ((STR_121+15)| (0+32768))
  5514  16DE  00D1               	movwf	writeLCD@ptr+1
  5515  16DF  300F               	movlw	15
  5516  16E0  160A  118A  2426  160A  118A  	fcall	_writeLCD
  5517                           
  5518                           ;auxiliar.c: 42: writeLCD(2,1,"2");
  5519  16E5  1283               	bcf	3,5	;RP0=0, select bank0
  5520  16E6  1303               	bcf	3,6	;RP1=0, select bank0
  5521  16E7  01CF               	clrf	writeLCD@y
  5522  16E8  0ACF               	incf	writeLCD@y,f
  5523  16E9  30CB               	movlw	low (STR_14| (0+32768))
  5524  16EA  00D0               	movwf	writeLCD@ptr
  5525  16EB  3088               	movlw	high (STR_14| (0+32768))
  5526  16EC  00D1               	movwf	writeLCD@ptr+1
  5527  16ED  3002               	movlw	2
  5528  16EE  160A  118A  2426  160A  118A  	fcall	_writeLCD
  5529                           
  5530                           ;auxiliar.c: 43: if( statusT0() < ( statusT0limite()/2 ) )
  5531  16F3  160A  118A  21A1  160A  118A  	fcall	_statusT0
  5532  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  5533  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  5534  16FA  0847               	movf	?_statusT0,w
  5535  16FB  00D4               	movwf	??_textSelection1
  5536  16FC  0848               	movf	?_statusT0+1,w
  5537  16FD  00D5               	movwf	??_textSelection1+1
  5538  16FE  3002               	movlw	2
  5539  16FF  00C9               	movwf	___awdiv@divisor
  5540  1700  3000               	movlw	0
  5541  1701  00CA               	movwf	___awdiv@divisor+1
  5542  1702  160A  118A  21A8  160A  118A  	fcall	_statusT0limite
  5543  1707  1283               	bcf	3,5	;RP0=0, select bank0
  5544  1708  1303               	bcf	3,6	;RP1=0, select bank0
  5545  1709  0848               	movf	?_statusT0limite+1,w
  5546  170A  00CC               	movwf	___awdiv@dividend+1
  5547  170B  0847               	movf	?_statusT0limite,w
  5548  170C  00CB               	movwf	___awdiv@dividend
  5549  170D  120A  158A  20E1  160A  118A  	fcall	___awdiv
  5550  1712  1283               	bcf	3,5	;RP0=0, select bank0
  5551  1713  1303               	bcf	3,6	;RP1=0, select bank0
  5552  1714  0855               	movf	??_textSelection1+1,w
  5553  1715  3A80               	xorlw	128
  5554  1716  00D6               	movwf	??_textSelection1+2
  5555  1717  084A               	movf	?___awdiv+1,w
  5556  1718  3A80               	xorlw	128
  5557  1719  0256               	subwf	??_textSelection1+2,w
  5558  171A  1D03               	skipz
  5559  171B  2F1E               	goto	u3185
  5560  171C  0849               	movf	?___awdiv,w
  5561  171D  0254               	subwf	??_textSelection1,w
  5562  171E                     u3185:	
  5563  171E  1803               	skipnc
  5564  171F  2F2D               	goto	l4235
  5565                           
  5566                           ;auxiliar.c: 44: writeLCD(0,1," ");
  5567  1720  1283               	bcf	3,5	;RP0=0, select bank0
  5568  1721  1303               	bcf	3,6	;RP1=0, select bank0
  5569  1722  01CF               	clrf	writeLCD@y
  5570  1723  0ACF               	incf	writeLCD@y,f
  5571  1724  300F               	movlw	low ((STR_68+15)| (0+32768))
  5572  1725  00D0               	movwf	writeLCD@ptr
  5573  1726  3087               	movlw	high ((STR_68+15)| (0+32768))
  5574  1727  00D1               	movwf	writeLCD@ptr+1
  5575  1728  3000               	movlw	0
  5576  1729  160A  118A  2426   	fcall	_writeLCD
  5577  172C  0008               	return
  5578  172D                     l4235:	
  5579                           
  5580                           ;auxiliar.c: 45: else
  5581                           ;auxiliar.c: 46: writeLCD(0,1,"1");
  5582  172D  1283               	bcf	3,5	;RP0=0, select bank0
  5583  172E  1303               	bcf	3,6	;RP1=0, select bank0
  5584  172F  01CF               	clrf	writeLCD@y
  5585  1730  0ACF               	incf	writeLCD@y,f
  5586  1731  30C9               	movlw	low (STR_16| (0+32768))
  5587  1732  00D0               	movwf	writeLCD@ptr
  5588  1733  3088               	movlw	high (STR_16| (0+32768))
  5589  1734  00D1               	movwf	writeLCD@ptr+1
  5590  1735  3000               	movlw	0
  5591  1736  160A  118A  2426   	fcall	_writeLCD
  5592  1739  0008               	return
  5593  173A                     __end_of_textSelection1:	
  5594                           
  5595                           	psect	text14
  5596  11A8                     __ptext14:	
  5597 ;; *************** function _statusT0limite *****************
  5598 ;; Defined at:
  5599 ;;		line 42 in file "timer0.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;		None
  5602 ;; Auto vars:     Size  Location     Type
  5603 ;;		None
  5604 ;; Return value:  Size  Location     Type
  5605 ;;                  2    0[BANK0 ] int 
  5606 ;; Registers used:
  5607 ;;		wreg
  5608 ;; Tracked objects:
  5609 ;;		On entry : 0/0
  5610 ;;		On exit  : 0/0
  5611 ;;		Unchanged: 0/0
  5612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5613 ;;      Params:         0       2       0       0       0
  5614 ;;      Locals:         0       0       0       0       0
  5615 ;;      Temps:          0       0       0       0       0
  5616 ;;      Totals:         0       2       0       0       0
  5617 ;;Total ram usage:        2 bytes
  5618 ;; Hardware stack levels used:    1
  5619 ;; Hardware stack levels required when called:    2
  5620 ;; This function calls:
  5621 ;;		Nothing
  5622 ;; This function is called by:
  5623 ;;		_textSelection1
  5624 ;;		_textSelection2
  5625 ;;		_textSelection3
  5626 ;;		_textSelection4
  5627 ;;		_textSelection5
  5628 ;;		_textSelection6
  5629 ;;		_textSelection7
  5630 ;;		_textSelection8
  5631 ;;		_textSelectionEST
  5632 ;;		_textSelectionCLP
  5633 ;;		_textSelectionPAR
  5634 ;;		_textSelectionDES
  5635 ;; This function uses a non-reentrant model
  5636 ;;
  5637                           
  5638                           
  5639                           ;psect for function _statusT0limite
  5640  11A8                     _statusT0limite:	
  5641                           
  5642                           ;timer0.c: 44: return( t0final );
  5643                           
  5644                           ;incstack = 0
  5645                           ; Regs used in _statusT0limite: [wreg]
  5646  11A8  1283               	bcf	3,5	;RP0=0, select bank0
  5647  11A9  1303               	bcf	3,6	;RP1=0, select bank0
  5648  11AA  0841               	movf	_t0final+1,w
  5649  11AB  00C8               	movwf	?_statusT0limite+1
  5650  11AC  0840               	movf	_t0final,w
  5651  11AD  00C7               	movwf	?_statusT0limite
  5652  11AE  0008               	return
  5653  11AF                     __end_of_statusT0limite:	
  5654                           
  5655                           	psect	text15
  5656  11A1                     __ptext15:	
  5657 ;; *************** function _statusT0 *****************
  5658 ;; Defined at:
  5659 ;;		line 33 in file "timer0.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;		None
  5662 ;; Auto vars:     Size  Location     Type
  5663 ;;		None
  5664 ;; Return value:  Size  Location     Type
  5665 ;;                  2    0[BANK0 ] int 
  5666 ;; Registers used:
  5667 ;;		wreg
  5668 ;; Tracked objects:
  5669 ;;		On entry : 0/0
  5670 ;;		On exit  : 0/0
  5671 ;;		Unchanged: 0/0
  5672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5673 ;;      Params:         0       2       0       0       0
  5674 ;;      Locals:         0       0       0       0       0
  5675 ;;      Temps:          0       0       0       0       0
  5676 ;;      Totals:         0       2       0       0       0
  5677 ;;Total ram usage:        2 bytes
  5678 ;; Hardware stack levels used:    1
  5679 ;; Hardware stack levels required when called:    2
  5680 ;; This function calls:
  5681 ;;		Nothing
  5682 ;; This function is called by:
  5683 ;;		_textSelection1
  5684 ;;		_textSelection2
  5685 ;;		_textSelection3
  5686 ;;		_textSelection4
  5687 ;;		_textSelection5
  5688 ;;		_textSelection6
  5689 ;;		_textSelection7
  5690 ;;		_textSelection8
  5691 ;;		_textSelectionEST
  5692 ;;		_textSelectionCLP
  5693 ;;		_textSelectionPAR
  5694 ;;		_textSelectionDES
  5695 ;; This function uses a non-reentrant model
  5696 ;;
  5697                           
  5698                           
  5699                           ;psect for function _statusT0
  5700  11A1                     _statusT0:	
  5701                           
  5702                           ;timer0.c: 35: return( t0cont );
  5703                           
  5704                           ;incstack = 0
  5705                           ; Regs used in _statusT0: [wreg]
  5706  11A1  1283               	bcf	3,5	;RP0=0, select bank0
  5707  11A2  1303               	bcf	3,6	;RP1=0, select bank0
  5708  11A3  083F               	movf	_t0cont+1,w
  5709  11A4  00C8               	movwf	?_statusT0+1
  5710  11A5  083E               	movf	_t0cont,w
  5711  11A6  00C7               	movwf	?_statusT0
  5712  11A7  0008               	return
  5713  11A8                     __end_of_statusT0:	
  5714                           
  5715                           	psect	text16
  5716  08E1                     __ptext16:	
  5717 ;; *************** function ___awdiv *****************
  5718 ;; Defined at:
  5719 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  5720 ;; Parameters:    Size  Location     Type
  5721 ;;  divisor         2    2[BANK0 ] int 
  5722 ;;  dividend        2    4[BANK0 ] int 
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;  quotient        2    9[BANK0 ] int 
  5725 ;;  sign            1    8[BANK0 ] unsigned char 
  5726 ;;  counter         1    7[BANK0 ] unsigned char 
  5727 ;; Return value:  Size  Location     Type
  5728 ;;                  2    2[BANK0 ] int 
  5729 ;; Registers used:
  5730 ;;		wreg, status,2, status,0
  5731 ;; Tracked objects:
  5732 ;;		On entry : 0/0
  5733 ;;		On exit  : 0/0
  5734 ;;		Unchanged: 0/0
  5735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5736 ;;      Params:         0       4       0       0       0
  5737 ;;      Locals:         0       4       0       0       0
  5738 ;;      Temps:          0       1       0       0       0
  5739 ;;      Totals:         0       9       0       0       0
  5740 ;;Total ram usage:        9 bytes
  5741 ;; Hardware stack levels used:    1
  5742 ;; Hardware stack levels required when called:    2
  5743 ;; This function calls:
  5744 ;;		Nothing
  5745 ;; This function is called by:
  5746 ;;		_textSelection1
  5747 ;;		_textSelection2
  5748 ;;		_textSelection3
  5749 ;;		_textSelection4
  5750 ;;		_textSelection5
  5751 ;;		_textSelection6
  5752 ;;		_textSelection7
  5753 ;;		_textSelection8
  5754 ;;		_textSelectionEST
  5755 ;;		_textSelectionCLP
  5756 ;;		_textSelectionPAR
  5757 ;;		_textSelectionDES
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           
  5762                           ;psect for function ___awdiv
  5763  08E1                     ___awdiv:	
  5764                           
  5765                           ;incstack = 0
  5766                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5767  08E1  1283               	bcf	3,5	;RP0=0, select bank0
  5768  08E2  1303               	bcf	3,6	;RP1=0, select bank0
  5769  08E3  01CF               	clrf	___awdiv@sign
  5770  08E4  1FCA               	btfss	___awdiv@divisor+1,7
  5771  08E5  28ED               	goto	l4121
  5772  08E6  09C9               	comf	___awdiv@divisor,f
  5773  08E7  09CA               	comf	___awdiv@divisor+1,f
  5774  08E8  0AC9               	incf	___awdiv@divisor,f
  5775  08E9  1903               	skipnz
  5776  08EA  0ACA               	incf	___awdiv@divisor+1,f
  5777  08EB  01CF               	clrf	___awdiv@sign
  5778  08EC  0ACF               	incf	___awdiv@sign,f
  5779  08ED                     l4121:	
  5780  08ED  1FCC               	btfss	___awdiv@dividend+1,7
  5781  08EE  28F8               	goto	l4127
  5782  08EF  09CB               	comf	___awdiv@dividend,f
  5783  08F0  09CC               	comf	___awdiv@dividend+1,f
  5784  08F1  0ACB               	incf	___awdiv@dividend,f
  5785  08F2  1903               	skipnz
  5786  08F3  0ACC               	incf	___awdiv@dividend+1,f
  5787  08F4  3001               	movlw	1
  5788  08F5  00CD               	movwf	??___awdiv
  5789  08F6  084D               	movf	??___awdiv,w
  5790  08F7  06CF               	xorwf	___awdiv@sign,f
  5791  08F8                     l4127:	
  5792  08F8  01D0               	clrf	___awdiv@quotient
  5793  08F9  01D1               	clrf	___awdiv@quotient+1
  5794  08FA  0849               	movf	___awdiv@divisor,w
  5795  08FB  044A               	iorwf	___awdiv@divisor+1,w
  5796  08FC  1903               	btfsc	3,2
  5797  08FD  292F               	goto	l4149
  5798  08FE  01CE               	clrf	___awdiv@counter
  5799  08FF  0ACE               	incf	___awdiv@counter,f
  5800  0900                     l4137:	
  5801  0900  1BCA               	btfsc	___awdiv@divisor+1,7
  5802  0901  290E               	goto	l4139
  5803  0902  3001               	movlw	1
  5804  0903                     u3095:	
  5805  0903  1003               	clrc
  5806  0904  0DC9               	rlf	___awdiv@divisor,f
  5807  0905  0DCA               	rlf	___awdiv@divisor+1,f
  5808  0906  3EFF               	addlw	-1
  5809  0907  1D03               	skipz
  5810  0908  2903               	goto	u3095
  5811  0909  3001               	movlw	1
  5812  090A  00CD               	movwf	??___awdiv
  5813  090B  084D               	movf	??___awdiv,w
  5814  090C  07CE               	addwf	___awdiv@counter,f
  5815  090D  2900               	goto	l4137
  5816  090E                     l4139:	
  5817  090E  3001               	movlw	1
  5818  090F                     u3115:	
  5819  090F  1003               	clrc
  5820  0910  0DD0               	rlf	___awdiv@quotient,f
  5821  0911  0DD1               	rlf	___awdiv@quotient+1,f
  5822  0912  3EFF               	addlw	-1
  5823  0913  1D03               	skipz
  5824  0914  290F               	goto	u3115
  5825  0915  084A               	movf	___awdiv@divisor+1,w
  5826  0916  024C               	subwf	___awdiv@dividend+1,w
  5827  0917  1D03               	skipz
  5828  0918  291B               	goto	u3125
  5829  0919  0849               	movf	___awdiv@divisor,w
  5830  091A  024B               	subwf	___awdiv@dividend,w
  5831  091B                     u3125:	
  5832  091B  1C03               	skipc
  5833  091C  2924               	goto	l4145
  5834  091D  0849               	movf	___awdiv@divisor,w
  5835  091E  02CB               	subwf	___awdiv@dividend,f
  5836  091F  084A               	movf	___awdiv@divisor+1,w
  5837  0920  1C03               	skipc
  5838  0921  03CC               	decf	___awdiv@dividend+1,f
  5839  0922  02CC               	subwf	___awdiv@dividend+1,f
  5840  0923  1450               	bsf	___awdiv@quotient,0
  5841  0924                     l4145:	
  5842  0924  3001               	movlw	1
  5843  0925                     u3135:	
  5844  0925  1003               	clrc
  5845  0926  0CCA               	rrf	___awdiv@divisor+1,f
  5846  0927  0CC9               	rrf	___awdiv@divisor,f
  5847  0928  3EFF               	addlw	-1
  5848  0929  1D03               	skipz
  5849  092A  2925               	goto	u3135
  5850  092B  3001               	movlw	1
  5851  092C  02CE               	subwf	___awdiv@counter,f
  5852  092D  1D03               	btfss	3,2
  5853  092E  290E               	goto	l4139
  5854  092F                     l4149:	
  5855  092F  084F               	movf	___awdiv@sign,w
  5856  0930  1903               	btfsc	3,2
  5857  0931  2937               	goto	l4153
  5858  0932  09D0               	comf	___awdiv@quotient,f
  5859  0933  09D1               	comf	___awdiv@quotient+1,f
  5860  0934  0AD0               	incf	___awdiv@quotient,f
  5861  0935  1903               	skipnz
  5862  0936  0AD1               	incf	___awdiv@quotient+1,f
  5863  0937                     l4153:	
  5864  0937  0851               	movf	___awdiv@quotient+1,w
  5865  0938  00CA               	movwf	?___awdiv+1
  5866  0939  0850               	movf	___awdiv@quotient,w
  5867  093A  00C9               	movwf	?___awdiv
  5868  093B  0008               	return
  5869  093C                     __end_of___awdiv:	
  5870                           
  5871                           	psect	text17
  5872  0D30                     __ptext17:	
  5873 ;; *************** function _textLoading *****************
  5874 ;; Defined at:
  5875 ;;		line 156 in file "auxiliar.c"
  5876 ;; Parameters:    Size  Location     Type
  5877 ;;		None
  5878 ;; Auto vars:     Size  Location     Type
  5879 ;;		None
  5880 ;; Return value:  Size  Location     Type
  5881 ;;                  1    wreg      void 
  5882 ;; Registers used:
  5883 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5884 ;; Tracked objects:
  5885 ;;		On entry : 0/0
  5886 ;;		On exit  : 0/0
  5887 ;;		Unchanged: 0/0
  5888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5889 ;;      Params:         0       0       0       0       0
  5890 ;;      Locals:         0       0       0       0       0
  5891 ;;      Temps:          0       3       0       0       0
  5892 ;;      Totals:         0       3       0       0       0
  5893 ;;Total ram usage:        3 bytes
  5894 ;; Hardware stack levels used:    1
  5895 ;; Hardware stack levels required when called:    5
  5896 ;; This function calls:
  5897 ;;		_writeLCD
  5898 ;; This function is called by:
  5899 ;;		_main
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           
  5904                           ;psect for function _textLoading
  5905  0D30                     _textLoading:	
  5906                           
  5907                           ;auxiliar.c: 158: writeLCD(9,0,".  ");
  5908                           
  5909                           ;incstack = 0
  5910                           ; Regs used in _textLoading: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5911  0D30  1283               	bcf	3,5	;RP0=0, select bank0
  5912  0D31  1303               	bcf	3,6	;RP1=0, select bank0
  5913  0D32  01CF               	clrf	writeLCD@y
  5914  0D33  30B5               	movlw	low (STR_57| (0+32768))
  5915  0D34  00D0               	movwf	writeLCD@ptr
  5916  0D35  3088               	movlw	high (STR_57| (0+32768))
  5917  0D36  00D1               	movwf	writeLCD@ptr+1
  5918  0D37  3009               	movlw	9
  5919  0D38  160A  118A  2426  120A  158A  	fcall	_writeLCD
  5920                           
  5921                           ;auxiliar.c: 159: _delay((unsigned long)((500)*(20000000/4000.0)));
  5922  0D3D  300D               	movlw	13
  5923  0D3E  1283               	bcf	3,5	;RP0=0, select bank0
  5924  0D3F  1303               	bcf	3,6	;RP1=0, select bank0
  5925  0D40  00D6               	movwf	??_textLoading+2
  5926  0D41  30AF               	movlw	175
  5927  0D42  00D5               	movwf	??_textLoading+1
  5928  0D43  30B5               	movlw	181
  5929  0D44  00D4               	movwf	??_textLoading
  5930  0D45                     u3927:	
  5931  0D45  0BD4               	decfsz	??_textLoading,f
  5932  0D46  2D45               	goto	u3927
  5933  0D47  0BD5               	decfsz	??_textLoading+1,f
  5934  0D48  2D45               	goto	u3927
  5935  0D49  0BD6               	decfsz	??_textLoading+2,f
  5936  0D4A  2D45               	goto	u3927
  5937  0D4B  2D4C               	nop2
  5938                           
  5939                           ;auxiliar.c: 160: writeLCD(9,0," . ");
  5940  0D4C  1283               	bcf	3,5	;RP0=0, select bank0
  5941  0D4D  1303               	bcf	3,6	;RP1=0, select bank0
  5942  0D4E  01CF               	clrf	writeLCD@y
  5943  0D4F  30B9               	movlw	low (STR_58| (0+32768))
  5944  0D50  00D0               	movwf	writeLCD@ptr
  5945  0D51  3088               	movlw	high (STR_58| (0+32768))
  5946  0D52  00D1               	movwf	writeLCD@ptr+1
  5947  0D53  3009               	movlw	9
  5948  0D54  160A  118A  2426  120A  158A  	fcall	_writeLCD
  5949                           
  5950                           ;auxiliar.c: 161: _delay((unsigned long)((500)*(20000000/4000.0)));
  5951  0D59  300D               	movlw	13
  5952  0D5A  1283               	bcf	3,5	;RP0=0, select bank0
  5953  0D5B  1303               	bcf	3,6	;RP1=0, select bank0
  5954  0D5C  00D6               	movwf	??_textLoading+2
  5955  0D5D  30AF               	movlw	175
  5956  0D5E  00D5               	movwf	??_textLoading+1
  5957  0D5F  30B5               	movlw	181
  5958  0D60  00D4               	movwf	??_textLoading
  5959  0D61                     u3937:	
  5960  0D61  0BD4               	decfsz	??_textLoading,f
  5961  0D62  2D61               	goto	u3937
  5962  0D63  0BD5               	decfsz	??_textLoading+1,f
  5963  0D64  2D61               	goto	u3937
  5964  0D65  0BD6               	decfsz	??_textLoading+2,f
  5965  0D66  2D61               	goto	u3937
  5966  0D67  2D68               	nop2
  5967                           
  5968                           ;auxiliar.c: 162: writeLCD(9,0,"  .");
  5969  0D68  1283               	bcf	3,5	;RP0=0, select bank0
  5970  0D69  1303               	bcf	3,6	;RP1=0, select bank0
  5971  0D6A  01CF               	clrf	writeLCD@y
  5972  0D6B  30C1               	movlw	low (STR_59| (0+32768))
  5973  0D6C  00D0               	movwf	writeLCD@ptr
  5974  0D6D  3088               	movlw	high (STR_59| (0+32768))
  5975  0D6E  00D1               	movwf	writeLCD@ptr+1
  5976  0D6F  3009               	movlw	9
  5977  0D70  160A  118A  2426  120A  158A  	fcall	_writeLCD
  5978                           
  5979                           ;auxiliar.c: 163: _delay((unsigned long)((500)*(20000000/4000.0)));
  5980  0D75  300D               	movlw	13
  5981  0D76  1283               	bcf	3,5	;RP0=0, select bank0
  5982  0D77  1303               	bcf	3,6	;RP1=0, select bank0
  5983  0D78  00D6               	movwf	??_textLoading+2
  5984  0D79  30AF               	movlw	175
  5985  0D7A  00D5               	movwf	??_textLoading+1
  5986  0D7B  30B5               	movlw	181
  5987  0D7C  00D4               	movwf	??_textLoading
  5988  0D7D                     u3947:	
  5989  0D7D  0BD4               	decfsz	??_textLoading,f
  5990  0D7E  2D7D               	goto	u3947
  5991  0D7F  0BD5               	decfsz	??_textLoading+1,f
  5992  0D80  2D7D               	goto	u3947
  5993  0D81  0BD6               	decfsz	??_textLoading+2,f
  5994  0D82  2D7D               	goto	u3947
  5995  0D83  2D84               	nop2
  5996                           
  5997                           ;auxiliar.c: 164: writeLCD(9,0,".  ");
  5998  0D84  1283               	bcf	3,5	;RP0=0, select bank0
  5999  0D85  1303               	bcf	3,6	;RP1=0, select bank0
  6000  0D86  01CF               	clrf	writeLCD@y
  6001  0D87  30B5               	movlw	low (STR_57| (0+32768))
  6002  0D88  00D0               	movwf	writeLCD@ptr
  6003  0D89  3088               	movlw	high (STR_57| (0+32768))
  6004  0D8A  00D1               	movwf	writeLCD@ptr+1
  6005  0D8B  3009               	movlw	9
  6006  0D8C  160A  118A  2426  120A  158A  	fcall	_writeLCD
  6007                           
  6008                           ;auxiliar.c: 165: _delay((unsigned long)((500)*(20000000/4000.0)));
  6009  0D91  300D               	movlw	13
  6010  0D92  1283               	bcf	3,5	;RP0=0, select bank0
  6011  0D93  1303               	bcf	3,6	;RP1=0, select bank0
  6012  0D94  00D6               	movwf	??_textLoading+2
  6013  0D95  30AF               	movlw	175
  6014  0D96  00D5               	movwf	??_textLoading+1
  6015  0D97  30B5               	movlw	181
  6016  0D98  00D4               	movwf	??_textLoading
  6017  0D99                     u3957:	
  6018  0D99  0BD4               	decfsz	??_textLoading,f
  6019  0D9A  2D99               	goto	u3957
  6020  0D9B  0BD5               	decfsz	??_textLoading+1,f
  6021  0D9C  2D99               	goto	u3957
  6022  0D9D  0BD6               	decfsz	??_textLoading+2,f
  6023  0D9E  2D99               	goto	u3957
  6024  0D9F  2DA0               	nop2
  6025                           
  6026                           ;auxiliar.c: 166: writeLCD(9,0," . ");
  6027  0DA0  1283               	bcf	3,5	;RP0=0, select bank0
  6028  0DA1  1303               	bcf	3,6	;RP1=0, select bank0
  6029  0DA2  01CF               	clrf	writeLCD@y
  6030  0DA3  30B9               	movlw	low (STR_58| (0+32768))
  6031  0DA4  00D0               	movwf	writeLCD@ptr
  6032  0DA5  3088               	movlw	high (STR_58| (0+32768))
  6033  0DA6  00D1               	movwf	writeLCD@ptr+1
  6034  0DA7  3009               	movlw	9
  6035  0DA8  160A  118A  2426  120A  158A  	fcall	_writeLCD
  6036                           
  6037                           ;auxiliar.c: 167: _delay((unsigned long)((500)*(20000000/4000.0)));
  6038  0DAD  300D               	movlw	13
  6039  0DAE  1283               	bcf	3,5	;RP0=0, select bank0
  6040  0DAF  1303               	bcf	3,6	;RP1=0, select bank0
  6041  0DB0  00D6               	movwf	??_textLoading+2
  6042  0DB1  30AF               	movlw	175
  6043  0DB2  00D5               	movwf	??_textLoading+1
  6044  0DB3  30B5               	movlw	181
  6045  0DB4  00D4               	movwf	??_textLoading
  6046  0DB5                     u3967:	
  6047  0DB5  0BD4               	decfsz	??_textLoading,f
  6048  0DB6  2DB5               	goto	u3967
  6049  0DB7  0BD5               	decfsz	??_textLoading+1,f
  6050  0DB8  2DB5               	goto	u3967
  6051  0DB9  0BD6               	decfsz	??_textLoading+2,f
  6052  0DBA  2DB5               	goto	u3967
  6053  0DBB  2DBC               	nop2
  6054                           
  6055                           ;auxiliar.c: 168: writeLCD(9,0,"  .");
  6056  0DBC  1283               	bcf	3,5	;RP0=0, select bank0
  6057  0DBD  1303               	bcf	3,6	;RP1=0, select bank0
  6058  0DBE  01CF               	clrf	writeLCD@y
  6059  0DBF  30C1               	movlw	low (STR_59| (0+32768))
  6060  0DC0  00D0               	movwf	writeLCD@ptr
  6061  0DC1  3088               	movlw	high (STR_59| (0+32768))
  6062  0DC2  00D1               	movwf	writeLCD@ptr+1
  6063  0DC3  3009               	movlw	9
  6064  0DC4  160A  118A  2426  120A  158A  	fcall	_writeLCD
  6065                           
  6066                           ;auxiliar.c: 169: _delay((unsigned long)((500)*(20000000/4000.0)));
  6067  0DC9  300D               	movlw	13
  6068  0DCA  1283               	bcf	3,5	;RP0=0, select bank0
  6069  0DCB  1303               	bcf	3,6	;RP1=0, select bank0
  6070  0DCC  00D6               	movwf	??_textLoading+2
  6071  0DCD  30AF               	movlw	175
  6072  0DCE  00D5               	movwf	??_textLoading+1
  6073  0DCF  30B5               	movlw	181
  6074  0DD0  00D4               	movwf	??_textLoading
  6075  0DD1                     u3977:	
  6076  0DD1  0BD4               	decfsz	??_textLoading,f
  6077  0DD2  2DD1               	goto	u3977
  6078  0DD3  0BD5               	decfsz	??_textLoading+1,f
  6079  0DD4  2DD1               	goto	u3977
  6080  0DD5  0BD6               	decfsz	??_textLoading+2,f
  6081  0DD6  2DD1               	goto	u3977
  6082  0DD7  2DD8               	nop2
  6083                           
  6084                           ;auxiliar.c: 171: writeLCD(9,0,".  ");
  6085  0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  6086  0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  6087  0DDA  01CF               	clrf	writeLCD@y
  6088  0DDB  30B5               	movlw	low (STR_57| (0+32768))
  6089  0DDC  00D0               	movwf	writeLCD@ptr
  6090  0DDD  3088               	movlw	high (STR_57| (0+32768))
  6091  0DDE  00D1               	movwf	writeLCD@ptr+1
  6092  0DDF  3009               	movlw	9
  6093  0DE0  160A  118A  2426  120A  158A  	fcall	_writeLCD
  6094                           
  6095                           ;auxiliar.c: 172: _delay((unsigned long)((500)*(20000000/4000.0)));
  6096  0DE5  300D               	movlw	13
  6097  0DE6  1283               	bcf	3,5	;RP0=0, select bank0
  6098  0DE7  1303               	bcf	3,6	;RP1=0, select bank0
  6099  0DE8  00D6               	movwf	??_textLoading+2
  6100  0DE9  30AF               	movlw	175
  6101  0DEA  00D5               	movwf	??_textLoading+1
  6102  0DEB  30B5               	movlw	181
  6103  0DEC  00D4               	movwf	??_textLoading
  6104  0DED                     u3987:	
  6105  0DED  0BD4               	decfsz	??_textLoading,f
  6106  0DEE  2DED               	goto	u3987
  6107  0DEF  0BD5               	decfsz	??_textLoading+1,f
  6108  0DF0  2DED               	goto	u3987
  6109  0DF1  0BD6               	decfsz	??_textLoading+2,f
  6110  0DF2  2DED               	goto	u3987
  6111  0DF3  2DF4               	nop2
  6112                           
  6113                           ;auxiliar.c: 173: writeLCD(9,0,".. ");
  6114  0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  6115  0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  6116  0DF6  01CF               	clrf	writeLCD@y
  6117  0DF7  30BD               	movlw	low (STR_64| (0+32768))
  6118  0DF8  00D0               	movwf	writeLCD@ptr
  6119  0DF9  3088               	movlw	high (STR_64| (0+32768))
  6120  0DFA  00D1               	movwf	writeLCD@ptr+1
  6121  0DFB  3009               	movlw	9
  6122  0DFC  160A  118A  2426  120A  158A  	fcall	_writeLCD
  6123                           
  6124                           ;auxiliar.c: 174: _delay((unsigned long)((500)*(20000000/4000.0)));
  6125  0E01  300D               	movlw	13
  6126  0E02  1283               	bcf	3,5	;RP0=0, select bank0
  6127  0E03  1303               	bcf	3,6	;RP1=0, select bank0
  6128  0E04  00D6               	movwf	??_textLoading+2
  6129  0E05  30AF               	movlw	175
  6130  0E06  00D5               	movwf	??_textLoading+1
  6131  0E07  30B5               	movlw	181
  6132  0E08  00D4               	movwf	??_textLoading
  6133  0E09                     u3997:	
  6134  0E09  0BD4               	decfsz	??_textLoading,f
  6135  0E0A  2E09               	goto	u3997
  6136  0E0B  0BD5               	decfsz	??_textLoading+1,f
  6137  0E0C  2E09               	goto	u3997
  6138  0E0D  0BD6               	decfsz	??_textLoading+2,f
  6139  0E0E  2E09               	goto	u3997
  6140  0E0F  2E10               	nop2
  6141                           
  6142                           ;auxiliar.c: 175: writeLCD(9,0,"...");
  6143  0E10  1283               	bcf	3,5	;RP0=0, select bank0
  6144  0E11  1303               	bcf	3,6	;RP1=0, select bank0
  6145  0E12  01CF               	clrf	writeLCD@y
  6146  0E13  30C5               	movlw	low (STR_65| (0+32768))
  6147  0E14  00D0               	movwf	writeLCD@ptr
  6148  0E15  3088               	movlw	high (STR_65| (0+32768))
  6149  0E16  00D1               	movwf	writeLCD@ptr+1
  6150  0E17  3009               	movlw	9
  6151  0E18  160A  118A  2426  120A  158A  	fcall	_writeLCD
  6152                           
  6153                           ;auxiliar.c: 176: _delay((unsigned long)((700)*(20000000/4000.0)));
  6154  0E1D  3012               	movlw	18
  6155  0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  6156  0E1F  1303               	bcf	3,6	;RP1=0, select bank0
  6157  0E20  00D6               	movwf	??_textLoading+2
  6158  0E21  30C2               	movlw	194
  6159  0E22  00D5               	movwf	??_textLoading+1
  6160  0E23  3065               	movlw	101
  6161  0E24  00D4               	movwf	??_textLoading
  6162  0E25                     u4007:	
  6163  0E25  0BD4               	decfsz	??_textLoading,f
  6164  0E26  2E25               	goto	u4007
  6165  0E27  0BD5               	decfsz	??_textLoading+1,f
  6166  0E28  2E25               	goto	u4007
  6167  0E29  0BD6               	decfsz	??_textLoading+2,f
  6168  0E2A  2E25               	goto	u4007
  6169  0E2B  2E2C               	nop2
  6170  0E2C  0008               	return
  6171  0E2D                     __end_of_textLoading:	
  6172                           
  6173                           	psect	text18
  6174  130A                     __ptext18:	
  6175 ;; *************** function _textConfig *****************
  6176 ;; Defined at:
  6177 ;;		line 18 in file "auxiliar.c"
  6178 ;; Parameters:    Size  Location     Type
  6179 ;;		None
  6180 ;; Auto vars:     Size  Location     Type
  6181 ;;		None
  6182 ;; Return value:  Size  Location     Type
  6183 ;;                  1    wreg      void 
  6184 ;; Registers used:
  6185 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6186 ;; Tracked objects:
  6187 ;;		On entry : 0/0
  6188 ;;		On exit  : 0/0
  6189 ;;		Unchanged: 0/0
  6190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6191 ;;      Params:         0       0       0       0       0
  6192 ;;      Locals:         0       0       0       0       0
  6193 ;;      Temps:          0       0       0       0       0
  6194 ;;      Totals:         0       0       0       0       0
  6195 ;;Total ram usage:        0 bytes
  6196 ;; Hardware stack levels used:    1
  6197 ;; Hardware stack levels required when called:    5
  6198 ;; This function calls:
  6199 ;;		_cmdLCD
  6200 ;;		_writeLCD
  6201 ;; This function is called by:
  6202 ;;		_main
  6203 ;; This function uses a non-reentrant model
  6204 ;;
  6205                           
  6206                           
  6207                           ;psect for function _textConfig
  6208  130A                     _textConfig:	
  6209                           
  6210                           ;auxiliar.c: 20: cmdLCD(0x01);
  6211                           
  6212                           ;incstack = 0
  6213                           ; Regs used in _textConfig: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6214  130A  3001               	movlw	1
  6215  130B  160A  118A  25C2  160A  118A  	fcall	_cmdLCD
  6216                           
  6217                           ;auxiliar.c: 21: writeLCD(0,0,"   Configurar   ");
  6218  1310  1283               	bcf	3,5	;RP0=0, select bank0
  6219  1311  1303               	bcf	3,6	;RP1=0, select bank0
  6220  1312  01CF               	clrf	writeLCD@y
  6221  1313  3099               	movlw	low (STR_7| (0+32768))
  6222  1314  00D0               	movwf	writeLCD@ptr
  6223  1315  3087               	movlw	high (STR_7| (0+32768))
  6224  1316  00D1               	movwf	writeLCD@ptr+1
  6225  1317  3000               	movlw	0
  6226  1318  160A  118A  2426  160A  118A  	fcall	_writeLCD
  6227                           
  6228                           ;auxiliar.c: 22: writeLCD(0,1,"   ----------   ");
  6229  131D  1283               	bcf	3,5	;RP0=0, select bank0
  6230  131E  1303               	bcf	3,6	;RP1=0, select bank0
  6231  131F  01CF               	clrf	writeLCD@y
  6232  1320  0ACF               	incf	writeLCD@y,f
  6233  1321  3055               	movlw	low (STR_8| (0+32768))
  6234  1322  00D0               	movwf	writeLCD@ptr
  6235  1323  3087               	movlw	high (STR_8| (0+32768))
  6236  1324  00D1               	movwf	writeLCD@ptr+1
  6237  1325  3000               	movlw	0
  6238  1326  160A  118A  2426   	fcall	_writeLCD
  6239  1329  0008               	return
  6240  132A                     __end_of_textConfig:	
  6241                           
  6242                           	psect	text19
  6243  12EA                     __ptext19:	
  6244 ;; *************** function _textCMpar *****************
  6245 ;; Defined at:
  6246 ;;		line 25 in file "auxiliar.c"
  6247 ;; Parameters:    Size  Location     Type
  6248 ;;		None
  6249 ;; Auto vars:     Size  Location     Type
  6250 ;;		None
  6251 ;; Return value:  Size  Location     Type
  6252 ;;                  1    wreg      void 
  6253 ;; Registers used:
  6254 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6255 ;; Tracked objects:
  6256 ;;		On entry : 0/0
  6257 ;;		On exit  : 0/0
  6258 ;;		Unchanged: 0/0
  6259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6260 ;;      Params:         0       0       0       0       0
  6261 ;;      Locals:         0       0       0       0       0
  6262 ;;      Temps:          0       0       0       0       0
  6263 ;;      Totals:         0       0       0       0       0
  6264 ;;Total ram usage:        0 bytes
  6265 ;; Hardware stack levels used:    1
  6266 ;; Hardware stack levels required when called:    5
  6267 ;; This function calls:
  6268 ;;		_cmdLCD
  6269 ;;		_writeLCD
  6270 ;; This function is called by:
  6271 ;;		_main
  6272 ;; This function uses a non-reentrant model
  6273 ;;
  6274                           
  6275                           
  6276                           ;psect for function _textCMpar
  6277  12EA                     _textCMpar:	
  6278                           
  6279                           ;auxiliar.c: 27: cmdLCD(0x01);
  6280                           
  6281                           ;incstack = 0
  6282                           ; Regs used in _textCMpar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6283  12EA  3001               	movlw	1
  6284  12EB  160A  118A  25C2  160A  118A  	fcall	_cmdLCD
  6285                           
  6286                           ;auxiliar.c: 28: writeLCD(0,0,"   Pareamento   ");
  6287  12F0  1283               	bcf	3,5	;RP0=0, select bank0
  6288  12F1  1303               	bcf	3,6	;RP1=0, select bank0
  6289  12F2  01CF               	clrf	writeLCD@y
  6290  12F3  3088               	movlw	low (STR_9| (0+32768))
  6291  12F4  00D0               	movwf	writeLCD@ptr
  6292  12F5  3087               	movlw	high (STR_9| (0+32768))
  6293  12F6  00D1               	movwf	writeLCD@ptr+1
  6294  12F7  3000               	movlw	0
  6295  12F8  160A  118A  2426  160A  118A  	fcall	_writeLCD
  6296                           
  6297                           ;auxiliar.c: 29: writeLCD(0,1,"   ----------   ");
  6298  12FD  1283               	bcf	3,5	;RP0=0, select bank0
  6299  12FE  1303               	bcf	3,6	;RP1=0, select bank0
  6300  12FF  01CF               	clrf	writeLCD@y
  6301  1300  0ACF               	incf	writeLCD@y,f
  6302  1301  3055               	movlw	low (STR_8| (0+32768))
  6303  1302  00D0               	movwf	writeLCD@ptr
  6304  1303  3087               	movlw	high (STR_8| (0+32768))
  6305  1304  00D1               	movwf	writeLCD@ptr+1
  6306  1305  3000               	movlw	0
  6307  1306  160A  118A  2426   	fcall	_writeLCD
  6308  1309  0008               	return
  6309  130A                     __end_of_textCMpar:	
  6310                           
  6311                           	psect	text20
  6312  12CA                     __ptext20:	
  6313 ;; *************** function _textCMdat *****************
  6314 ;; Defined at:
  6315 ;;		line 32 in file "auxiliar.c"
  6316 ;; Parameters:    Size  Location     Type
  6317 ;;		None
  6318 ;; Auto vars:     Size  Location     Type
  6319 ;;		None
  6320 ;; Return value:  Size  Location     Type
  6321 ;;                  1    wreg      void 
  6322 ;; Registers used:
  6323 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6324 ;; Tracked objects:
  6325 ;;		On entry : 0/0
  6326 ;;		On exit  : 0/0
  6327 ;;		Unchanged: 0/0
  6328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6329 ;;      Params:         0       0       0       0       0
  6330 ;;      Locals:         0       0       0       0       0
  6331 ;;      Temps:          0       0       0       0       0
  6332 ;;      Totals:         0       0       0       0       0
  6333 ;;Total ram usage:        0 bytes
  6334 ;; Hardware stack levels used:    1
  6335 ;; Hardware stack levels required when called:    5
  6336 ;; This function calls:
  6337 ;;		_cmdLCD
  6338 ;;		_writeLCD
  6339 ;; This function is called by:
  6340 ;;		_main
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344                           
  6345                           ;psect for function _textCMdat
  6346  12CA                     _textCMdat:	
  6347                           
  6348                           ;auxiliar.c: 34: cmdLCD(0x01);
  6349                           
  6350                           ;incstack = 0
  6351                           ; Regs used in _textCMdat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6352  12CA  3001               	movlw	1
  6353  12CB  160A  118A  25C2  160A  118A  	fcall	_cmdLCD
  6354                           
  6355                           ;auxiliar.c: 35: writeLCD(0,0," Envio de Dados ");
  6356  12D0  1283               	bcf	3,5	;RP0=0, select bank0
  6357  12D1  1303               	bcf	3,6	;RP1=0, select bank0
  6358  12D2  01CF               	clrf	writeLCD@y
  6359  12D3  30BB               	movlw	low (STR_11| (0+32768))
  6360  12D4  00D0               	movwf	writeLCD@ptr
  6361  12D5  3087               	movlw	high (STR_11| (0+32768))
  6362  12D6  00D1               	movwf	writeLCD@ptr+1
  6363  12D7  3000               	movlw	0
  6364  12D8  160A  118A  2426  160A  118A  	fcall	_writeLCD
  6365                           
  6366                           ;auxiliar.c: 36: writeLCD(0,1,"   ----------   ");
  6367  12DD  1283               	bcf	3,5	;RP0=0, select bank0
  6368  12DE  1303               	bcf	3,6	;RP1=0, select bank0
  6369  12DF  01CF               	clrf	writeLCD@y
  6370  12E0  0ACF               	incf	writeLCD@y,f
  6371  12E1  3055               	movlw	low (STR_8| (0+32768))
  6372  12E2  00D0               	movwf	writeLCD@ptr
  6373  12E3  3087               	movlw	high (STR_8| (0+32768))
  6374  12E4  00D1               	movwf	writeLCD@ptr+1
  6375  12E5  3000               	movlw	0
  6376  12E6  160A  118A  2426   	fcall	_writeLCD
  6377  12E9  0008               	return
  6378  12EA                     __end_of_textCMdat:	
  6379                           
  6380                           	psect	text21
  6381  0C76                     __ptext21:	
  6382 ;; *************** function _slave1 *****************
  6383 ;; Defined at:
  6384 ;;		line 22 in file "bluetooth.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;		None
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;		None
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  1    wreg      void 
  6391 ;; Registers used:
  6392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6398 ;;      Params:         0       0       0       0       0
  6399 ;;      Locals:         0       0       0       0       0
  6400 ;;      Temps:          0       3       0       0       0
  6401 ;;      Totals:         0       3       0       0       0
  6402 ;;Total ram usage:        3 bytes
  6403 ;; Hardware stack levels used:    1
  6404 ;; Hardware stack levels required when called:    4
  6405 ;; This function calls:
  6406 ;;		_initEUSART
  6407 ;;		_writeString
  6408 ;; This function is called by:
  6409 ;;		_main
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413                           
  6414                           ;psect for function _slave1
  6415  0C76                     _slave1:	
  6416                           
  6417                           ;bluetooth.c: 24: initEUSART(9600);
  6418                           
  6419                           ;incstack = 0
  6420                           ; Regs used in _slave1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6421  0C76  3000               	movlw	0
  6422  0C77  1283               	bcf	3,5	;RP0=0, select bank0
  6423  0C78  1303               	bcf	3,6	;RP1=0, select bank0
  6424  0C79  00D8               	movwf	initEUSART@baudRate+3
  6425  0C7A  3000               	movlw	0
  6426  0C7B  00D7               	movwf	initEUSART@baudRate+2
  6427  0C7C  3025               	movlw	37
  6428  0C7D  00D6               	movwf	initEUSART@baudRate+1
  6429  0C7E  3080               	movlw	128
  6430  0C7F  00D5               	movwf	initEUSART@baudRate
  6431  0C80  160A  118A  261C  120A  158A  	fcall	_initEUSART
  6432                           
  6433                           ;bluetooth.c: 25: writeString("AT+UART=9600,0,0\r\n");
  6434  0C85  30FE               	movlw	low (STR_83| (0+32768))
  6435  0C86  1283               	bcf	3,5	;RP0=0, select bank0
  6436  0C87  1303               	bcf	3,6	;RP1=0, select bank0
  6437  0C88  00C8               	movwf	writeString@str
  6438  0C89  3085               	movlw	high (STR_83| (0+32768))
  6439  0C8A  00C9               	movwf	writeString@str+1
  6440  0C8B  160A  118A  234E  120A  158A  	fcall	_writeString
  6441                           
  6442                           ;bluetooth.c: 26: writeString("AT+RMAAD\r\n");
  6443  0C90  307F               	movlw	low (STR_91| (0+32768))
  6444  0C91  1283               	bcf	3,5	;RP0=0, select bank0
  6445  0C92  1303               	bcf	3,6	;RP1=0, select bank0
  6446  0C93  00C8               	movwf	writeString@str
  6447  0C94  3088               	movlw	high (STR_91| (0+32768))
  6448  0C95  00C9               	movwf	writeString@str+1
  6449  0C96  160A  118A  234E  120A  158A  	fcall	_writeString
  6450                           
  6451                           ;bluetooth.c: 27: _delay((unsigned long)((100)*(20000000/4000.0)));
  6452  0C9B  3003               	movlw	3
  6453  0C9C  1283               	bcf	3,5	;RP0=0, select bank0
  6454  0C9D  1303               	bcf	3,6	;RP1=0, select bank0
  6455  0C9E  00E1               	movwf	??_slave1+2
  6456  0C9F  308A               	movlw	138
  6457  0CA0  00E0               	movwf	??_slave1+1
  6458  0CA1  3055               	movlw	85
  6459  0CA2  00DF               	movwf	??_slave1
  6460  0CA3                     u4017:	
  6461  0CA3  0BDF               	decfsz	??_slave1,f
  6462  0CA4  2CA3               	goto	u4017
  6463  0CA5  0BE0               	decfsz	??_slave1+1,f
  6464  0CA6  2CA3               	goto	u4017
  6465  0CA7  0BE1               	decfsz	??_slave1+2,f
  6466  0CA8  2CA3               	goto	u4017
  6467                           
  6468                           ;bluetooth.c: 28: writeString("AT+ROLE=0\r\n");
  6469  0CA9  305C               	movlw	low (STR_92| (0+32768))
  6470  0CAA  1283               	bcf	3,5	;RP0=0, select bank0
  6471  0CAB  1303               	bcf	3,6	;RP1=0, select bank0
  6472  0CAC  00C8               	movwf	writeString@str
  6473  0CAD  3088               	movlw	high (STR_92| (0+32768))
  6474  0CAE  00C9               	movwf	writeString@str+1
  6475  0CAF  160A  118A  234E  120A  158A  	fcall	_writeString
  6476                           
  6477                           ;bluetooth.c: 29: _delay((unsigned long)((100)*(20000000/4000.0)));
  6478  0CB4  3003               	movlw	3
  6479  0CB5  1283               	bcf	3,5	;RP0=0, select bank0
  6480  0CB6  1303               	bcf	3,6	;RP1=0, select bank0
  6481  0CB7  00E1               	movwf	??_slave1+2
  6482  0CB8  308A               	movlw	138
  6483  0CB9  00E0               	movwf	??_slave1+1
  6484  0CBA  3055               	movlw	85
  6485  0CBB  00DF               	movwf	??_slave1
  6486  0CBC                     u4027:	
  6487  0CBC  0BDF               	decfsz	??_slave1,f
  6488  0CBD  2CBC               	goto	u4027
  6489  0CBE  0BE0               	decfsz	??_slave1+1,f
  6490  0CBF  2CBC               	goto	u4027
  6491  0CC0  0BE1               	decfsz	??_slave1+2,f
  6492  0CC1  2CBC               	goto	u4027
  6493                           
  6494                           ;bluetooth.c: 30: writeString("AT+CMODE=1\r\n");
  6495  0CC2  304F               	movlw	low (STR_85| (0+32768))
  6496  0CC3  1283               	bcf	3,5	;RP0=0, select bank0
  6497  0CC4  1303               	bcf	3,6	;RP1=0, select bank0
  6498  0CC5  00C8               	movwf	writeString@str
  6499  0CC6  3088               	movlw	high (STR_85| (0+32768))
  6500  0CC7  00C9               	movwf	writeString@str+1
  6501  0CC8  160A  118A  234E  120A  158A  	fcall	_writeString
  6502                           
  6503                           ;bluetooth.c: 31: _delay((unsigned long)((100)*(20000000/4000.0)));
  6504  0CCD  3003               	movlw	3
  6505  0CCE  1283               	bcf	3,5	;RP0=0, select bank0
  6506  0CCF  1303               	bcf	3,6	;RP1=0, select bank0
  6507  0CD0  00E1               	movwf	??_slave1+2
  6508  0CD1  308A               	movlw	138
  6509  0CD2  00E0               	movwf	??_slave1+1
  6510  0CD3  3055               	movlw	85
  6511  0CD4  00DF               	movwf	??_slave1
  6512  0CD5                     u4037:	
  6513  0CD5  0BDF               	decfsz	??_slave1,f
  6514  0CD6  2CD5               	goto	u4037
  6515  0CD7  0BE0               	decfsz	??_slave1+1,f
  6516  0CD8  2CD5               	goto	u4037
  6517  0CD9  0BE1               	decfsz	??_slave1+2,f
  6518  0CDA  2CD5               	goto	u4037
  6519                           
  6520                           ;bluetooth.c: 32: writeString("AT+INQM=0,5,5\r\n");
  6521  0CDB  3032               	movlw	low (STR_86| (0+32768))
  6522  0CDC  1283               	bcf	3,5	;RP0=0, select bank0
  6523  0CDD  1303               	bcf	3,6	;RP1=0, select bank0
  6524  0CDE  00C8               	movwf	writeString@str
  6525  0CDF  3088               	movlw	high (STR_86| (0+32768))
  6526  0CE0  00C9               	movwf	writeString@str+1
  6527  0CE1  160A  118A  234E  120A  158A  	fcall	_writeString
  6528                           
  6529                           ;bluetooth.c: 33: _delay((unsigned long)((100)*(20000000/4000.0)));
  6530  0CE6  3003               	movlw	3
  6531  0CE7  1283               	bcf	3,5	;RP0=0, select bank0
  6532  0CE8  1303               	bcf	3,6	;RP1=0, select bank0
  6533  0CE9  00E1               	movwf	??_slave1+2
  6534  0CEA  308A               	movlw	138
  6535  0CEB  00E0               	movwf	??_slave1+1
  6536  0CEC  3055               	movlw	85
  6537  0CED  00DF               	movwf	??_slave1
  6538  0CEE                     u4047:	
  6539  0CEE  0BDF               	decfsz	??_slave1,f
  6540  0CEF  2CEE               	goto	u4047
  6541  0CF0  0BE0               	decfsz	??_slave1+1,f
  6542  0CF1  2CEE               	goto	u4047
  6543  0CF2  0BE1               	decfsz	??_slave1+2,f
  6544  0CF3  2CEE               	goto	u4047
  6545                           
  6546                           ;bluetooth.c: 34: writeString("AT+INIT\r\n");
  6547  0CF4  308A               	movlw	low (STR_87| (0+32768))
  6548  0CF5  1283               	bcf	3,5	;RP0=0, select bank0
  6549  0CF6  1303               	bcf	3,6	;RP1=0, select bank0
  6550  0CF7  00C8               	movwf	writeString@str
  6551  0CF8  3088               	movlw	high (STR_87| (0+32768))
  6552  0CF9  00C9               	movwf	writeString@str+1
  6553  0CFA  160A  118A  234E  120A  158A  	fcall	_writeString
  6554                           
  6555                           ;bluetooth.c: 35: _delay((unsigned long)((100)*(20000000/4000.0)));
  6556  0CFF  3003               	movlw	3
  6557  0D00  1283               	bcf	3,5	;RP0=0, select bank0
  6558  0D01  1303               	bcf	3,6	;RP1=0, select bank0
  6559  0D02  00E1               	movwf	??_slave1+2
  6560  0D03  308A               	movlw	138
  6561  0D04  00E0               	movwf	??_slave1+1
  6562  0D05  3055               	movlw	85
  6563  0D06  00DF               	movwf	??_slave1
  6564  0D07                     u4057:	
  6565  0D07  0BDF               	decfsz	??_slave1,f
  6566  0D08  2D07               	goto	u4057
  6567  0D09  0BE0               	decfsz	??_slave1+1,f
  6568  0D0A  2D07               	goto	u4057
  6569  0D0B  0BE1               	decfsz	??_slave1+2,f
  6570  0D0C  2D07               	goto	u4057
  6571                           
  6572                           ;bluetooth.c: 36: writeString("AT+NAME=\"Escravo\"\r\n");
  6573  0D0D  30EA               	movlw	low (STR_96| (0+32768))
  6574  0D0E  1283               	bcf	3,5	;RP0=0, select bank0
  6575  0D0F  1303               	bcf	3,6	;RP1=0, select bank0
  6576  0D10  00C8               	movwf	writeString@str
  6577  0D11  3085               	movlw	high (STR_96| (0+32768))
  6578  0D12  00C9               	movwf	writeString@str+1
  6579  0D13  160A  118A  234E  120A  158A  	fcall	_writeString
  6580                           
  6581                           ;bluetooth.c: 37: _delay((unsigned long)((100)*(20000000/4000.0)));
  6582  0D18  3003               	movlw	3
  6583  0D19  1283               	bcf	3,5	;RP0=0, select bank0
  6584  0D1A  1303               	bcf	3,6	;RP1=0, select bank0
  6585  0D1B  00E1               	movwf	??_slave1+2
  6586  0D1C  308A               	movlw	138
  6587  0D1D  00E0               	movwf	??_slave1+1
  6588  0D1E  3055               	movlw	85
  6589  0D1F  00DF               	movwf	??_slave1
  6590  0D20                     u4067:	
  6591  0D20  0BDF               	decfsz	??_slave1,f
  6592  0D21  2D20               	goto	u4067
  6593  0D22  0BE0               	decfsz	??_slave1+1,f
  6594  0D23  2D20               	goto	u4067
  6595  0D24  0BE1               	decfsz	??_slave1+2,f
  6596  0D25  2D20               	goto	u4067
  6597                           
  6598                           ;bluetooth.c: 38: writeString("AT+PSWD=\"0910\"\r\n");
  6599  0D26  30EF               	movlw	low (STR_89| (0+32768))
  6600  0D27  1283               	bcf	3,5	;RP0=0, select bank0
  6601  0D28  1303               	bcf	3,6	;RP1=0, select bank0
  6602  0D29  00C8               	movwf	writeString@str
  6603  0D2A  3086               	movlw	high (STR_89| (0+32768))
  6604  0D2B  00C9               	movwf	writeString@str+1
  6605  0D2C  160A  118A  234E   	fcall	_writeString
  6606  0D2F  0008               	return
  6607  0D30                     __end_of_slave1:	
  6608                           
  6609                           	psect	text22
  6610  11C2                     __ptext22:	
  6611 ;; *************** function _recebe *****************
  6612 ;; Defined at:
  6613 ;;		line 127 in file "Serial.c"
  6614 ;; Parameters:    Size  Location     Type
  6615 ;;		None
  6616 ;; Auto vars:     Size  Location     Type
  6617 ;;		None
  6618 ;; Return value:  Size  Location     Type
  6619 ;;                  1    wreg      void 
  6620 ;; Registers used:
  6621 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6622 ;; Tracked objects:
  6623 ;;		On entry : 0/0
  6624 ;;		On exit  : 0/0
  6625 ;;		Unchanged: 0/0
  6626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6627 ;;      Params:         0       0       0       0       0
  6628 ;;      Locals:         0       0       0       0       0
  6629 ;;      Temps:          0       0       0       0       0
  6630 ;;      Totals:         0       0       0       0       0
  6631 ;;Total ram usage:        0 bytes
  6632 ;; Hardware stack levels used:    1
  6633 ;; Hardware stack levels required when called:    6
  6634 ;; This function calls:
  6635 ;;		_convAsciToHex
  6636 ;;		_serialOut
  6637 ;; This function is called by:
  6638 ;;		_main
  6639 ;; This function uses a non-reentrant model
  6640 ;;
  6641                           
  6642                           
  6643                           ;psect for function _recebe
  6644  11C2                     _recebe:	
  6645                           
  6646                           ;Serial.c: 129: if (RCIF)
  6647                           
  6648                           ;incstack = 0
  6649                           ; Regs used in _recebe: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6650  11C2  1283               	bcf	3,5	;RP0=0, select bank0
  6651  11C3  1303               	bcf	3,6	;RP1=0, select bank0
  6652  11C4  1E8C               	btfss	12,5	;volatile
  6653  11C5  0008               	return
  6654                           
  6655                           ;Serial.c: 130: {
  6656                           ;Serial.c: 132: convAsciToHex();
  6657  11C6  160A  118A  248C  160A  118A  	fcall	_convAsciToHex
  6658                           
  6659                           ;Serial.c: 133: serialOut(rhex);
  6660  11CB  0872               	movf	_rhex,w
  6661  11CC  160A  118A  2214   	fcall	_serialOut
  6662                           
  6663                           ;Serial.c: 134: RCIF = 0;
  6664  11CF  1283               	bcf	3,5	;RP0=0, select bank0
  6665  11D0  1303               	bcf	3,6	;RP1=0, select bank0
  6666  11D1  128C               	bcf	12,5	;volatile
  6667  11D2  0008               	return
  6668  11D3                     __end_of_recebe:	
  6669                           
  6670                           	psect	text23
  6671  148C                     __ptext23:	
  6672 ;; *************** function _convAsciToHex *****************
  6673 ;; Defined at:
  6674 ;;		line 96 in file "Serial.c"
  6675 ;; Parameters:    Size  Location     Type
  6676 ;;		None
  6677 ;; Auto vars:     Size  Location     Type
  6678 ;;  dez             1   14[BANK0 ] unsigned char 
  6679 ;;  uni             1   13[BANK0 ] unsigned char 
  6680 ;; Return value:  Size  Location     Type
  6681 ;;                  1    wreg      void 
  6682 ;; Registers used:
  6683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6684 ;; Tracked objects:
  6685 ;;		On entry : 0/0
  6686 ;;		On exit  : 0/0
  6687 ;;		Unchanged: 0/0
  6688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6689 ;;      Params:         0       0       0       0       0
  6690 ;;      Locals:         0       2       0       0       0
  6691 ;;      Temps:          0       1       0       0       0
  6692 ;;      Totals:         0       3       0       0       0
  6693 ;;Total ram usage:        3 bytes
  6694 ;; Hardware stack levels used:    1
  6695 ;; Hardware stack levels required when called:    5
  6696 ;; This function calls:
  6697 ;;		_putFIFO
  6698 ;;		_readEUSART
  6699 ;; This function is called by:
  6700 ;;		_recebe
  6701 ;; This function uses a non-reentrant model
  6702 ;;
  6703                           
  6704                           
  6705                           ;psect for function _convAsciToHex
  6706  148C                     _convAsciToHex:	
  6707                           
  6708                           ;Serial.c: 98: char dez;
  6709                           ;Serial.c: 99: char uni;
  6710                           ;Serial.c: 101: if (RCIF)
  6711                           
  6712                           ;incstack = 0
  6713                           ; Regs used in _convAsciToHex: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6714  148C  1283               	bcf	3,5	;RP0=0, select bank0
  6715  148D  1303               	bcf	3,6	;RP1=0, select bank0
  6716  148E  1E8C               	btfss	12,5	;volatile
  6717  148F  2C96               	goto	l64
  6718                           
  6719                           ;Serial.c: 102: putFIFO(RCREG);
  6720  1490  081A               	movf	26,w	;volatile
  6721  1491  160A  118A  232A  160A  118A  	fcall	_putFIFO
  6722  1496                     l64:	
  6723                           
  6724                           ;Serial.c: 103: dez = readEUSART();
  6725  1496  120A  158A  20DD  160A  118A  	fcall	_readEUSART
  6726  149B  1283               	bcf	3,5	;RP0=0, select bank0
  6727  149C  1303               	bcf	3,6	;RP1=0, select bank0
  6728  149D  00D3               	movwf	??_convAsciToHex
  6729  149E  0853               	movf	??_convAsciToHex,w
  6730  149F  00D5               	movwf	convAsciToHex@dez
  6731                           
  6732                           ;Serial.c: 105: if(dez > 0x40)
  6733  14A0  3041               	movlw	65
  6734  14A1  0255               	subwf	convAsciToHex@dez,w
  6735  14A2  1C03               	skipc
  6736  14A3  2CA6               	goto	l4005
  6737                           
  6738                           ;Serial.c: 106: dez -= 0x37;
  6739  14A4  3037               	movlw	55
  6740  14A5  2CA7               	goto	L54
  6741  14A6                     l4005:	
  6742                           
  6743                           ;Serial.c: 107: else
  6744                           ;Serial.c: 108: dez -= 0x30;
  6745  14A6  3030               	movlw	48
  6746  14A7                     L54:	
  6747  14A7  02D5               	subwf	convAsciToHex@dez,f
  6748                           
  6749                           ;Serial.c: 112: if (RCIF)
  6750  14A8  1E8C               	btfss	12,5	;volatile
  6751  14A9  2CB0               	goto	l67
  6752                           
  6753                           ;Serial.c: 113: putFIFO(RCREG);
  6754  14AA  081A               	movf	26,w	;volatile
  6755  14AB  160A  118A  232A  160A  118A  	fcall	_putFIFO
  6756  14B0                     l67:	
  6757                           
  6758                           ;Serial.c: 114: uni = readEUSART();
  6759  14B0  120A  158A  20DD  160A  118A  	fcall	_readEUSART
  6760  14B5  1283               	bcf	3,5	;RP0=0, select bank0
  6761  14B6  1303               	bcf	3,6	;RP1=0, select bank0
  6762  14B7  00D3               	movwf	??_convAsciToHex
  6763  14B8  0853               	movf	??_convAsciToHex,w
  6764  14B9  00D4               	movwf	convAsciToHex@uni
  6765                           
  6766                           ;Serial.c: 116: if(uni > 0x40)
  6767  14BA  3041               	movlw	65
  6768  14BB  0254               	subwf	convAsciToHex@uni,w
  6769  14BC  1C03               	skipc
  6770  14BD  2CC0               	goto	l4015
  6771                           
  6772                           ;Serial.c: 117: uni -= 0x37;
  6773  14BE  3037               	movlw	55
  6774  14BF  2CC1               	goto	L55
  6775  14C0                     l4015:	
  6776                           
  6777                           ;Serial.c: 118: else
  6778                           ;Serial.c: 119: uni -= 0x30;
  6779  14C0  3030               	movlw	48
  6780  14C1                     L55:	
  6781  14C1  02D4               	subwf	convAsciToHex@uni,f
  6782                           
  6783                           ;Serial.c: 121: dez<<=4;
  6784  14C2  0ED5               	swapf	convAsciToHex@dez,f
  6785  14C3  30F0               	movlw	240
  6786  14C4  05D5               	andwf	convAsciToHex@dez,f
  6787                           
  6788                           ;Serial.c: 123: rhex = dez | uni;
  6789  14C5  0855               	movf	convAsciToHex@dez,w
  6790  14C6  0454               	iorwf	convAsciToHex@uni,w
  6791  14C7  00D3               	movwf	??_convAsciToHex
  6792  14C8  0853               	movf	??_convAsciToHex,w
  6793  14C9  00F2               	movwf	_rhex
  6794  14CA  0008               	return
  6795  14CB                     __end_of_convAsciToHex:	
  6796                           
  6797                           	psect	text24
  6798  08DD                     __ptext24:	
  6799 ;; *************** function _readEUSART *****************
  6800 ;; Defined at:
  6801 ;;		line 58 in file "eusart.c"
  6802 ;; Parameters:    Size  Location     Type
  6803 ;;		None
  6804 ;; Auto vars:     Size  Location     Type
  6805 ;;		None
  6806 ;; Return value:  Size  Location     Type
  6807 ;;                  1    wreg      unsigned char 
  6808 ;; Registers used:
  6809 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6810 ;; Tracked objects:
  6811 ;;		On entry : 0/0
  6812 ;;		On exit  : 0/0
  6813 ;;		Unchanged: 0/0
  6814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6815 ;;      Params:         0       0       0       0       0
  6816 ;;      Locals:         0       0       0       0       0
  6817 ;;      Temps:          0       0       0       0       0
  6818 ;;      Totals:         0       0       0       0       0
  6819 ;;Total ram usage:        0 bytes
  6820 ;; Hardware stack levels used:    1
  6821 ;; Hardware stack levels required when called:    4
  6822 ;; This function calls:
  6823 ;;		_getFIFO
  6824 ;; This function is called by:
  6825 ;;		_convAsciToHex
  6826 ;; This function uses a non-reentrant model
  6827 ;;
  6828                           
  6829                           
  6830                           ;psect for function _readEUSART
  6831  08DD                     _readEUSART:	
  6832                           
  6833                           ;eusart.c: 60: return( getFIFO() );
  6834                           
  6835                           ;incstack = 0
  6836                           ; Regs used in _readEUSART: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6837  08DD  160A  118A  2377   	fcall	_getFIFO
  6838  08E0  0008               	return
  6839  08E1                     __end_of_readEUSART:	
  6840                           
  6841                           	psect	text25
  6842  1377                     __ptext25:	
  6843 ;; *************** function _getFIFO *****************
  6844 ;; Defined at:
  6845 ;;		line 23 in file "fifo.c"
  6846 ;; Parameters:    Size  Location     Type
  6847 ;;		None
  6848 ;; Auto vars:     Size  Location     Type
  6849 ;;  aux             1   11[BANK0 ] unsigned char 
  6850 ;; Return value:  Size  Location     Type
  6851 ;;                  1    wreg      unsigned char 
  6852 ;; Registers used:
  6853 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6854 ;; Tracked objects:
  6855 ;;		On entry : 0/0
  6856 ;;		On exit  : 0/0
  6857 ;;		Unchanged: 0/0
  6858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6859 ;;      Params:         0       0       0       0       0
  6860 ;;      Locals:         0       1       0       0       0
  6861 ;;      Temps:          0       4       0       0       0
  6862 ;;      Totals:         0       5       0       0       0
  6863 ;;Total ram usage:        5 bytes
  6864 ;; Hardware stack levels used:    1
  6865 ;; Hardware stack levels required when called:    3
  6866 ;; This function calls:
  6867 ;;		___awmod
  6868 ;; This function is called by:
  6869 ;;		_readEUSART
  6870 ;; This function uses a non-reentrant model
  6871 ;;
  6872                           
  6873                           
  6874                           ;psect for function _getFIFO
  6875  1377                     _getFIFO:	
  6876                           
  6877                           ;fifo.c: 25: unsigned char aux = 0;
  6878                           
  6879                           ;incstack = 0
  6880                           ; Regs used in _getFIFO: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6881  1377  1283               	bcf	3,5	;RP0=0, select bank0
  6882  1378  1303               	bcf	3,6	;RP1=0, select bank0
  6883  1379  01D2               	clrf	getFIFO@aux
  6884                           
  6885                           ;fifo.c: 27: if( fifoTail != fifoHead )
  6886  137A  0842               	movf	_fifoTail,w
  6887  137B  0670               	xorwf	_fifoHead,w
  6888  137C  1903               	skipnz
  6889  137D  2B9E               	goto	l3861
  6890                           
  6891                           ;fifo.c: 28: {
  6892                           ;fifo.c: 29: aux = fifo[ fifoTail ];
  6893  137E  0842               	movf	_fifoTail,w
  6894  137F  3E20               	addlw	(low (_fifo| 0))& (0+255)
  6895  1380  0084               	movwf	4
  6896  1381  1383               	bcf	3,7	;select IRP bank0
  6897  1382  0800               	movf	0,w
  6898  1383  00CE               	movwf	??_getFIFO
  6899  1384  084E               	movf	??_getFIFO,w
  6900  1385  00D2               	movwf	getFIFO@aux
  6901                           
  6902                           ;fifo.c: 30: fifoTail = ++fifoTail % 30;
  6903  1386  301E               	movlw	30
  6904  1387  00C7               	movwf	___awmod@divisor
  6905  1388  3000               	movlw	0
  6906  1389  00C8               	movwf	___awmod@divisor+1
  6907  138A  3001               	movlw	1
  6908  138B  00CE               	movwf	??_getFIFO
  6909  138C  084E               	movf	??_getFIFO,w
  6910  138D  07C2               	addwf	_fifoTail,f
  6911  138E  0842               	movf	_fifoTail,w
  6912  138F  00CF               	movwf	??_getFIFO+1
  6913  1390  01D0               	clrf	??_getFIFO+2
  6914  1391  084F               	movf	??_getFIFO+1,w
  6915  1392  00C9               	movwf	___awmod@dividend
  6916  1393  0850               	movf	??_getFIFO+2,w
  6917  1394  00CA               	movwf	___awmod@dividend+1
  6918  1395  160A  118A  24CB   	fcall	___awmod
  6919  1398  1283               	bcf	3,5	;RP0=0, select bank0
  6920  1399  1303               	bcf	3,6	;RP1=0, select bank0
  6921  139A  0847               	movf	?___awmod,w
  6922  139B  00D1               	movwf	??_getFIFO+3
  6923  139C  0851               	movf	??_getFIFO+3,w
  6924  139D  00C2               	movwf	_fifoTail
  6925  139E                     l3861:	
  6926                           
  6927                           ;fifo.c: 31: }
  6928                           ;fifo.c: 32: return( aux );
  6929  139E  0852               	movf	getFIFO@aux,w
  6930  139F  0008               	return
  6931  13A0                     __end_of_getFIFO:	
  6932                           
  6933                           	psect	text26
  6934  132A                     __ptext26:	
  6935 ;; *************** function _putFIFO *****************
  6936 ;; Defined at:
  6937 ;;		line 17 in file "fifo.c"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;  c               1    wreg     unsigned char 
  6940 ;; Auto vars:     Size  Location     Type
  6941 ;;  c               1   11[BANK0 ] unsigned char 
  6942 ;; Return value:  Size  Location     Type
  6943 ;;                  1    wreg      void 
  6944 ;; Registers used:
  6945 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6946 ;; Tracked objects:
  6947 ;;		On entry : 0/0
  6948 ;;		On exit  : 0/0
  6949 ;;		Unchanged: 0/0
  6950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6951 ;;      Params:         0       0       0       0       0
  6952 ;;      Locals:         0       1       0       0       0
  6953 ;;      Temps:          0       4       0       0       0
  6954 ;;      Totals:         0       5       0       0       0
  6955 ;;Total ram usage:        5 bytes
  6956 ;; Hardware stack levels used:    1
  6957 ;; Hardware stack levels required when called:    3
  6958 ;; This function calls:
  6959 ;;		___awmod
  6960 ;; This function is called by:
  6961 ;;		_convAsciToHex
  6962 ;;		_interrupt_EUSART_RX
  6963 ;; This function uses a non-reentrant model
  6964 ;;
  6965                           
  6966                           
  6967                           ;psect for function _putFIFO
  6968  132A                     _putFIFO:	
  6969                           
  6970                           ;incstack = 0
  6971                           ; Regs used in _putFIFO: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6972                           ;putFIFO@c stored from wreg
  6973  132A  1283               	bcf	3,5	;RP0=0, select bank0
  6974  132B  1303               	bcf	3,6	;RP1=0, select bank0
  6975  132C  00D2               	movwf	putFIFO@c
  6976                           
  6977                           ;fifo.c: 19: fifo[ fifoHead ] = c;
  6978  132D  0852               	movf	putFIFO@c,w
  6979  132E  00CE               	movwf	??_putFIFO
  6980  132F  0870               	movf	_fifoHead,w
  6981  1330  3E20               	addlw	(low (_fifo| 0))& (0+255)
  6982  1331  0084               	movwf	4
  6983  1332  084E               	movf	??_putFIFO,w
  6984  1333  1383               	bcf	3,7	;select IRP bank0
  6985  1334  0080               	movwf	0
  6986                           
  6987                           ;fifo.c: 20: fifoHead = ++fifoHead % 30;
  6988  1335  301E               	movlw	30
  6989  1336  00C7               	movwf	___awmod@divisor
  6990  1337  3000               	movlw	0
  6991  1338  00C8               	movwf	___awmod@divisor+1
  6992  1339  3001               	movlw	1
  6993  133A  00CE               	movwf	??_putFIFO
  6994  133B  084E               	movf	??_putFIFO,w
  6995  133C  07F0               	addwf	_fifoHead,f
  6996  133D  0870               	movf	_fifoHead,w
  6997  133E  00CF               	movwf	??_putFIFO+1
  6998  133F  01D0               	clrf	??_putFIFO+2
  6999  1340  084F               	movf	??_putFIFO+1,w
  7000  1341  00C9               	movwf	___awmod@dividend
  7001  1342  0850               	movf	??_putFIFO+2,w
  7002  1343  00CA               	movwf	___awmod@dividend+1
  7003  1344  160A  118A  24CB   	fcall	___awmod
  7004  1347  1283               	bcf	3,5	;RP0=0, select bank0
  7005  1348  1303               	bcf	3,6	;RP1=0, select bank0
  7006  1349  0847               	movf	?___awmod,w
  7007  134A  00D1               	movwf	??_putFIFO+3
  7008  134B  0851               	movf	??_putFIFO+3,w
  7009  134C  00F0               	movwf	_fifoHead
  7010  134D  0008               	return
  7011  134E                     __end_of_putFIFO:	
  7012                           
  7013                           	psect	text27
  7014  14CB                     __ptext27:	
  7015 ;; *************** function ___awmod *****************
  7016 ;; Defined at:
  7017 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  7018 ;; Parameters:    Size  Location     Type
  7019 ;;  divisor         2    0[BANK0 ] int 
  7020 ;;  dividend        2    2[BANK0 ] int 
  7021 ;; Auto vars:     Size  Location     Type
  7022 ;;  sign            1    6[BANK0 ] unsigned char 
  7023 ;;  counter         1    5[BANK0 ] unsigned char 
  7024 ;; Return value:  Size  Location     Type
  7025 ;;                  2    0[BANK0 ] int 
  7026 ;; Registers used:
  7027 ;;		wreg, status,2, status,0
  7028 ;; Tracked objects:
  7029 ;;		On entry : 0/0
  7030 ;;		On exit  : 0/0
  7031 ;;		Unchanged: 0/0
  7032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7033 ;;      Params:         0       4       0       0       0
  7034 ;;      Locals:         0       2       0       0       0
  7035 ;;      Temps:          0       1       0       0       0
  7036 ;;      Totals:         0       7       0       0       0
  7037 ;;Total ram usage:        7 bytes
  7038 ;; Hardware stack levels used:    1
  7039 ;; Hardware stack levels required when called:    2
  7040 ;; This function calls:
  7041 ;;		Nothing
  7042 ;; This function is called by:
  7043 ;;		_putFIFO
  7044 ;;		_getFIFO
  7045 ;;		_statusFIFO
  7046 ;; This function uses a non-reentrant model
  7047 ;;
  7048                           
  7049                           
  7050                           ;psect for function ___awmod
  7051  14CB                     ___awmod:	
  7052                           
  7053                           ;incstack = 0
  7054                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7055  14CB  1283               	bcf	3,5	;RP0=0, select bank0
  7056  14CC  1303               	bcf	3,6	;RP1=0, select bank0
  7057  14CD  01CD               	clrf	___awmod@sign
  7058  14CE  1FCA               	btfss	___awmod@dividend+1,7
  7059  14CF  2CD7               	goto	l3789
  7060  14D0  09C9               	comf	___awmod@dividend,f
  7061  14D1  09CA               	comf	___awmod@dividend+1,f
  7062  14D2  0AC9               	incf	___awmod@dividend,f
  7063  14D3  1903               	skipnz
  7064  14D4  0ACA               	incf	___awmod@dividend+1,f
  7065  14D5  01CD               	clrf	___awmod@sign
  7066  14D6  0ACD               	incf	___awmod@sign,f
  7067  14D7                     l3789:	
  7068  14D7  1FC8               	btfss	___awmod@divisor+1,7
  7069  14D8  2CDE               	goto	l3793
  7070  14D9  09C7               	comf	___awmod@divisor,f
  7071  14DA  09C8               	comf	___awmod@divisor+1,f
  7072  14DB  0AC7               	incf	___awmod@divisor,f
  7073  14DC  1903               	skipnz
  7074  14DD  0AC8               	incf	___awmod@divisor+1,f
  7075  14DE                     l3793:	
  7076  14DE  0847               	movf	___awmod@divisor,w
  7077  14DF  0448               	iorwf	___awmod@divisor+1,w
  7078  14E0  1903               	btfsc	3,2
  7079  14E1  2D0B               	goto	l3811
  7080  14E2  01CC               	clrf	___awmod@counter
  7081  14E3  0ACC               	incf	___awmod@counter,f
  7082  14E4                     l3801:	
  7083  14E4  1BC8               	btfsc	___awmod@divisor+1,7
  7084  14E5  2CF2               	goto	l3803
  7085  14E6  3001               	movlw	1
  7086  14E7                     u2675:	
  7087  14E7  1003               	clrc
  7088  14E8  0DC7               	rlf	___awmod@divisor,f
  7089  14E9  0DC8               	rlf	___awmod@divisor+1,f
  7090  14EA  3EFF               	addlw	-1
  7091  14EB  1D03               	skipz
  7092  14EC  2CE7               	goto	u2675
  7093  14ED  3001               	movlw	1
  7094  14EE  00CB               	movwf	??___awmod
  7095  14EF  084B               	movf	??___awmod,w
  7096  14F0  07CC               	addwf	___awmod@counter,f
  7097  14F1  2CE4               	goto	l3801
  7098  14F2                     l3803:	
  7099  14F2  0848               	movf	___awmod@divisor+1,w
  7100  14F3  024A               	subwf	___awmod@dividend+1,w
  7101  14F4  1D03               	skipz
  7102  14F5  2CF8               	goto	u2695
  7103  14F6  0847               	movf	___awmod@divisor,w
  7104  14F7  0249               	subwf	___awmod@dividend,w
  7105  14F8                     u2695:	
  7106  14F8  1C03               	skipc
  7107  14F9  2D00               	goto	l3807
  7108  14FA  0847               	movf	___awmod@divisor,w
  7109  14FB  02C9               	subwf	___awmod@dividend,f
  7110  14FC  0848               	movf	___awmod@divisor+1,w
  7111  14FD  1C03               	skipc
  7112  14FE  03CA               	decf	___awmod@dividend+1,f
  7113  14FF  02CA               	subwf	___awmod@dividend+1,f
  7114  1500                     l3807:	
  7115  1500  3001               	movlw	1
  7116  1501                     u2705:	
  7117  1501  1003               	clrc
  7118  1502  0CC8               	rrf	___awmod@divisor+1,f
  7119  1503  0CC7               	rrf	___awmod@divisor,f
  7120  1504  3EFF               	addlw	-1
  7121  1505  1D03               	skipz
  7122  1506  2D01               	goto	u2705
  7123  1507  3001               	movlw	1
  7124  1508  02CC               	subwf	___awmod@counter,f
  7125  1509  1D03               	btfss	3,2
  7126  150A  2CF2               	goto	l3803
  7127  150B                     l3811:	
  7128  150B  084D               	movf	___awmod@sign,w
  7129  150C  1903               	btfsc	3,2
  7130  150D  2D13               	goto	l3815
  7131  150E  09C9               	comf	___awmod@dividend,f
  7132  150F  09CA               	comf	___awmod@dividend+1,f
  7133  1510  0AC9               	incf	___awmod@dividend,f
  7134  1511  1903               	skipnz
  7135  1512  0ACA               	incf	___awmod@dividend+1,f
  7136  1513                     l3815:	
  7137  1513  084A               	movf	___awmod@dividend+1,w
  7138  1514  00C8               	movwf	?___awmod+1
  7139  1515  0849               	movf	___awmod@dividend,w
  7140  1516  00C7               	movwf	?___awmod
  7141  1517  0008               	return
  7142  1518                     __end_of___awmod:	
  7143                           
  7144                           	psect	text28
  7145  0B2B                     __ptext28:	
  7146 ;; *************** function _master1 *****************
  7147 ;; Defined at:
  7148 ;;		line 5 in file "bluetooth.c"
  7149 ;; Parameters:    Size  Location     Type
  7150 ;;		None
  7151 ;; Auto vars:     Size  Location     Type
  7152 ;;		None
  7153 ;; Return value:  Size  Location     Type
  7154 ;;                  1    wreg      void 
  7155 ;; Registers used:
  7156 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7157 ;; Tracked objects:
  7158 ;;		On entry : 0/0
  7159 ;;		On exit  : 0/0
  7160 ;;		Unchanged: 0/0
  7161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7162 ;;      Params:         0       0       0       0       0
  7163 ;;      Locals:         0       0       0       0       0
  7164 ;;      Temps:          0       3       0       0       0
  7165 ;;      Totals:         0       3       0       0       0
  7166 ;;Total ram usage:        3 bytes
  7167 ;; Hardware stack levels used:    1
  7168 ;; Hardware stack levels required when called:    4
  7169 ;; This function calls:
  7170 ;;		_initEUSART
  7171 ;;		_writeString
  7172 ;; This function is called by:
  7173 ;;		_main
  7174 ;; This function uses a non-reentrant model
  7175 ;;
  7176                           
  7177                           
  7178                           ;psect for function _master1
  7179  0B2B                     _master1:	
  7180                           
  7181                           ;bluetooth.c: 7: initEUSART(9600);
  7182                           
  7183                           ;incstack = 0
  7184                           ; Regs used in _master1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7185  0B2B  3000               	movlw	0
  7186  0B2C  1283               	bcf	3,5	;RP0=0, select bank0
  7187  0B2D  1303               	bcf	3,6	;RP1=0, select bank0
  7188  0B2E  00D8               	movwf	initEUSART@baudRate+3
  7189  0B2F  3000               	movlw	0
  7190  0B30  00D7               	movwf	initEUSART@baudRate+2
  7191  0B31  3025               	movlw	37
  7192  0B32  00D6               	movwf	initEUSART@baudRate+1
  7193  0B33  3080               	movlw	128
  7194  0B34  00D5               	movwf	initEUSART@baudRate
  7195  0B35  160A  118A  261C  120A  158A  	fcall	_initEUSART
  7196                           
  7197                           ;bluetooth.c: 8: writeString("AT+UART=9600,0,0\r\n");
  7198  0B3A  30FE               	movlw	low (STR_83| (0+32768))
  7199  0B3B  1283               	bcf	3,5	;RP0=0, select bank0
  7200  0B3C  1303               	bcf	3,6	;RP1=0, select bank0
  7201  0B3D  00C8               	movwf	writeString@str
  7202  0B3E  3085               	movlw	high (STR_83| (0+32768))
  7203  0B3F  00C9               	movwf	writeString@str+1
  7204  0B40  160A  118A  234E  120A  158A  	fcall	_writeString
  7205                           
  7206                           ;bluetooth.c: 9: writeString("AT+ROLE=1\r\n");
  7207  0B45  3068               	movlw	low (STR_84| (0+32768))
  7208  0B46  1283               	bcf	3,5	;RP0=0, select bank0
  7209  0B47  1303               	bcf	3,6	;RP1=0, select bank0
  7210  0B48  00C8               	movwf	writeString@str
  7211  0B49  3088               	movlw	high (STR_84| (0+32768))
  7212  0B4A  00C9               	movwf	writeString@str+1
  7213  0B4B  160A  118A  234E  120A  158A  	fcall	_writeString
  7214                           
  7215                           ;bluetooth.c: 10: _delay((unsigned long)((100)*(20000000/4000.0)));
  7216  0B50  3003               	movlw	3
  7217  0B51  1283               	bcf	3,5	;RP0=0, select bank0
  7218  0B52  1303               	bcf	3,6	;RP1=0, select bank0
  7219  0B53  00E1               	movwf	??_master1+2
  7220  0B54  308A               	movlw	138
  7221  0B55  00E0               	movwf	??_master1+1
  7222  0B56  3055               	movlw	85
  7223  0B57  00DF               	movwf	??_master1
  7224  0B58                     u4077:	
  7225  0B58  0BDF               	decfsz	??_master1,f
  7226  0B59  2B58               	goto	u4077
  7227  0B5A  0BE0               	decfsz	??_master1+1,f
  7228  0B5B  2B58               	goto	u4077
  7229  0B5C  0BE1               	decfsz	??_master1+2,f
  7230  0B5D  2B58               	goto	u4077
  7231                           
  7232                           ;bluetooth.c: 11: writeString("AT+CMODE=1\r\n");
  7233  0B5E  304F               	movlw	low (STR_85| (0+32768))
  7234  0B5F  1283               	bcf	3,5	;RP0=0, select bank0
  7235  0B60  1303               	bcf	3,6	;RP1=0, select bank0
  7236  0B61  00C8               	movwf	writeString@str
  7237  0B62  3088               	movlw	high (STR_85| (0+32768))
  7238  0B63  00C9               	movwf	writeString@str+1
  7239  0B64  160A  118A  234E  120A  158A  	fcall	_writeString
  7240                           
  7241                           ;bluetooth.c: 12: _delay((unsigned long)((100)*(20000000/4000.0)));
  7242  0B69  3003               	movlw	3
  7243  0B6A  1283               	bcf	3,5	;RP0=0, select bank0
  7244  0B6B  1303               	bcf	3,6	;RP1=0, select bank0
  7245  0B6C  00E1               	movwf	??_master1+2
  7246  0B6D  308A               	movlw	138
  7247  0B6E  00E0               	movwf	??_master1+1
  7248  0B6F  3055               	movlw	85
  7249  0B70  00DF               	movwf	??_master1
  7250  0B71                     u4087:	
  7251  0B71  0BDF               	decfsz	??_master1,f
  7252  0B72  2B71               	goto	u4087
  7253  0B73  0BE0               	decfsz	??_master1+1,f
  7254  0B74  2B71               	goto	u4087
  7255  0B75  0BE1               	decfsz	??_master1+2,f
  7256  0B76  2B71               	goto	u4087
  7257                           
  7258                           ;bluetooth.c: 13: writeString("AT+INQM=0,5,5\r\n");
  7259  0B77  3032               	movlw	low (STR_86| (0+32768))
  7260  0B78  1283               	bcf	3,5	;RP0=0, select bank0
  7261  0B79  1303               	bcf	3,6	;RP1=0, select bank0
  7262  0B7A  00C8               	movwf	writeString@str
  7263  0B7B  3088               	movlw	high (STR_86| (0+32768))
  7264  0B7C  00C9               	movwf	writeString@str+1
  7265  0B7D  160A  118A  234E  120A  158A  	fcall	_writeString
  7266                           
  7267                           ;bluetooth.c: 14: _delay((unsigned long)((100)*(20000000/4000.0)));
  7268  0B82  3003               	movlw	3
  7269  0B83  1283               	bcf	3,5	;RP0=0, select bank0
  7270  0B84  1303               	bcf	3,6	;RP1=0, select bank0
  7271  0B85  00E1               	movwf	??_master1+2
  7272  0B86  308A               	movlw	138
  7273  0B87  00E0               	movwf	??_master1+1
  7274  0B88  3055               	movlw	85
  7275  0B89  00DF               	movwf	??_master1
  7276  0B8A                     u4097:	
  7277  0B8A  0BDF               	decfsz	??_master1,f
  7278  0B8B  2B8A               	goto	u4097
  7279  0B8C  0BE0               	decfsz	??_master1+1,f
  7280  0B8D  2B8A               	goto	u4097
  7281  0B8E  0BE1               	decfsz	??_master1+2,f
  7282  0B8F  2B8A               	goto	u4097
  7283                           
  7284                           ;bluetooth.c: 15: writeString("AT+INIT\r\n");
  7285  0B90  308A               	movlw	low (STR_87| (0+32768))
  7286  0B91  1283               	bcf	3,5	;RP0=0, select bank0
  7287  0B92  1303               	bcf	3,6	;RP1=0, select bank0
  7288  0B93  00C8               	movwf	writeString@str
  7289  0B94  3088               	movlw	high (STR_87| (0+32768))
  7290  0B95  00C9               	movwf	writeString@str+1
  7291  0B96  160A  118A  234E  120A  158A  	fcall	_writeString
  7292                           
  7293                           ;bluetooth.c: 16: _delay((unsigned long)((100)*(20000000/4000.0)));
  7294  0B9B  3003               	movlw	3
  7295  0B9C  1283               	bcf	3,5	;RP0=0, select bank0
  7296  0B9D  1303               	bcf	3,6	;RP1=0, select bank0
  7297  0B9E  00E1               	movwf	??_master1+2
  7298  0B9F  308A               	movlw	138
  7299  0BA0  00E0               	movwf	??_master1+1
  7300  0BA1  3055               	movlw	85
  7301  0BA2  00DF               	movwf	??_master1
  7302  0BA3                     u4107:	
  7303  0BA3  0BDF               	decfsz	??_master1,f
  7304  0BA4  2BA3               	goto	u4107
  7305  0BA5  0BE0               	decfsz	??_master1+1,f
  7306  0BA6  2BA3               	goto	u4107
  7307  0BA7  0BE1               	decfsz	??_master1+2,f
  7308  0BA8  2BA3               	goto	u4107
  7309                           
  7310                           ;bluetooth.c: 17: writeString("AT+INQ\r\n");
  7311  0BA9  309D               	movlw	low (STR_88| (0+32768))
  7312  0BAA  1283               	bcf	3,5	;RP0=0, select bank0
  7313  0BAB  1303               	bcf	3,6	;RP1=0, select bank0
  7314  0BAC  00C8               	movwf	writeString@str
  7315  0BAD  3088               	movlw	high (STR_88| (0+32768))
  7316  0BAE  00C9               	movwf	writeString@str+1
  7317  0BAF  160A  118A  234E  120A  158A  	fcall	_writeString
  7318                           
  7319                           ;bluetooth.c: 18: _delay((unsigned long)((100)*(20000000/4000.0)));
  7320  0BB4  3003               	movlw	3
  7321  0BB5  1283               	bcf	3,5	;RP0=0, select bank0
  7322  0BB6  1303               	bcf	3,6	;RP1=0, select bank0
  7323  0BB7  00E1               	movwf	??_master1+2
  7324  0BB8  308A               	movlw	138
  7325  0BB9  00E0               	movwf	??_master1+1
  7326  0BBA  3055               	movlw	85
  7327  0BBB  00DF               	movwf	??_master1
  7328  0BBC                     u4117:	
  7329  0BBC  0BDF               	decfsz	??_master1,f
  7330  0BBD  2BBC               	goto	u4117
  7331  0BBE  0BE0               	decfsz	??_master1+1,f
  7332  0BBF  2BBC               	goto	u4117
  7333  0BC0  0BE1               	decfsz	??_master1+2,f
  7334  0BC1  2BBC               	goto	u4117
  7335                           
  7336                           ;bluetooth.c: 19: writeString("AT+PSWD=\"0910\"\r\n");
  7337  0BC2  30EF               	movlw	low (STR_89| (0+32768))
  7338  0BC3  1283               	bcf	3,5	;RP0=0, select bank0
  7339  0BC4  1303               	bcf	3,6	;RP1=0, select bank0
  7340  0BC5  00C8               	movwf	writeString@str
  7341  0BC6  3086               	movlw	high (STR_89| (0+32768))
  7342  0BC7  00C9               	movwf	writeString@str+1
  7343  0BC8  160A  118A  234E   	fcall	_writeString
  7344  0BCB  0008               	return
  7345  0BCC                     __end_of_master1:	
  7346                           
  7347                           	psect	text29
  7348  134E                     __ptext29:	
  7349 ;; *************** function _writeString *****************
  7350 ;; Defined at:
  7351 ;;		line 136 in file "eusart.c"
  7352 ;; Parameters:    Size  Location     Type
  7353 ;;  str             2    1[BANK0 ] PTR const unsigned char 
  7354 ;;		 -> STR_106(25), STR_105(25), STR_104(28), STR_103(25), 
  7355 ;;		 -> STR_102(25), STR_101(28), STR_100(25), STR_99(25), 
  7356 ;;		 -> STR_98(28), STR_97(17), STR_96(20), STR_95(10), 
  7357 ;;		 -> STR_94(16), STR_93(13), STR_92(12), STR_91(11), 
  7358 ;;		 -> STR_90(19), STR_89(17), STR_88(9), STR_87(10), 
  7359 ;;		 -> STR_86(16), STR_85(13), STR_84(12), STR_83(19), 
  7360 ;; Auto vars:     Size  Location     Type
  7361 ;;		None
  7362 ;; Return value:  Size  Location     Type
  7363 ;;                  1    wreg      void 
  7364 ;; Registers used:
  7365 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7366 ;; Tracked objects:
  7367 ;;		On entry : 0/0
  7368 ;;		On exit  : 0/0
  7369 ;;		Unchanged: 0/0
  7370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7371 ;;      Params:         0       2       0       0       0
  7372 ;;      Locals:         0       0       0       0       0
  7373 ;;      Temps:          0       0       0       0       0
  7374 ;;      Totals:         0       2       0       0       0
  7375 ;;Total ram usage:        2 bytes
  7376 ;; Hardware stack levels used:    1
  7377 ;; Hardware stack levels required when called:    3
  7378 ;; This function calls:
  7379 ;;		_writeEUSART
  7380 ;; This function is called by:
  7381 ;;		_master1
  7382 ;;		_slave1
  7383 ;;		_modulo1
  7384 ;;		_modulo2
  7385 ;;		_modulo3
  7386 ;; This function uses a non-reentrant model
  7387 ;;
  7388                           
  7389                           
  7390                           ;psect for function _writeString
  7391  134E                     _writeString:	
  7392  134E                     l4109:	
  7393                           ;eusart.c: 138: while( *str )
  7394                           
  7395                           ;incstack = 0
  7396                           ; Regs used in _writeString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7397                           
  7398  134E  1283               	bcf	3,5	;RP0=0, select bank0
  7399  134F  1303               	bcf	3,6	;RP1=0, select bank0
  7400  1350  0849               	movf	writeString@str+1,w
  7401  1351  00FF               	movwf	127
  7402  1352  0848               	movf	writeString@str,w
  7403  1353  0084               	movwf	4
  7404  1354  160A  118A  2000  160A  118A  	fcall	stringtab
  7405  1359  3A00               	xorlw	0
  7406  135A  1903               	btfsc	3,2
  7407  135B  0008               	return
  7408  135C                     l547:	
  7409                           ;eusart.c: 141: ;
  7410                           
  7411                           ;eusart.c: 139: {
  7412                           ;eusart.c: 140: while( !TXSTAbits.TRMT )
  7413                           
  7414  135C  1683               	bsf	3,5	;RP0=1, select bank1
  7415  135D  1303               	bcf	3,6	;RP1=0, select bank1
  7416  135E  1C98               	btfss	24,1	;volatile
  7417  135F  2B5C               	goto	l547
  7418                           
  7419                           ;eusart.c: 142: writeEUSART( *str );
  7420  1360  1283               	bcf	3,5	;RP0=0, select bank0
  7421  1361  1303               	bcf	3,6	;RP1=0, select bank0
  7422  1362  0849               	movf	writeString@str+1,w
  7423  1363  00FF               	movwf	127
  7424  1364  0848               	movf	writeString@str,w
  7425  1365  0084               	movwf	4
  7426  1366  160A  118A  2000  160A  118A  	fcall	stringtab
  7427  136B  160A  118A  218D  160A  118A  	fcall	_writeEUSART
  7428                           
  7429                           ;eusart.c: 143: ++str;
  7430  1370  3001               	movlw	1
  7431  1371  1283               	bcf	3,5	;RP0=0, select bank0
  7432  1372  1303               	bcf	3,6	;RP1=0, select bank0
  7433  1373  07C8               	addwf	writeString@str,f
  7434  1374  1803               	skipnc
  7435  1375  0AC9               	incf	writeString@str+1,f
  7436  1376  2B4E               	goto	l4109
  7437  1377                     __end_of_writeString:	
  7438                           
  7439                           	psect	text30
  7440  118D                     __ptext30:	
  7441 ;; *************** function _writeEUSART *****************
  7442 ;; Defined at:
  7443 ;;		line 113 in file "eusart.c"
  7444 ;; Parameters:    Size  Location     Type
  7445 ;;  d               1    wreg     unsigned char 
  7446 ;; Auto vars:     Size  Location     Type
  7447 ;;  d               1    0[BANK0 ] unsigned char 
  7448 ;; Return value:  Size  Location     Type
  7449 ;;                  1    wreg      void 
  7450 ;; Registers used:
  7451 ;;		wreg
  7452 ;; Tracked objects:
  7453 ;;		On entry : 0/0
  7454 ;;		On exit  : 0/0
  7455 ;;		Unchanged: 0/0
  7456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7457 ;;      Params:         0       0       0       0       0
  7458 ;;      Locals:         0       1       0       0       0
  7459 ;;      Temps:          0       0       0       0       0
  7460 ;;      Totals:         0       1       0       0       0
  7461 ;;Total ram usage:        1 bytes
  7462 ;; Hardware stack levels used:    1
  7463 ;; Hardware stack levels required when called:    2
  7464 ;; This function calls:
  7465 ;;		Nothing
  7466 ;; This function is called by:
  7467 ;;		_transmite
  7468 ;;		_writeString
  7469 ;; This function uses a non-reentrant model
  7470 ;;
  7471                           
  7472                           
  7473                           ;psect for function _writeEUSART
  7474  118D                     _writeEUSART:	
  7475                           
  7476                           ;incstack = 0
  7477                           ; Regs used in _writeEUSART: [wreg]
  7478                           ;writeEUSART@d stored from wreg
  7479  118D  1283               	bcf	3,5	;RP0=0, select bank0
  7480  118E  1303               	bcf	3,6	;RP1=0, select bank0
  7481  118F  00C7               	movwf	writeEUSART@d
  7482                           
  7483                           ;eusart.c: 115: TXREG = d;
  7484  1190  0847               	movf	writeEUSART@d,w
  7485  1191  0099               	movwf	25	;volatile
  7486  1192  0008               	return
  7487  1193                     __end_of_writeEUSART:	
  7488                           
  7489                           	psect	text31
  7490  161C                     __ptext31:	
  7491 ;; *************** function _initEUSART *****************
  7492 ;; Defined at:
  7493 ;;		line 155 in file "eusart.c"
  7494 ;; Parameters:    Size  Location     Type
  7495 ;;  baudRate        4   14[BANK0 ] unsigned long 
  7496 ;; Auto vars:     Size  Location     Type
  7497 ;;		None
  7498 ;; Return value:  Size  Location     Type
  7499 ;;                  1    wreg      void 
  7500 ;; Registers used:
  7501 ;;		wreg, status,2, status,0, pclath, cstack
  7502 ;; Tracked objects:
  7503 ;;		On entry : 0/0
  7504 ;;		On exit  : 0/0
  7505 ;;		Unchanged: 0/0
  7506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7507 ;;      Params:         0       4       0       0       0
  7508 ;;      Locals:         0       0       0       0       0
  7509 ;;      Temps:          0       6       0       0       0
  7510 ;;      Totals:         0      10       0       0       0
  7511 ;;Total ram usage:       10 bytes
  7512 ;; Hardware stack levels used:    1
  7513 ;; Hardware stack levels required when called:    3
  7514 ;; This function calls:
  7515 ;;		___lldiv
  7516 ;; This function is called by:
  7517 ;;		_master1
  7518 ;;		_slave1
  7519 ;;		_main
  7520 ;;		_modulo1
  7521 ;;		_modulo2
  7522 ;;		_modulo3
  7523 ;; This function uses a non-reentrant model
  7524 ;;
  7525                           
  7526                           
  7527                           ;psect for function _initEUSART
  7528  161C                     _initEUSART:	
  7529                           
  7530                           ;eusart.c: 159: SPBRbits.u16 = (unsigned int)( (20000000 / (baudRate<<2)) - 1);
  7531                           
  7532                           ;incstack = 0
  7533                           ; Regs used in _initEUSART: [wreg+status,2+status,0+pclath+cstack]
  7534  161C  1283               	bcf	3,5	;RP0=0, select bank0
  7535  161D  1303               	bcf	3,6	;RP1=0, select bank0
  7536  161E  0855               	movf	initEUSART@baudRate,w
  7537  161F  00D9               	movwf	??_initEUSART
  7538  1620  0856               	movf	initEUSART@baudRate+1,w
  7539  1621  00DA               	movwf	??_initEUSART+1
  7540  1622  0857               	movf	initEUSART@baudRate+2,w
  7541  1623  00DB               	movwf	??_initEUSART+2
  7542  1624  0858               	movf	initEUSART@baudRate+3,w
  7543  1625  00DC               	movwf	??_initEUSART+3
  7544  1626  3002               	movlw	2
  7545  1627                     u3035:	
  7546  1627  1003               	clrc
  7547  1628  0DD9               	rlf	??_initEUSART,f
  7548  1629  0DDA               	rlf	??_initEUSART+1,f
  7549  162A  0DDB               	rlf	??_initEUSART+2,f
  7550  162B  0DDC               	rlf	??_initEUSART+3,f
  7551  162C  3EFF               	addlw	-1
  7552  162D  1D03               	skipz
  7553  162E  2E27               	goto	u3035
  7554  162F  085C               	movf	??_initEUSART+3,w
  7555  1630  00CA               	movwf	___lldiv@divisor+3
  7556  1631  085B               	movf	??_initEUSART+2,w
  7557  1632  00C9               	movwf	___lldiv@divisor+2
  7558  1633  085A               	movf	??_initEUSART+1,w
  7559  1634  00C8               	movwf	___lldiv@divisor+1
  7560  1635  0859               	movf	??_initEUSART,w
  7561  1636  00C7               	movwf	___lldiv@divisor
  7562  1637  3001               	movlw	1
  7563  1638  00CE               	movwf	___lldiv@dividend+3
  7564  1639  3031               	movlw	49
  7565  163A  00CD               	movwf	___lldiv@dividend+2
  7566  163B  302D               	movlw	45
  7567  163C  00CC               	movwf	___lldiv@dividend+1
  7568  163D  3000               	movlw	0
  7569  163E  00CB               	movwf	___lldiv@dividend
  7570  163F  160A  118A  2677  160A  118A  	fcall	___lldiv
  7571  1644  1283               	bcf	3,5	;RP0=0, select bank0
  7572  1645  1303               	bcf	3,6	;RP1=0, select bank0
  7573  1646  0847               	movf	?___lldiv,w
  7574  1647  3EFF               	addlw	255
  7575  1648  00DD               	movwf	??_initEUSART+4
  7576  1649  0848               	movf	?___lldiv+1,w
  7577  164A  1803               	skipnc
  7578  164B  3E01               	addlw	1
  7579  164C  3EFF               	addlw	255
  7580  164D  00DE               	movwf	??_initEUSART+5
  7581  164E  085D               	movf	??_initEUSART+4,w
  7582  164F  1683               	bsf	3,5	;RP0=1, select bank1
  7583  1650  1303               	bcf	3,6	;RP1=0, select bank1
  7584  1651  0099               	movwf	25	;volatile
  7585  1652  1283               	bcf	3,5	;RP0=0, select bank0
  7586  1653  1303               	bcf	3,6	;RP1=0, select bank0
  7587  1654  085E               	movf	??_initEUSART+5,w
  7588  1655  1683               	bsf	3,5	;RP0=1, select bank1
  7589  1656  1303               	bcf	3,6	;RP1=0, select bank1
  7590  1657  009A               	movwf	26	;volatile
  7591                           
  7592                           ;eusart.c: 161: TXSTAbits.SYNC = 0;
  7593  1658  1218               	bcf	24,4	;volatile
  7594                           
  7595                           ;eusart.c: 162: BAUDCTLbits.BRG16 = 1;
  7596  1659  1683               	bsf	3,5	;RP0=1, select bank3
  7597  165A  1703               	bsf	3,6	;RP1=1, select bank3
  7598  165B  1587               	bsf	7,3	;volatile
  7599                           
  7600                           ;eusart.c: 163: TXSTAbits.BRGH = 1;
  7601  165C  1683               	bsf	3,5	;RP0=1, select bank1
  7602  165D  1303               	bcf	3,6	;RP1=0, select bank1
  7603  165E  1518               	bsf	24,2	;volatile
  7604                           
  7605                           ;eusart.c: 165: RCSTAbits.SPEN = 1;
  7606  165F  1283               	bcf	3,5	;RP0=0, select bank0
  7607  1660  1303               	bcf	3,6	;RP1=0, select bank0
  7608  1661  1798               	bsf	24,7	;volatile
  7609                           
  7610                           ;eusart.c: 166: TXSTAbits.TXEN = 1;
  7611  1662  1683               	bsf	3,5	;RP0=1, select bank1
  7612  1663  1303               	bcf	3,6	;RP1=0, select bank1
  7613  1664  1698               	bsf	24,5	;volatile
  7614                           
  7615                           ;eusart.c: 167: RCSTAbits.CREN = 1;
  7616  1665  1283               	bcf	3,5	;RP0=0, select bank0
  7617  1666  1303               	bcf	3,6	;RP1=0, select bank0
  7618  1667  1618               	bsf	24,4	;volatile
  7619                           
  7620                           ;eusart.c: 169: TXSTAbits.TX9 = 0;
  7621  1668  1683               	bsf	3,5	;RP0=1, select bank1
  7622  1669  1303               	bcf	3,6	;RP1=0, select bank1
  7623  166A  1318               	bcf	24,6	;volatile
  7624                           
  7625                           ;eusart.c: 170: TXSTAbits.TX9D = 0;
  7626  166B  1018               	bcf	24,0	;volatile
  7627                           
  7628                           ;eusart.c: 171: RCSTAbits.RX9 = 0;
  7629  166C  1283               	bcf	3,5	;RP0=0, select bank0
  7630  166D  1303               	bcf	3,6	;RP1=0, select bank0
  7631  166E  1318               	bcf	24,6	;volatile
  7632                           
  7633                           ;eusart.c: 172: RCSTAbits.RX9D = 0;
  7634  166F  1018               	bcf	24,0	;volatile
  7635                           
  7636                           ;eusart.c: 174: SSPSTATbits.P = 1;
  7637  1670  1683               	bsf	3,5	;RP0=1, select bank1
  7638  1671  1303               	bcf	3,6	;RP1=0, select bank1
  7639  1672  1614               	bsf	20,4	;volatile
  7640                           
  7641                           ;eusart.c: 176: PIE1bits.RCIE = 1;
  7642  1673  168C               	bsf	12,5	;volatile
  7643                           
  7644                           ;eusart.c: 177: INTCONbits.PEIE = 1;
  7645  1674  170B               	bsf	11,6	;volatile
  7646                           
  7647                           ;eusart.c: 178: INTCONbits.GIE = 1;
  7648  1675  178B               	bsf	11,7	;volatile
  7649  1676  0008               	return
  7650  1677                     __end_of_initEUSART:	
  7651                           
  7652                           	psect	text32
  7653  1677                     __ptext32:	
  7654 ;; *************** function ___lldiv *****************
  7655 ;; Defined at:
  7656 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;  divisor         4    0[BANK0 ] unsigned long 
  7659 ;;  dividend        4    4[BANK0 ] unsigned long 
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;  quotient        4    9[BANK0 ] unsigned long 
  7662 ;;  counter         1   13[BANK0 ] unsigned char 
  7663 ;; Return value:  Size  Location     Type
  7664 ;;                  4    0[BANK0 ] unsigned long 
  7665 ;; Registers used:
  7666 ;;		wreg, status,2, status,0
  7667 ;; Tracked objects:
  7668 ;;		On entry : 0/0
  7669 ;;		On exit  : 0/0
  7670 ;;		Unchanged: 0/0
  7671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7672 ;;      Params:         0       8       0       0       0
  7673 ;;      Locals:         0       5       0       0       0
  7674 ;;      Temps:          0       1       0       0       0
  7675 ;;      Totals:         0      14       0       0       0
  7676 ;;Total ram usage:       14 bytes
  7677 ;; Hardware stack levels used:    1
  7678 ;; Hardware stack levels required when called:    2
  7679 ;; This function calls:
  7680 ;;		Nothing
  7681 ;; This function is called by:
  7682 ;;		_initEUSART
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           
  7687                           ;psect for function ___lldiv
  7688  1677                     ___lldiv:	
  7689                           
  7690                           ;incstack = 0
  7691                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7692  1677  3000               	movlw	0
  7693  1678  1283               	bcf	3,5	;RP0=0, select bank0
  7694  1679  1303               	bcf	3,6	;RP1=0, select bank0
  7695  167A  00D3               	movwf	___lldiv@quotient+3
  7696  167B  3000               	movlw	0
  7697  167C  00D2               	movwf	___lldiv@quotient+2
  7698  167D  3000               	movlw	0
  7699  167E  00D1               	movwf	___lldiv@quotient+1
  7700  167F  3000               	movlw	0
  7701  1680  00D0               	movwf	___lldiv@quotient
  7702  1681  084A               	movf	___lldiv@divisor+3,w
  7703  1682  0449               	iorwf	___lldiv@divisor+2,w
  7704  1683  0448               	iorwf	___lldiv@divisor+1,w
  7705  1684  0447               	iorwf	___lldiv@divisor,w
  7706  1685  1903               	skipnz
  7707  1686  2ECE               	goto	l3939
  7708  1687  01D4               	clrf	___lldiv@counter
  7709  1688  0AD4               	incf	___lldiv@counter,f
  7710  1689                     l3925:	
  7711  1689  1BCA               	btfsc	___lldiv@divisor+3,7
  7712  168A  2E99               	goto	l3927
  7713  168B  3001               	movlw	1
  7714  168C  00CF               	movwf	??___lldiv
  7715  168D                     u2825:	
  7716  168D  1003               	clrc
  7717  168E  0DC7               	rlf	___lldiv@divisor,f
  7718  168F  0DC8               	rlf	___lldiv@divisor+1,f
  7719  1690  0DC9               	rlf	___lldiv@divisor+2,f
  7720  1691  0DCA               	rlf	___lldiv@divisor+3,f
  7721  1692  0BCF               	decfsz	??___lldiv,f
  7722  1693  2E8D               	goto	u2825
  7723  1694  3001               	movlw	1
  7724  1695  00CF               	movwf	??___lldiv
  7725  1696  084F               	movf	??___lldiv,w
  7726  1697  07D4               	addwf	___lldiv@counter,f
  7727  1698  2E89               	goto	l3925
  7728  1699                     l3927:	
  7729  1699  3001               	movlw	1
  7730  169A  00CF               	movwf	??___lldiv
  7731  169B                     u2845:	
  7732  169B  1003               	clrc
  7733  169C  0DD0               	rlf	___lldiv@quotient,f
  7734  169D  0DD1               	rlf	___lldiv@quotient+1,f
  7735  169E  0DD2               	rlf	___lldiv@quotient+2,f
  7736  169F  0DD3               	rlf	___lldiv@quotient+3,f
  7737  16A0  0BCF               	decfsz	??___lldiv,f
  7738  16A1  2E9B               	goto	u2845
  7739  16A2  084A               	movf	___lldiv@divisor+3,w
  7740  16A3  024E               	subwf	___lldiv@dividend+3,w
  7741  16A4  1D03               	skipz
  7742  16A5  2EB0               	goto	u2855
  7743  16A6  0849               	movf	___lldiv@divisor+2,w
  7744  16A7  024D               	subwf	___lldiv@dividend+2,w
  7745  16A8  1D03               	skipz
  7746  16A9  2EB0               	goto	u2855
  7747  16AA  0848               	movf	___lldiv@divisor+1,w
  7748  16AB  024C               	subwf	___lldiv@dividend+1,w
  7749  16AC  1D03               	skipz
  7750  16AD  2EB0               	goto	u2855
  7751  16AE  0847               	movf	___lldiv@divisor,w
  7752  16AF  024B               	subwf	___lldiv@dividend,w
  7753  16B0                     u2855:	
  7754  16B0  1C03               	skipc
  7755  16B1  2EC1               	goto	l3935
  7756  16B2  0847               	movf	___lldiv@divisor,w
  7757  16B3  02CB               	subwf	___lldiv@dividend,f
  7758  16B4  0848               	movf	___lldiv@divisor+1,w
  7759  16B5  1C03               	skipc
  7760  16B6  0F48               	incfsz	___lldiv@divisor+1,w
  7761  16B7  02CC               	subwf	___lldiv@dividend+1,f
  7762  16B8  0849               	movf	___lldiv@divisor+2,w
  7763  16B9  1C03               	skipc
  7764  16BA  0F49               	incfsz	___lldiv@divisor+2,w
  7765  16BB  02CD               	subwf	___lldiv@dividend+2,f
  7766  16BC  084A               	movf	___lldiv@divisor+3,w
  7767  16BD  1C03               	skipc
  7768  16BE  0F4A               	incfsz	___lldiv@divisor+3,w
  7769  16BF  02CE               	subwf	___lldiv@dividend+3,f
  7770  16C0  1450               	bsf	___lldiv@quotient,0
  7771  16C1                     l3935:	
  7772  16C1  3001               	movlw	1
  7773  16C2                     u2865:	
  7774  16C2  1003               	clrc
  7775  16C3  0CCA               	rrf	___lldiv@divisor+3,f
  7776  16C4  0CC9               	rrf	___lldiv@divisor+2,f
  7777  16C5  0CC8               	rrf	___lldiv@divisor+1,f
  7778  16C6  0CC7               	rrf	___lldiv@divisor,f
  7779  16C7  3EFF               	addlw	-1
  7780  16C8  1D03               	skipz
  7781  16C9  2EC2               	goto	u2865
  7782  16CA  3001               	movlw	1
  7783  16CB  02D4               	subwf	___lldiv@counter,f
  7784  16CC  1D03               	btfss	3,2
  7785  16CD  2E99               	goto	l3927
  7786  16CE                     l3939:	
  7787  16CE  0853               	movf	___lldiv@quotient+3,w
  7788  16CF  00CA               	movwf	?___lldiv+3
  7789  16D0  0852               	movf	___lldiv@quotient+2,w
  7790  16D1  00C9               	movwf	?___lldiv+2
  7791  16D2  0851               	movf	___lldiv@quotient+1,w
  7792  16D3  00C8               	movwf	?___lldiv+1
  7793  16D4  0850               	movf	___lldiv@quotient,w
  7794  16D5  00C7               	movwf	?___lldiv
  7795  16D6  0008               	return
  7796  16D7                     __end_of___lldiv:	
  7797                           
  7798                           	psect	text33
  7799  0BCC                     __ptext33:	
  7800 ;; *************** function _logo *****************
  7801 ;; Defined at:
  7802 ;;		line 8 in file "auxiliar.c"
  7803 ;; Parameters:    Size  Location     Type
  7804 ;;		None
  7805 ;; Auto vars:     Size  Location     Type
  7806 ;;		None
  7807 ;; Return value:  Size  Location     Type
  7808 ;;                  1    wreg      void 
  7809 ;; Registers used:
  7810 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7811 ;; Tracked objects:
  7812 ;;		On entry : 0/0
  7813 ;;		On exit  : 0/0
  7814 ;;		Unchanged: 0/0
  7815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7816 ;;      Params:         0       0       0       0       0
  7817 ;;      Locals:         0       0       0       0       0
  7818 ;;      Temps:          0       3       0       0       0
  7819 ;;      Totals:         0       3       0       0       0
  7820 ;;Total ram usage:        3 bytes
  7821 ;; Hardware stack levels used:    1
  7822 ;; Hardware stack levels required when called:    5
  7823 ;; This function calls:
  7824 ;;		_cmdLCD
  7825 ;;		_writeLCD
  7826 ;; This function is called by:
  7827 ;;		_main
  7828 ;; This function uses a non-reentrant model
  7829 ;;
  7830                           
  7831                           
  7832                           ;psect for function _logo
  7833  0BCC                     _logo:	
  7834                           
  7835                           ;auxiliar.c: 10: cmdLCD(0x01);
  7836                           
  7837                           ;incstack = 0
  7838                           ; Regs used in _logo: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7839  0BCC  3001               	movlw	1
  7840  0BCD  160A  118A  25C2  120A  158A  	fcall	_cmdLCD
  7841                           
  7842                           ;auxiliar.c: 11: writeLCD(0,0,"__            __"); _delay((unsigned long)((200)*(2000000
      +                          0/4000.0)));
  7843  0BD2  1283               	bcf	3,5	;RP0=0, select bank0
  7844  0BD3  1303               	bcf	3,6	;RP1=0, select bank0
  7845  0BD4  01CF               	clrf	writeLCD@y
  7846  0BD5  3021               	movlw	low (STR_1| (0+32768))
  7847  0BD6  00D0               	movwf	writeLCD@ptr
  7848  0BD7  3088               	movlw	high (STR_1| (0+32768))
  7849  0BD8  00D1               	movwf	writeLCD@ptr+1
  7850  0BD9  3000               	movlw	0
  7851  0BDA  160A  118A  2426  120A  158A  	fcall	_writeLCD
  7852  0BDF  3006               	movlw	6
  7853  0BE0  1283               	bcf	3,5	;RP0=0, select bank0
  7854  0BE1  1303               	bcf	3,6	;RP1=0, select bank0
  7855  0BE2  00D6               	movwf	??_logo+2
  7856  0BE3  3013               	movlw	19
  7857  0BE4  00D5               	movwf	??_logo+1
  7858  0BE5  30AD               	movlw	173
  7859  0BE6  00D4               	movwf	??_logo
  7860  0BE7                     u4127:	
  7861  0BE7  0BD4               	decfsz	??_logo,f
  7862  0BE8  2BE7               	goto	u4127
  7863  0BE9  0BD5               	decfsz	??_logo+1,f
  7864  0BEA  2BE7               	goto	u4127
  7865  0BEB  0BD6               	decfsz	??_logo+2,f
  7866  0BEC  2BE7               	goto	u4127
  7867                           
  7868                           ;auxiliar.c: 12: writeLCD(6,0,"B"); _delay((unsigned long)((600)*(20000000/4000.0)));
  7869  0BED  1283               	bcf	3,5	;RP0=0, select bank0
  7870  0BEE  1303               	bcf	3,6	;RP1=0, select bank0
  7871  0BEF  01CF               	clrf	writeLCD@y
  7872  0BF0  30D5               	movlw	low (STR_2| (0+32768))
  7873  0BF1  00D0               	movwf	writeLCD@ptr
  7874  0BF2  3088               	movlw	high (STR_2| (0+32768))
  7875  0BF3  00D1               	movwf	writeLCD@ptr+1
  7876  0BF4  3006               	movlw	6
  7877  0BF5  160A  118A  2426  120A  158A  	fcall	_writeLCD
  7878  0BFA  3010               	movlw	16
  7879  0BFB  1283               	bcf	3,5	;RP0=0, select bank0
  7880  0BFC  1303               	bcf	3,6	;RP1=0, select bank0
  7881  0BFD  00D6               	movwf	??_logo+2
  7882  0BFE  3039               	movlw	57
  7883  0BFF  00D5               	movwf	??_logo+1
  7884  0C00  300D               	movlw	13
  7885  0C01  00D4               	movwf	??_logo
  7886  0C02                     u4137:	
  7887  0C02  0BD4               	decfsz	??_logo,f
  7888  0C03  2C02               	goto	u4137
  7889  0C04  0BD5               	decfsz	??_logo+1,f
  7890  0C05  2C02               	goto	u4137
  7891  0C06  0BD6               	decfsz	??_logo+2,f
  7892  0C07  2C02               	goto	u4137
  7893                           
  7894                           ;auxiliar.c: 13: writeLCD(7,0,"l"); _delay((unsigned long)((600)*(20000000/4000.0)));
  7895  0C08  1283               	bcf	3,5	;RP0=0, select bank0
  7896  0C09  1303               	bcf	3,6	;RP1=0, select bank0
  7897  0C0A  01CF               	clrf	writeLCD@y
  7898  0C0B  30D9               	movlw	low (STR_3| (0+32768))
  7899  0C0C  00D0               	movwf	writeLCD@ptr
  7900  0C0D  3088               	movlw	high (STR_3| (0+32768))
  7901  0C0E  00D1               	movwf	writeLCD@ptr+1
  7902  0C0F  3007               	movlw	7
  7903  0C10  160A  118A  2426  120A  158A  	fcall	_writeLCD
  7904  0C15  3010               	movlw	16
  7905  0C16  1283               	bcf	3,5	;RP0=0, select bank0
  7906  0C17  1303               	bcf	3,6	;RP1=0, select bank0
  7907  0C18  00D6               	movwf	??_logo+2
  7908  0C19  3039               	movlw	57
  7909  0C1A  00D5               	movwf	??_logo+1
  7910  0C1B  300D               	movlw	13
  7911  0C1C  00D4               	movwf	??_logo
  7912  0C1D                     u4147:	
  7913  0C1D  0BD4               	decfsz	??_logo,f
  7914  0C1E  2C1D               	goto	u4147
  7915  0C1F  0BD5               	decfsz	??_logo+1,f
  7916  0C20  2C1D               	goto	u4147
  7917  0C21  0BD6               	decfsz	??_logo+2,f
  7918  0C22  2C1D               	goto	u4147
  7919                           
  7920                           ;auxiliar.c: 14: writeLCD(8,0,"u"); _delay((unsigned long)((600)*(20000000/4000.0)));
  7921  0C23  1283               	bcf	3,5	;RP0=0, select bank0
  7922  0C24  1303               	bcf	3,6	;RP1=0, select bank0
  7923  0C25  01CF               	clrf	writeLCD@y
  7924  0C26  30DB               	movlw	low (STR_4| (0+32768))
  7925  0C27  00D0               	movwf	writeLCD@ptr
  7926  0C28  3088               	movlw	high (STR_4| (0+32768))
  7927  0C29  00D1               	movwf	writeLCD@ptr+1
  7928  0C2A  3008               	movlw	8
  7929  0C2B  160A  118A  2426  120A  158A  	fcall	_writeLCD
  7930  0C30  3010               	movlw	16
  7931  0C31  1283               	bcf	3,5	;RP0=0, select bank0
  7932  0C32  1303               	bcf	3,6	;RP1=0, select bank0
  7933  0C33  00D6               	movwf	??_logo+2
  7934  0C34  3039               	movlw	57
  7935  0C35  00D5               	movwf	??_logo+1
  7936  0C36  300D               	movlw	13
  7937  0C37  00D4               	movwf	??_logo
  7938  0C38                     u4157:	
  7939  0C38  0BD4               	decfsz	??_logo,f
  7940  0C39  2C38               	goto	u4157
  7941  0C3A  0BD5               	decfsz	??_logo+1,f
  7942  0C3B  2C38               	goto	u4157
  7943  0C3C  0BD6               	decfsz	??_logo+2,f
  7944  0C3D  2C38               	goto	u4157
  7945                           
  7946                           ;auxiliar.c: 15: writeLCD(9,0,"e"); _delay((unsigned long)((600)*(20000000/4000.0)));
  7947  0C3E  1283               	bcf	3,5	;RP0=0, select bank0
  7948  0C3F  1303               	bcf	3,6	;RP1=0, select bank0
  7949  0C40  01CF               	clrf	writeLCD@y
  7950  0C41  30D7               	movlw	low (STR_5| (0+32768))
  7951  0C42  00D0               	movwf	writeLCD@ptr
  7952  0C43  3088               	movlw	high (STR_5| (0+32768))
  7953  0C44  00D1               	movwf	writeLCD@ptr+1
  7954  0C45  3009               	movlw	9
  7955  0C46  160A  118A  2426  120A  158A  	fcall	_writeLCD
  7956  0C4B  3010               	movlw	16
  7957  0C4C  1283               	bcf	3,5	;RP0=0, select bank0
  7958  0C4D  1303               	bcf	3,6	;RP1=0, select bank0
  7959  0C4E  00D6               	movwf	??_logo+2
  7960  0C4F  3039               	movlw	57
  7961  0C50  00D5               	movwf	??_logo+1
  7962  0C51  300D               	movlw	13
  7963  0C52  00D4               	movwf	??_logo
  7964  0C53                     u4167:	
  7965  0C53  0BD4               	decfsz	??_logo,f
  7966  0C54  2C53               	goto	u4167
  7967  0C55  0BD5               	decfsz	??_logo+1,f
  7968  0C56  2C53               	goto	u4167
  7969  0C57  0BD6               	decfsz	??_logo+2,f
  7970  0C58  2C53               	goto	u4167
  7971                           
  7972                           ;auxiliar.c: 16: writeLCD(0,1,"    Tecnolog    "); _delay((unsigned long)((2500)*(200000
      +                          00/4000.0)));
  7973  0C59  1283               	bcf	3,5	;RP0=0, select bank0
  7974  0C5A  1303               	bcf	3,6	;RP1=0, select bank0
  7975  0C5B  01CF               	clrf	writeLCD@y
  7976  0C5C  0ACF               	incf	writeLCD@y,f
  7977  0C5D  3044               	movlw	low (STR_6| (0+32768))
  7978  0C5E  00D0               	movwf	writeLCD@ptr
  7979  0C5F  3087               	movlw	high (STR_6| (0+32768))
  7980  0C60  00D1               	movwf	writeLCD@ptr+1
  7981  0C61  3000               	movlw	0
  7982  0C62  160A  118A  2426  120A  158A  	fcall	_writeLCD
  7983  0C67  3040               	movlw	64
  7984  0C68  1283               	bcf	3,5	;RP0=0, select bank0
  7985  0C69  1303               	bcf	3,6	;RP1=0, select bank0
  7986  0C6A  00D6               	movwf	??_logo+2
  7987  0C6B  306A               	movlw	106
  7988  0C6C  00D5               	movwf	??_logo+1
  7989  0C6D  3097               	movlw	151
  7990  0C6E  00D4               	movwf	??_logo
  7991  0C6F                     u4177:	
  7992  0C6F  0BD4               	decfsz	??_logo,f
  7993  0C70  2C6F               	goto	u4177
  7994  0C71  0BD5               	decfsz	??_logo+1,f
  7995  0C72  2C6F               	goto	u4177
  7996  0C73  0BD6               	decfsz	??_logo+2,f
  7997  0C74  2C6F               	goto	u4177
  7998  0C75  0008               	return
  7999  0C76                     __end_of_logo:	
  8000                           
  8001                           	psect	text34
  8002  12AF                     __ptext34:	
  8003 ;; *************** function _initTimer0 *****************
  8004 ;; Defined at:
  8005 ;;		line 47 in file "timer0.c"
  8006 ;; Parameters:    Size  Location     Type
  8007 ;;		None
  8008 ;; Auto vars:     Size  Location     Type
  8009 ;;		None
  8010 ;; Return value:  Size  Location     Type
  8011 ;;                  1    wreg      void 
  8012 ;; Registers used:
  8013 ;;		wreg, status,2, status,0, pclath, cstack
  8014 ;; Tracked objects:
  8015 ;;		On entry : 0/0
  8016 ;;		On exit  : 0/0
  8017 ;;		Unchanged: 0/0
  8018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8019 ;;      Params:         0       0       0       0       0
  8020 ;;      Locals:         0       0       0       0       0
  8021 ;;      Temps:          0       0       0       0       0
  8022 ;;      Totals:         0       0       0       0       0
  8023 ;;Total ram usage:        0 bytes
  8024 ;; Hardware stack levels used:    1
  8025 ;; Hardware stack levels required when called:    3
  8026 ;; This function calls:
  8027 ;;		_setT0limite
  8028 ;; This function is called by:
  8029 ;;		_main
  8030 ;; This function uses a non-reentrant model
  8031 ;;
  8032                           
  8033                           
  8034                           ;psect for function _initTimer0
  8035  12AF                     _initTimer0:	
  8036                           
  8037                           ;timer0.c: 50: INTCONbits.GIE = 0;
  8038                           
  8039                           ;incstack = 0
  8040                           ; Regs used in _initTimer0: [wreg+status,2+status,0+pclath+cstack]
  8041  12AF  138B               	bcf	11,7	;volatile
  8042                           
  8043                           ;timer0.c: 52: ANSEL = 0x00;
  8044  12B0  1683               	bsf	3,5	;RP0=1, select bank3
  8045  12B1  1703               	bsf	3,6	;RP1=1, select bank3
  8046  12B2  0188               	clrf	8	;volatile
  8047                           
  8048                           ;timer0.c: 53: TRISAbits.TRISA4 = 1;
  8049  12B3  1683               	bsf	3,5	;RP0=1, select bank1
  8050  12B4  1303               	bcf	3,6	;RP1=0, select bank1
  8051  12B5  1605               	bsf	5,4	;volatile
  8052                           
  8053                           ;timer0.c: 55: OPTION_REGbits.T0CS = 0;
  8054  12B6  1281               	bcf	1,5	;volatile
  8055                           
  8056                           ;timer0.c: 57: OPTION_REGbits.PSA = 0;
  8057  12B7  1181               	bcf	1,3	;volatile
  8058                           
  8059                           ;timer0.c: 58: OPTION_REGbits.PS2 = 1;
  8060  12B8  1501               	bsf	1,2	;volatile
  8061                           
  8062                           ;timer0.c: 59: OPTION_REGbits.PS1 = 0;
  8063  12B9  1081               	bcf	1,1	;volatile
  8064                           
  8065                           ;timer0.c: 60: OPTION_REGbits.PS0 = 0;
  8066  12BA  1001               	bcf	1,0	;volatile
  8067                           
  8068                           ;timer0.c: 62: OPTION_REGbits.T0SE = 1;
  8069  12BB  1601               	bsf	1,4	;volatile
  8070                           
  8071                           ;timer0.c: 64: TMR0 = 100;
  8072  12BC  3064               	movlw	100
  8073  12BD  1283               	bcf	3,5	;RP0=0, select bank0
  8074  12BE  1303               	bcf	3,6	;RP1=0, select bank0
  8075  12BF  0081               	movwf	1	;volatile
  8076                           
  8077                           ;timer0.c: 66: setT0limite( 700 );
  8078  12C0  30BC               	movlw	188
  8079  12C1  00C7               	movwf	setT0limite@c
  8080  12C2  3002               	movlw	2
  8081  12C3  00C8               	movwf	setT0limite@c+1
  8082  12C4  160A  118A  219A   	fcall	_setT0limite
  8083                           
  8084                           ;timer0.c: 68: INTCONbits.T0IE = 1;
  8085  12C7  168B               	bsf	11,5	;volatile
  8086                           
  8087                           ;timer0.c: 69: INTCONbits.GIE = 1;
  8088  12C8  178B               	bsf	11,7	;volatile
  8089  12C9  0008               	return
  8090  12CA                     __end_of_initTimer0:	
  8091                           
  8092                           	psect	text35
  8093  119A                     __ptext35:	
  8094 ;; *************** function _setT0limite *****************
  8095 ;; Defined at:
  8096 ;;		line 38 in file "timer0.c"
  8097 ;; Parameters:    Size  Location     Type
  8098 ;;  c               2    0[BANK0 ] int 
  8099 ;; Auto vars:     Size  Location     Type
  8100 ;;		None
  8101 ;; Return value:  Size  Location     Type
  8102 ;;                  1    wreg      void 
  8103 ;; Registers used:
  8104 ;;		wreg
  8105 ;; Tracked objects:
  8106 ;;		On entry : 0/0
  8107 ;;		On exit  : 0/0
  8108 ;;		Unchanged: 0/0
  8109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8110 ;;      Params:         0       2       0       0       0
  8111 ;;      Locals:         0       0       0       0       0
  8112 ;;      Temps:          0       0       0       0       0
  8113 ;;      Totals:         0       2       0       0       0
  8114 ;;Total ram usage:        2 bytes
  8115 ;; Hardware stack levels used:    1
  8116 ;; Hardware stack levels required when called:    2
  8117 ;; This function calls:
  8118 ;;		Nothing
  8119 ;; This function is called by:
  8120 ;;		_initTimer0
  8121 ;; This function uses a non-reentrant model
  8122 ;;
  8123                           
  8124                           
  8125                           ;psect for function _setT0limite
  8126  119A                     _setT0limite:	
  8127                           
  8128                           ;timer0.c: 40: t0final = c;
  8129                           
  8130                           ;incstack = 0
  8131                           ; Regs used in _setT0limite: [wreg]
  8132  119A  1283               	bcf	3,5	;RP0=0, select bank0
  8133  119B  1303               	bcf	3,6	;RP1=0, select bank0
  8134  119C  0848               	movf	setT0limite@c+1,w
  8135  119D  00C1               	movwf	_t0final+1
  8136  119E  0847               	movf	setT0limite@c,w
  8137  119F  00C0               	movwf	_t0final
  8138  11A0  0008               	return
  8139  11A1                     __end_of_setT0limite:	
  8140                           
  8141                           	psect	text36
  8142  04E9                     __ptext36:	
  8143 ;; *************** function _initSerial *****************
  8144 ;; Defined at:
  8145 ;;		line 11 in file "Serial.c"
  8146 ;; Parameters:    Size  Location     Type
  8147 ;;		None
  8148 ;; Auto vars:     Size  Location     Type
  8149 ;;		None
  8150 ;; Return value:  Size  Location     Type
  8151 ;;                  1    wreg      void 
  8152 ;; Registers used:
  8153 ;;		wreg, status,2, status,0, pclath, cstack
  8154 ;; Tracked objects:
  8155 ;;		On entry : 0/0
  8156 ;;		On exit  : 0/0
  8157 ;;		Unchanged: 0/0
  8158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8159 ;;      Params:         0       0       0       0       0
  8160 ;;      Locals:         0       0       0       0       0
  8161 ;;      Temps:          0       1       0       0       0
  8162 ;;      Totals:         0       1       0       0       0
  8163 ;;Total ram usage:        1 bytes
  8164 ;; Hardware stack levels used:    1
  8165 ;; Hardware stack levels required when called:    3
  8166 ;; This function calls:
  8167 ;;		_serialOut
  8168 ;; This function is called by:
  8169 ;;		_main
  8170 ;; This function uses a non-reentrant model
  8171 ;;
  8172                           
  8173                           
  8174                           ;psect for function _initSerial
  8175  04E9                     _initSerial:	
  8176                           
  8177                           ;Serial.c: 13: PORTB = 0x00;
  8178                           
  8179                           ;incstack = 0
  8180                           ; Regs used in _initSerial: [wreg+status,2+status,0+pclath+cstack]
  8181  04E9  1283               	bcf	3,5	;RP0=0, select bank0
  8182  04EA  1303               	bcf	3,6	;RP1=0, select bank0
  8183  04EB  0186               	clrf	6	;volatile
  8184                           
  8185                           ;Serial.c: 14: CCP1CON &= 0xF0;
  8186  04EC  30F0               	movlw	240
  8187  04ED  00CA               	movwf	??_initSerial
  8188  04EE  084A               	movf	??_initSerial,w
  8189  04EF  0597               	andwf	23,f	;volatile
  8190                           
  8191                           ;Serial.c: 15: ANSELH = 0x00;
  8192  04F0  1683               	bsf	3,5	;RP0=1, select bank3
  8193  04F1  1703               	bsf	3,6	;RP1=1, select bank3
  8194  04F2  0189               	clrf	9	;volatile
  8195                           
  8196                           ;Serial.c: 16: TRISB = 0b00000010;
  8197  04F3  3002               	movlw	2
  8198  04F4  1683               	bsf	3,5	;RP0=1, select bank1
  8199  04F5  1303               	bcf	3,6	;RP1=0, select bank1
  8200  04F6  0086               	movwf	6	;volatile
  8201                           
  8202                           ;Serial.c: 18: PORTBbits.RB4 = 1;
  8203  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  8204  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  8205  04F9  1606               	bsf	6,4	;volatile
  8206                           
  8207                           ;Serial.c: 19: serialOut(0x00);
  8208  04FA  3000               	movlw	0
  8209  04FB  160A  118A  2214   	fcall	_serialOut
  8210  04FE  0008               	return
  8211  04FF                     __end_of_initSerial:	
  8212                           
  8213                           	psect	text37
  8214  1214                     __ptext37:	
  8215 ;; *************** function _serialOut *****************
  8216 ;; Defined at:
  8217 ;;		line 22 in file "Serial.c"
  8218 ;; Parameters:    Size  Location     Type
  8219 ;;  d               1    wreg     unsigned char 
  8220 ;; Auto vars:     Size  Location     Type
  8221 ;;  d               1    1[BANK0 ] unsigned char 
  8222 ;;  i               1    2[BANK0 ] unsigned char 
  8223 ;; Return value:  Size  Location     Type
  8224 ;;                  1    wreg      void 
  8225 ;; Registers used:
  8226 ;;		wreg, status,2, status,0
  8227 ;; Tracked objects:
  8228 ;;		On entry : 0/0
  8229 ;;		On exit  : 0/0
  8230 ;;		Unchanged: 0/0
  8231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8232 ;;      Params:         0       0       0       0       0
  8233 ;;      Locals:         0       2       0       0       0
  8234 ;;      Temps:          0       1       0       0       0
  8235 ;;      Totals:         0       3       0       0       0
  8236 ;;Total ram usage:        3 bytes
  8237 ;; Hardware stack levels used:    1
  8238 ;; Hardware stack levels required when called:    2
  8239 ;; This function calls:
  8240 ;;		Nothing
  8241 ;; This function is called by:
  8242 ;;		_initSerial
  8243 ;;		_recebe
  8244 ;; This function uses a non-reentrant model
  8245 ;;
  8246                           
  8247                           
  8248                           ;psect for function _serialOut
  8249  1214                     _serialOut:	
  8250                           
  8251                           ;incstack = 0
  8252                           ; Regs used in _serialOut: [wreg+status,2+status,0]
  8253                           ;serialOut@d stored from wreg
  8254  1214  1283               	bcf	3,5	;RP0=0, select bank0
  8255  1215  1303               	bcf	3,6	;RP1=0, select bank0
  8256  1216  00C8               	movwf	serialOut@d
  8257                           
  8258                           ;Serial.c: 24: unsigned char i = 0x80;
  8259  1217  3080               	movlw	128
  8260  1218  00C7               	movwf	??_serialOut
  8261  1219  0847               	movf	??_serialOut,w
  8262  121A  00C9               	movwf	serialOut@i
  8263                           
  8264                           ;Serial.c: 25: PORTBbits.RB3 = 0;
  8265  121B  1186               	bcf	6,3	;volatile
  8266  121C                     l3955:	
  8267                           ;Serial.c: 26: while (i)
  8268                           
  8269  121C  0849               	movf	serialOut@i,w
  8270  121D  1903               	btfsc	3,2
  8271  121E  2A2B               	goto	l38
  8272                           
  8273                           ;Serial.c: 27: {
  8274                           ;Serial.c: 28: PORTBbits.RB2 = 0;
  8275  121F  1106               	bcf	6,2	;volatile
  8276                           
  8277                           ;Serial.c: 29: if(d & i )
  8278  1220  0848               	movf	serialOut@d,w
  8279  1221  0549               	andwf	serialOut@i,w
  8280  1222  1903               	btfsc	3,2
  8281  1223  2A26               	goto	l36
  8282                           
  8283                           ;Serial.c: 30: PORTBbits.RB0 = 1;
  8284  1224  1406               	bsf	6,0	;volatile
  8285  1225  2A27               	goto	l3951
  8286  1226                     l36:	
  8287                           
  8288                           ;Serial.c: 31: else
  8289                           ;Serial.c: 32: PORTBbits.RB0 = 0;
  8290  1226  1006               	bcf	6,0	;volatile
  8291  1227                     l3951:	
  8292                           
  8293                           ;Serial.c: 33: i >>= 1;
  8294  1227  1003               	clrc
  8295  1228  0CC9               	rrf	serialOut@i,f
  8296                           
  8297                           ;Serial.c: 34: PORTBbits.RB2 = 1;
  8298  1229  1506               	bsf	6,2	;volatile
  8299  122A  2A1C               	goto	l3955
  8300  122B                     l38:	
  8301                           
  8302                           ;Serial.c: 35: }
  8303                           ;Serial.c: 36: PORTBbits.RB3 = 1;
  8304  122B  1586               	bsf	6,3	;volatile
  8305  122C  0008               	return
  8306  122D                     __end_of_serialOut:	
  8307                           
  8308                           	psect	text38
  8309  1458                     __ptext38:	
  8310 ;; *************** function _initLCD *****************
  8311 ;; Defined at:
  8312 ;;		line 71 in file "lcd.c"
  8313 ;; Parameters:    Size  Location     Type
  8314 ;;		None
  8315 ;; Auto vars:     Size  Location     Type
  8316 ;;		None
  8317 ;; Return value:  Size  Location     Type
  8318 ;;                  1    wreg      void 
  8319 ;; Registers used:
  8320 ;;		wreg, status,2, status,0, pclath, cstack
  8321 ;; Tracked objects:
  8322 ;;		On entry : 0/0
  8323 ;;		On exit  : 0/0
  8324 ;;		Unchanged: 0/0
  8325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8326 ;;      Params:         0       0       0       0       0
  8327 ;;      Locals:         0       0       0       0       0
  8328 ;;      Temps:          0       3       0       0       0
  8329 ;;      Totals:         0       3       0       0       0
  8330 ;;Total ram usage:        3 bytes
  8331 ;; Hardware stack levels used:    1
  8332 ;; Hardware stack levels required when called:    3
  8333 ;; This function calls:
  8334 ;;		_cmdLCD
  8335 ;; This function is called by:
  8336 ;;		_main
  8337 ;; This function uses a non-reentrant model
  8338 ;;
  8339                           
  8340                           
  8341                           ;psect for function _initLCD
  8342  1458                     _initLCD:	
  8343                           
  8344                           ;lcd.c: 73: LCD.BUS = 0;
  8345                           
  8346                           ;incstack = 0
  8347                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  8348  1458  30F0               	movlw	-16
  8349  1459  1283               	bcf	3,5	;RP0=0, select bank0
  8350  145A  1303               	bcf	3,6	;RP1=0, select bank0
  8351  145B  0588               	andwf	8,f	;volatile
  8352                           
  8353                           ;lcd.c: 74: LCD.RS = 0;
  8354  145C  1208               	bcf	8,4	;volatile
  8355                           
  8356                           ;lcd.c: 75: LCD.EN = 1;
  8357  145D  1688               	bsf	8,5	;volatile
  8358                           
  8359                           ;lcd.c: 76: TRISD = 0x00;
  8360  145E  1683               	bsf	3,5	;RP0=1, select bank1
  8361  145F  1303               	bcf	3,6	;RP1=0, select bank1
  8362  1460  0188               	clrf	8	;volatile
  8363                           
  8364                           ;lcd.c: 78: _delay((unsigned long)((100)*(20000000/4000.0)));
  8365  1461  3003               	movlw	3
  8366  1462  1283               	bcf	3,5	;RP0=0, select bank0
  8367  1463  1303               	bcf	3,6	;RP1=0, select bank0
  8368  1464  00CD               	movwf	??_initLCD+2
  8369  1465  308A               	movlw	138
  8370  1466  00CC               	movwf	??_initLCD+1
  8371  1467  3055               	movlw	85
  8372  1468  00CB               	movwf	??_initLCD
  8373  1469                     u4187:	
  8374  1469  0BCB               	decfsz	??_initLCD,f
  8375  146A  2C69               	goto	u4187
  8376  146B  0BCC               	decfsz	??_initLCD+1,f
  8377  146C  2C69               	goto	u4187
  8378  146D  0BCD               	decfsz	??_initLCD+2,f
  8379  146E  2C69               	goto	u4187
  8380                           
  8381                           ;lcd.c: 79: cmdLCD ( 0x20 );
  8382  146F  3020               	movlw	32
  8383  1470  160A  118A  25C2  160A  118A  	fcall	_cmdLCD
  8384                           
  8385                           ;lcd.c: 80: cmdLCD ( 0x28 );
  8386  1475  3028               	movlw	40
  8387  1476  160A  118A  25C2  160A  118A  	fcall	_cmdLCD
  8388                           
  8389                           ;lcd.c: 81: cmdLCD ( 0x0C );
  8390  147B  300C               	movlw	12
  8391  147C  160A  118A  25C2  160A  118A  	fcall	_cmdLCD
  8392                           
  8393                           ;lcd.c: 82: cmdLCD ( 0x01 );
  8394  1481  3001               	movlw	1
  8395  1482  160A  118A  25C2  160A  118A  	fcall	_cmdLCD
  8396                           
  8397                           ;lcd.c: 83: cmdLCD ( 0x02 );
  8398  1487  3002               	movlw	2
  8399  1488  160A  118A  25C2   	fcall	_cmdLCD
  8400  148B  0008               	return
  8401  148C                     __end_of_initLCD:	
  8402                           
  8403                           	psect	text39
  8404  11B7                     __ptext39:	
  8405 ;; *************** function _initBT *****************
  8406 ;; Defined at:
  8407 ;;		line 4 in file "bds.c"
  8408 ;; Parameters:    Size  Location     Type
  8409 ;;		None
  8410 ;; Auto vars:     Size  Location     Type
  8411 ;;		None
  8412 ;; Return value:  Size  Location     Type
  8413 ;;                  1    wreg      void 
  8414 ;; Registers used:
  8415 ;;		None
  8416 ;; Tracked objects:
  8417 ;;		On entry : 0/0
  8418 ;;		On exit  : 0/0
  8419 ;;		Unchanged: 0/0
  8420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8421 ;;      Params:         0       0       0       0       0
  8422 ;;      Locals:         0       0       0       0       0
  8423 ;;      Temps:          0       0       0       0       0
  8424 ;;      Totals:         0       0       0       0       0
  8425 ;;Total ram usage:        0 bytes
  8426 ;; Hardware stack levels used:    1
  8427 ;; Hardware stack levels required when called:    2
  8428 ;; This function calls:
  8429 ;;		Nothing
  8430 ;; This function is called by:
  8431 ;;		_main
  8432 ;; This function uses a non-reentrant model
  8433 ;;
  8434                           
  8435                           
  8436                           ;psect for function _initBT
  8437  11B7                     _initBT:	
  8438                           
  8439                           ;bds.c: 7: TRISCbits.TRISC0 = 1;
  8440                           
  8441                           ;incstack = 0
  8442                           ; Regs used in _initBT: []
  8443  11B7  1683               	bsf	3,5	;RP0=1, select bank1
  8444  11B8  1303               	bcf	3,6	;RP1=0, select bank1
  8445  11B9  1407               	bsf	7,0	;volatile
  8446                           
  8447                           ;bds.c: 8: TRISCbits.TRISC1 = 1;
  8448  11BA  1487               	bsf	7,1	;volatile
  8449                           
  8450                           ;bds.c: 9: TRISCbits.TRISC2 = 1;
  8451  11BB  1507               	bsf	7,2	;volatile
  8452                           
  8453                           ;bds.c: 11: PORTCbits.RC0 = 0;
  8454  11BC  1283               	bcf	3,5	;RP0=0, select bank0
  8455  11BD  1303               	bcf	3,6	;RP1=0, select bank0
  8456  11BE  1007               	bcf	7,0	;volatile
  8457                           
  8458                           ;bds.c: 12: PORTCbits.RC1 = 0;
  8459  11BF  1087               	bcf	7,1	;volatile
  8460                           
  8461                           ;bds.c: 13: PORTCbits.RC2 = 0;
  8462  11C0  1107               	bcf	7,2	;volatile
  8463  11C1  0008               	return
  8464  11C2                     __end_of_initBT:	
  8465                           
  8466                           	psect	text40
  8467  0E2D                     __ptext40:	
  8468 ;; *************** function _easterEgg *****************
  8469 ;; Defined at:
  8470 ;;		line 179 in file "auxiliar.c"
  8471 ;; Parameters:    Size  Location     Type
  8472 ;;		None
  8473 ;; Auto vars:     Size  Location     Type
  8474 ;;		None
  8475 ;; Return value:  Size  Location     Type
  8476 ;;                  1    wreg      void 
  8477 ;; Registers used:
  8478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8479 ;; Tracked objects:
  8480 ;;		On entry : 0/0
  8481 ;;		On exit  : 0/0
  8482 ;;		Unchanged: 0/0
  8483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8484 ;;      Params:         0       0       0       0       0
  8485 ;;      Locals:         0       0       0       0       0
  8486 ;;      Temps:          0       3       0       0       0
  8487 ;;      Totals:         0       3       0       0       0
  8488 ;;Total ram usage:        3 bytes
  8489 ;; Hardware stack levels used:    1
  8490 ;; Hardware stack levels required when called:    5
  8491 ;; This function calls:
  8492 ;;		_bordaSubidaB2
  8493 ;;		_bordaSubidaB3
  8494 ;;		_cmdLCD
  8495 ;;		_writeLCD
  8496 ;; This function is called by:
  8497 ;;		_main
  8498 ;; This function uses a non-reentrant model
  8499 ;;
  8500                           
  8501                           
  8502                           ;psect for function _easterEgg
  8503  0E2D                     _easterEgg:	
  8504                           
  8505                           ;auxiliar.c: 182: cmdLCD(0x01);
  8506                           
  8507                           ;incstack = 0
  8508                           ; Regs used in _easterEgg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8509  0E2D  3001               	movlw	1
  8510  0E2E  160A  118A  25C2  120A  158A  	fcall	_cmdLCD
  8511                           
  8512                           ;auxiliar.c: 184: writeLCD(0,0,"WALLACE PIRES   ");_delay((unsigned long)((1000)*(200000
      +                          00/4000.0)));
  8513  0E33  1283               	bcf	3,5	;RP0=0, select bank0
  8514  0E34  1303               	bcf	3,6	;RP1=0, select bank0
  8515  0E35  01CF               	clrf	writeLCD@y
  8516  0E36  3066               	movlw	low (STR_66| (0+32768))
  8517  0E37  00D0               	movwf	writeLCD@ptr
  8518  0E38  3087               	movlw	high (STR_66| (0+32768))
  8519  0E39  00D1               	movwf	writeLCD@ptr+1
  8520  0E3A  3000               	movlw	0
  8521  0E3B  160A  118A  2426  120A  158A  	fcall	_writeLCD
  8522  0E40  301A               	movlw	26
  8523  0E41  1283               	bcf	3,5	;RP0=0, select bank0
  8524  0E42  1303               	bcf	3,6	;RP1=0, select bank0
  8525  0E43  00D6               	movwf	??_easterEgg+2
  8526  0E44  305E               	movlw	94
  8527  0E45  00D5               	movwf	??_easterEgg+1
  8528  0E46  306D               	movlw	109
  8529  0E47  00D4               	movwf	??_easterEgg
  8530  0E48                     u4197:	
  8531  0E48  0BD4               	decfsz	??_easterEgg,f
  8532  0E49  2E48               	goto	u4197
  8533  0E4A  0BD5               	decfsz	??_easterEgg+1,f
  8534  0E4B  2E48               	goto	u4197
  8535  0E4C  0BD6               	decfsz	??_easterEgg+2,f
  8536  0E4D  2E48               	goto	u4197
  8537  0E4E  2E4F               	nop2
  8538                           
  8539                           ;auxiliar.c: 185: writeLCD(0,1,"MATEUS PINHEIRO ");_delay((unsigned long)((1000)*(200000
      +                          00/4000.0)));
  8540  0E4F  1283               	bcf	3,5	;RP0=0, select bank0
  8541  0E50  1303               	bcf	3,6	;RP1=0, select bank0
  8542  0E51  01CF               	clrf	writeLCD@y
  8543  0E52  0ACF               	incf	writeLCD@y,f
  8544  0E53  30AA               	movlw	low (STR_67| (0+32768))
  8545  0E54  00D0               	movwf	writeLCD@ptr
  8546  0E55  3087               	movlw	high (STR_67| (0+32768))
  8547  0E56  00D1               	movwf	writeLCD@ptr+1
  8548  0E57  3000               	movlw	0
  8549  0E58  160A  118A  2426  120A  158A  	fcall	_writeLCD
  8550  0E5D  301A               	movlw	26
  8551  0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  8552  0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  8553  0E60  00D6               	movwf	??_easterEgg+2
  8554  0E61  305E               	movlw	94
  8555  0E62  00D5               	movwf	??_easterEgg+1
  8556  0E63  306D               	movlw	109
  8557  0E64  00D4               	movwf	??_easterEgg
  8558  0E65                     u4207:	
  8559  0E65  0BD4               	decfsz	??_easterEgg,f
  8560  0E66  2E65               	goto	u4207
  8561  0E67  0BD5               	decfsz	??_easterEgg+1,f
  8562  0E68  2E65               	goto	u4207
  8563  0E69  0BD6               	decfsz	??_easterEgg+2,f
  8564  0E6A  2E65               	goto	u4207
  8565  0E6B  2E6C               	nop2
  8566                           
  8567                           ;auxiliar.c: 186: writeLCD(0,0,"                ");
  8568  0E6C  1283               	bcf	3,5	;RP0=0, select bank0
  8569  0E6D  1303               	bcf	3,6	;RP1=0, select bank0
  8570  0E6E  01CF               	clrf	writeLCD@y
  8571  0E6F  3000               	movlw	low (STR_68| (0+32768))
  8572  0E70  00D0               	movwf	writeLCD@ptr
  8573  0E71  3087               	movlw	high (STR_68| (0+32768))
  8574  0E72  00D1               	movwf	writeLCD@ptr+1
  8575  0E73  3000               	movlw	0
  8576  0E74  160A  118A  2426  120A  158A  	fcall	_writeLCD
  8577                           
  8578                           ;auxiliar.c: 187: writeLCD(0,0,"GUI. RIBEIRO    ");_delay((unsigned long)((1000)*(200000
      +                          00/4000.0)));
  8579  0E79  1283               	bcf	3,5	;RP0=0, select bank0
  8580  0E7A  1303               	bcf	3,6	;RP1=0, select bank0
  8581  0E7B  01CF               	clrf	writeLCD@y
  8582  0E7C  3033               	movlw	low (STR_69| (0+32768))
  8583  0E7D  00D0               	movwf	writeLCD@ptr
  8584  0E7E  3087               	movlw	high (STR_69| (0+32768))
  8585  0E7F  00D1               	movwf	writeLCD@ptr+1
  8586  0E80  3000               	movlw	0
  8587  0E81  160A  118A  2426  120A  158A  	fcall	_writeLCD
  8588  0E86  301A               	movlw	26
  8589  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  8590  0E88  1303               	bcf	3,6	;RP1=0, select bank0
  8591  0E89  00D6               	movwf	??_easterEgg+2
  8592  0E8A  305E               	movlw	94
  8593  0E8B  00D5               	movwf	??_easterEgg+1
  8594  0E8C  306D               	movlw	109
  8595  0E8D  00D4               	movwf	??_easterEgg
  8596  0E8E                     u4217:	
  8597  0E8E  0BD4               	decfsz	??_easterEgg,f
  8598  0E8F  2E8E               	goto	u4217
  8599  0E90  0BD5               	decfsz	??_easterEgg+1,f
  8600  0E91  2E8E               	goto	u4217
  8601  0E92  0BD6               	decfsz	??_easterEgg+2,f
  8602  0E93  2E8E               	goto	u4217
  8603  0E94  2E95               	nop2
  8604                           
  8605                           ;auxiliar.c: 188: writeLCD(0,1,"                ");
  8606  0E95  1283               	bcf	3,5	;RP0=0, select bank0
  8607  0E96  1303               	bcf	3,6	;RP1=0, select bank0
  8608  0E97  01CF               	clrf	writeLCD@y
  8609  0E98  0ACF               	incf	writeLCD@y,f
  8610  0E99  3000               	movlw	low (STR_68| (0+32768))
  8611  0E9A  00D0               	movwf	writeLCD@ptr
  8612  0E9B  3087               	movlw	high (STR_68| (0+32768))
  8613  0E9C  00D1               	movwf	writeLCD@ptr+1
  8614  0E9D  3000               	movlw	0
  8615  0E9E  160A  118A  2426  120A  158A  	fcall	_writeLCD
  8616                           
  8617                           ;auxiliar.c: 189: writeLCD(0,1,"GABRIEL GENU     ");_delay((unsigned long)((1000)*(20000
      +                          000/4000.0)));
  8618  0EA3  1283               	bcf	3,5	;RP0=0, select bank0
  8619  0EA4  1303               	bcf	3,6	;RP1=0, select bank0
  8620  0EA5  01CF               	clrf	writeLCD@y
  8621  0EA6  0ACF               	incf	writeLCD@y,f
  8622  0EA7  3011               	movlw	low (STR_71| (0+32768))
  8623  0EA8  00D0               	movwf	writeLCD@ptr
  8624  0EA9  3086               	movlw	high (STR_71| (0+32768))
  8625  0EAA  00D1               	movwf	writeLCD@ptr+1
  8626  0EAB  3000               	movlw	0
  8627  0EAC  160A  118A  2426  120A  158A  	fcall	_writeLCD
  8628  0EB1  301A               	movlw	26
  8629  0EB2  1283               	bcf	3,5	;RP0=0, select bank0
  8630  0EB3  1303               	bcf	3,6	;RP1=0, select bank0
  8631  0EB4  00D6               	movwf	??_easterEgg+2
  8632  0EB5  305E               	movlw	94
  8633  0EB6  00D5               	movwf	??_easterEgg+1
  8634  0EB7  306D               	movlw	109
  8635  0EB8  00D4               	movwf	??_easterEgg
  8636  0EB9                     u4227:	
  8637  0EB9  0BD4               	decfsz	??_easterEgg,f
  8638  0EBA  2EB9               	goto	u4227
  8639  0EBB  0BD5               	decfsz	??_easterEgg+1,f
  8640  0EBC  2EB9               	goto	u4227
  8641  0EBD  0BD6               	decfsz	??_easterEgg+2,f
  8642  0EBE  2EB9               	goto	u4227
  8643  0EBF  2EC0               	nop2
  8644                           
  8645                           ;auxiliar.c: 190: writeLCD(0,0,"                ");
  8646  0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  8647  0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  8648  0EC2  01CF               	clrf	writeLCD@y
  8649  0EC3  3000               	movlw	low (STR_68| (0+32768))
  8650  0EC4  00D0               	movwf	writeLCD@ptr
  8651  0EC5  3087               	movlw	high (STR_68| (0+32768))
  8652  0EC6  00D1               	movwf	writeLCD@ptr+1
  8653  0EC7  3000               	movlw	0
  8654  0EC8  160A  118A  2426  120A  158A  	fcall	_writeLCD
  8655                           
  8656                           ;auxiliar.c: 191: writeLCD(0,0,"LINCON NOVAIS   ");_delay((unsigned long)((1000)*(200000
      +                          00/4000.0)));
  8657  0ECD  1283               	bcf	3,5	;RP0=0, select bank0
  8658  0ECE  1303               	bcf	3,6	;RP1=0, select bank0
  8659  0ECF  01CF               	clrf	writeLCD@y
  8660  0ED0  3077               	movlw	low (STR_73| (0+32768))
  8661  0ED1  00D0               	movwf	writeLCD@ptr
  8662  0ED2  3087               	movlw	high (STR_73| (0+32768))
  8663  0ED3  00D1               	movwf	writeLCD@ptr+1
  8664  0ED4  3000               	movlw	0
  8665  0ED5  160A  118A  2426  120A  158A  	fcall	_writeLCD
  8666  0EDA  301A               	movlw	26
  8667  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  8668  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  8669  0EDD  00D6               	movwf	??_easterEgg+2
  8670  0EDE  305E               	movlw	94
  8671  0EDF  00D5               	movwf	??_easterEgg+1
  8672  0EE0  306D               	movlw	109
  8673  0EE1  00D4               	movwf	??_easterEgg
  8674  0EE2                     u4237:	
  8675  0EE2  0BD4               	decfsz	??_easterEgg,f
  8676  0EE3  2EE2               	goto	u4237
  8677  0EE4  0BD5               	decfsz	??_easterEgg+1,f
  8678  0EE5  2EE2               	goto	u4237
  8679  0EE6  0BD6               	decfsz	??_easterEgg+2,f
  8680  0EE7  2EE2               	goto	u4237
  8681  0EE8  2EE9               	nop2
  8682                           
  8683                           ;auxiliar.c: 192: writeLCD(0,1,"                ");_delay((unsigned long)((300)*(2000000
      +                          0/4000.0)));
  8684  0EE9  1283               	bcf	3,5	;RP0=0, select bank0
  8685  0EEA  1303               	bcf	3,6	;RP1=0, select bank0
  8686  0EEB  01CF               	clrf	writeLCD@y
  8687  0EEC  0ACF               	incf	writeLCD@y,f
  8688  0EED  3000               	movlw	low (STR_68| (0+32768))
  8689  0EEE  00D0               	movwf	writeLCD@ptr
  8690  0EEF  3087               	movlw	high (STR_68| (0+32768))
  8691  0EF0  00D1               	movwf	writeLCD@ptr+1
  8692  0EF1  3000               	movlw	0
  8693  0EF2  160A  118A  2426  120A  158A  	fcall	_writeLCD
  8694  0EF7  3008               	movlw	8
  8695  0EF8  1283               	bcf	3,5	;RP0=0, select bank0
  8696  0EF9  1303               	bcf	3,6	;RP1=0, select bank0
  8697  0EFA  00D6               	movwf	??_easterEgg+2
  8698  0EFB  309D               	movlw	157
  8699  0EFC  00D5               	movwf	??_easterEgg+1
  8700  0EFD  3005               	movlw	5
  8701  0EFE  00D4               	movwf	??_easterEgg
  8702  0EFF                     u4247:	
  8703  0EFF  0BD4               	decfsz	??_easterEgg,f
  8704  0F00  2EFF               	goto	u4247
  8705  0F01  0BD5               	decfsz	??_easterEgg+1,f
  8706  0F02  2EFF               	goto	u4247
  8707  0F03  0BD6               	decfsz	??_easterEgg+2,f
  8708  0F04  2EFF               	goto	u4247
  8709                           
  8710                           ;auxiliar.c: 194: cmdLCD(0x01);_delay((unsigned long)((200)*(20000000/4000.0)));
  8711  0F05  3001               	movlw	1
  8712  0F06  160A  118A  25C2  120A  158A  	fcall	_cmdLCD
  8713  0F0B  3006               	movlw	6
  8714  0F0C  1283               	bcf	3,5	;RP0=0, select bank0
  8715  0F0D  1303               	bcf	3,6	;RP1=0, select bank0
  8716  0F0E  00D6               	movwf	??_easterEgg+2
  8717  0F0F  3013               	movlw	19
  8718  0F10  00D5               	movwf	??_easterEgg+1
  8719  0F11  30AD               	movlw	173
  8720  0F12  00D4               	movwf	??_easterEgg
  8721  0F13                     u4257:	
  8722  0F13  0BD4               	decfsz	??_easterEgg,f
  8723  0F14  2F13               	goto	u4257
  8724  0F15  0BD5               	decfsz	??_easterEgg+1,f
  8725  0F16  2F13               	goto	u4257
  8726  0F17  0BD6               	decfsz	??_easterEgg+2,f
  8727  0F18  2F13               	goto	u4257
  8728                           
  8729                           ;auxiliar.c: 195: writeLCD(0,0,"      ARRI      ");_delay((unsigned long)((500)*(2000000
      +                          0/4000.0)));
  8730  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  8731  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  8732  0F1B  01CF               	clrf	writeLCD@y
  8733  0F1C  3011               	movlw	low (STR_75| (0+32768))
  8734  0F1D  00D0               	movwf	writeLCD@ptr
  8735  0F1E  3087               	movlw	high (STR_75| (0+32768))
  8736  0F1F  00D1               	movwf	writeLCD@ptr+1
  8737  0F20  3000               	movlw	0
  8738  0F21  160A  118A  2426  120A  158A  	fcall	_writeLCD
  8739  0F26  300D               	movlw	13
  8740  0F27  1283               	bcf	3,5	;RP0=0, select bank0
  8741  0F28  1303               	bcf	3,6	;RP1=0, select bank0
  8742  0F29  00D6               	movwf	??_easterEgg+2
  8743  0F2A  30AF               	movlw	175
  8744  0F2B  00D5               	movwf	??_easterEgg+1
  8745  0F2C  30B5               	movlw	181
  8746  0F2D  00D4               	movwf	??_easterEgg
  8747  0F2E                     u4267:	
  8748  0F2E  0BD4               	decfsz	??_easterEgg,f
  8749  0F2F  2F2E               	goto	u4267
  8750  0F30  0BD5               	decfsz	??_easterEgg+1,f
  8751  0F31  2F2E               	goto	u4267
  8752  0F32  0BD6               	decfsz	??_easterEgg+2,f
  8753  0F33  2F2E               	goto	u4267
  8754  0F34  2F35               	nop2
  8755                           
  8756                           ;auxiliar.c: 196: writeLCD(0,1,"     EGUAAA     ");_delay((unsigned long)((2500)*(200000
      +                          00/4000.0)));
  8757  0F35  1283               	bcf	3,5	;RP0=0, select bank0
  8758  0F36  1303               	bcf	3,6	;RP1=0, select bank0
  8759  0F37  01CF               	clrf	writeLCD@y
  8760  0F38  0ACF               	incf	writeLCD@y,f
  8761  0F39  3022               	movlw	low (STR_76| (0+32768))
  8762  0F3A  00D0               	movwf	writeLCD@ptr
  8763  0F3B  3087               	movlw	high (STR_76| (0+32768))
  8764  0F3C  00D1               	movwf	writeLCD@ptr+1
  8765  0F3D  3000               	movlw	0
  8766  0F3E  160A  118A  2426  120A  158A  	fcall	_writeLCD
  8767  0F43  3040               	movlw	64
  8768  0F44  1283               	bcf	3,5	;RP0=0, select bank0
  8769  0F45  1303               	bcf	3,6	;RP1=0, select bank0
  8770  0F46  00D6               	movwf	??_easterEgg+2
  8771  0F47  306A               	movlw	106
  8772  0F48  00D5               	movwf	??_easterEgg+1
  8773  0F49  3097               	movlw	151
  8774  0F4A  00D4               	movwf	??_easterEgg
  8775  0F4B                     u4277:	
  8776  0F4B  0BD4               	decfsz	??_easterEgg,f
  8777  0F4C  2F4B               	goto	u4277
  8778  0F4D  0BD5               	decfsz	??_easterEgg+1,f
  8779  0F4E  2F4B               	goto	u4277
  8780  0F4F  0BD6               	decfsz	??_easterEgg+2,f
  8781  0F50  2F4B               	goto	u4277
  8782                           
  8783                           ;auxiliar.c: 197: cmdLCD(0x01);_delay((unsigned long)((200)*(20000000/4000.0)));
  8784  0F51  3001               	movlw	1
  8785  0F52  160A  118A  25C2  120A  158A  	fcall	_cmdLCD
  8786  0F57  3006               	movlw	6
  8787  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  8788  0F59  1303               	bcf	3,6	;RP1=0, select bank0
  8789  0F5A  00D6               	movwf	??_easterEgg+2
  8790  0F5B  3013               	movlw	19
  8791  0F5C  00D5               	movwf	??_easterEgg+1
  8792  0F5D  30AD               	movlw	173
  8793  0F5E  00D4               	movwf	??_easterEgg
  8794  0F5F                     u4287:	
  8795  0F5F  0BD4               	decfsz	??_easterEgg,f
  8796  0F60  2F5F               	goto	u4287
  8797  0F61  0BD5               	decfsz	??_easterEgg+1,f
  8798  0F62  2F5F               	goto	u4287
  8799  0F63  0BD6               	decfsz	??_easterEgg+2,f
  8800  0F64  2F5F               	goto	u4287
  8801                           
  8802                           ;auxiliar.c: 198: writeLCD(0,0,"XD *-*ARRI*-* XD");
  8803  0F65  1283               	bcf	3,5	;RP0=0, select bank0
  8804  0F66  1303               	bcf	3,6	;RP1=0, select bank0
  8805  0F67  01CF               	clrf	writeLCD@y
  8806  0F68  3010               	movlw	low (STR_77| (0+32768))
  8807  0F69  00D0               	movwf	writeLCD@ptr
  8808  0F6A  3088               	movlw	high (STR_77| (0+32768))
  8809  0F6B  00D1               	movwf	writeLCD@ptr+1
  8810  0F6C  3000               	movlw	0
  8811  0F6D  160A  118A  2426  120A  158A  	fcall	_writeLCD
  8812                           
  8813                           ;auxiliar.c: 199: writeLCD(0,1,"!*-* EGUAAA *-*!");_delay((unsigned long)((1000)*(200000
      +                          00/4000.0)));
  8814  0F72  1283               	bcf	3,5	;RP0=0, select bank0
  8815  0F73  1303               	bcf	3,6	;RP1=0, select bank0
  8816  0F74  01CF               	clrf	writeLCD@y
  8817  0F75  0ACF               	incf	writeLCD@y,f
  8818  0F76  30CC               	movlw	low (STR_78| (0+32768))
  8819  0F77  00D0               	movwf	writeLCD@ptr
  8820  0F78  3087               	movlw	high (STR_78| (0+32768))
  8821  0F79  00D1               	movwf	writeLCD@ptr+1
  8822  0F7A  3000               	movlw	0
  8823  0F7B  160A  118A  2426  120A  158A  	fcall	_writeLCD
  8824  0F80  301A               	movlw	26
  8825  0F81  1283               	bcf	3,5	;RP0=0, select bank0
  8826  0F82  1303               	bcf	3,6	;RP1=0, select bank0
  8827  0F83  00D6               	movwf	??_easterEgg+2
  8828  0F84  305E               	movlw	94
  8829  0F85  00D5               	movwf	??_easterEgg+1
  8830  0F86  306D               	movlw	109
  8831  0F87  00D4               	movwf	??_easterEgg
  8832  0F88                     u4297:	
  8833  0F88  0BD4               	decfsz	??_easterEgg,f
  8834  0F89  2F88               	goto	u4297
  8835  0F8A  0BD5               	decfsz	??_easterEgg+1,f
  8836  0F8B  2F88               	goto	u4297
  8837  0F8C  0BD6               	decfsz	??_easterEgg+2,f
  8838  0F8D  2F88               	goto	u4297
  8839  0F8E  2F8F               	nop2
  8840                           
  8841                           ;auxiliar.c: 200: writeLCD(0,0,"50    ARRI    13");
  8842  0F8F  1283               	bcf	3,5	;RP0=0, select bank0
  8843  0F90  1303               	bcf	3,6	;RP1=0, select bank0
  8844  0F91  01CF               	clrf	writeLCD@y
  8845  0F92  30EE               	movlw	low (STR_79| (0+32768))
  8846  0F93  00D0               	movwf	writeLCD@ptr
  8847  0F94  3087               	movlw	high (STR_79| (0+32768))
  8848  0F95  00D1               	movwf	writeLCD@ptr+1
  8849  0F96  3000               	movlw	0
  8850  0F97  160A  118A  2426  120A  158A  	fcall	_writeLCD
  8851                           
  8852                           ;auxiliar.c: 201: writeLCD(0,1,"13   EGUAAA   50");_delay((unsigned long)((700)*(2000000
      +                          0/4000.0)));
  8853  0F9C  1283               	bcf	3,5	;RP0=0, select bank0
  8854  0F9D  1303               	bcf	3,6	;RP1=0, select bank0
  8855  0F9E  01CF               	clrf	writeLCD@y
  8856  0F9F  0ACF               	incf	writeLCD@y,f
  8857  0FA0  30DD               	movlw	low (STR_80| (0+32768))
  8858  0FA1  00D0               	movwf	writeLCD@ptr
  8859  0FA2  3087               	movlw	high (STR_80| (0+32768))
  8860  0FA3  00D1               	movwf	writeLCD@ptr+1
  8861  0FA4  3000               	movlw	0
  8862  0FA5  160A  118A  2426  120A  158A  	fcall	_writeLCD
  8863  0FAA  3012               	movlw	18
  8864  0FAB  1283               	bcf	3,5	;RP0=0, select bank0
  8865  0FAC  1303               	bcf	3,6	;RP1=0, select bank0
  8866  0FAD  00D6               	movwf	??_easterEgg+2
  8867  0FAE  30C2               	movlw	194
  8868  0FAF  00D5               	movwf	??_easterEgg+1
  8869  0FB0  3065               	movlw	101
  8870  0FB1  00D4               	movwf	??_easterEgg
  8871  0FB2                     u4307:	
  8872  0FB2  0BD4               	decfsz	??_easterEgg,f
  8873  0FB3  2FB2               	goto	u4307
  8874  0FB4  0BD5               	decfsz	??_easterEgg+1,f
  8875  0FB5  2FB2               	goto	u4307
  8876  0FB6  0BD6               	decfsz	??_easterEgg+2,f
  8877  0FB7  2FB2               	goto	u4307
  8878  0FB8  2FB9               	nop2
  8879                           
  8880                           ;auxiliar.c: 202: writeLCD(0,0,":3 *-*ARRI*-* XD");
  8881  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  8882  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  8883  0FBB  01CF               	clrf	writeLCD@y
  8884  0FBC  30FF               	movlw	low (STR_81| (0+32768))
  8885  0FBD  00D0               	movwf	writeLCD@ptr
  8886  0FBE  3087               	movlw	high (STR_81| (0+32768))
  8887  0FBF  00D1               	movwf	writeLCD@ptr+1
  8888  0FC0  3000               	movlw	0
  8889  0FC1  160A  118A  2426  120A  158A  	fcall	_writeLCD
  8890                           
  8891                           ;auxiliar.c: 203: writeLCD(0,1,"!*-* EGUAAA *-*!");_delay((unsigned long)((1000)*(200000
      +                          00/4000.0)));
  8892  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  8893  0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  8894  0FC8  01CF               	clrf	writeLCD@y
  8895  0FC9  0ACF               	incf	writeLCD@y,f
  8896  0FCA  30CC               	movlw	low (STR_78| (0+32768))
  8897  0FCB  00D0               	movwf	writeLCD@ptr
  8898  0FCC  3087               	movlw	high (STR_78| (0+32768))
  8899  0FCD  00D1               	movwf	writeLCD@ptr+1
  8900  0FCE  3000               	movlw	0
  8901  0FCF  160A  118A  2426  120A  158A  	fcall	_writeLCD
  8902  0FD4  301A               	movlw	26
  8903  0FD5  1283               	bcf	3,5	;RP0=0, select bank0
  8904  0FD6  1303               	bcf	3,6	;RP1=0, select bank0
  8905  0FD7  00D6               	movwf	??_easterEgg+2
  8906  0FD8  305E               	movlw	94
  8907  0FD9  00D5               	movwf	??_easterEgg+1
  8908  0FDA  306D               	movlw	109
  8909  0FDB  00D4               	movwf	??_easterEgg
  8910  0FDC                     u4317:	
  8911  0FDC  0BD4               	decfsz	??_easterEgg,f
  8912  0FDD  2FDC               	goto	u4317
  8913  0FDE  0BD5               	decfsz	??_easterEgg+1,f
  8914  0FDF  2FDC               	goto	u4317
  8915  0FE0  0BD6               	decfsz	??_easterEgg+2,f
  8916  0FE1  2FDC               	goto	u4317
  8917  0FE2  2FE3               	nop2
  8918                           
  8919                           ;auxiliar.c: 204: cmdLCD(0x01);_delay((unsigned long)((200)*(20000000/4000.0)));
  8920  0FE3  3001               	movlw	1
  8921  0FE4  160A  118A  25C2  120A  158A  	fcall	_cmdLCD
  8922  0FE9  3006               	movlw	6
  8923  0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  8924  0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  8925  0FEC  00D6               	movwf	??_easterEgg+2
  8926  0FED  3013               	movlw	19
  8927  0FEE  00D5               	movwf	??_easterEgg+1
  8928  0FEF  30AD               	movlw	173
  8929  0FF0  00D4               	movwf	??_easterEgg
  8930  0FF1                     u4327:	
  8931  0FF1  0BD4               	decfsz	??_easterEgg,f
  8932  0FF2  2FF1               	goto	u4327
  8933  0FF3  0BD5               	decfsz	??_easterEgg+1,f
  8934  0FF4  2FF1               	goto	u4327
  8935  0FF5  0BD6               	decfsz	??_easterEgg+2,f
  8936  0FF6  2FF1               	goto	u4327
  8937                           
  8938                           ;auxiliar.c: 206: bordaSubidaB2();
  8939  0FF7  160A  118A  2260  120A  158A  	fcall	_bordaSubidaB2
  8940                           
  8941                           ;auxiliar.c: 207: bordaSubidaB3();
  8942  0FFC  160A  118A  227A   	fcall	_bordaSubidaB3
  8943  0FFF  0008               	return
  8944  1000                     __end_of_easterEgg:	
  8945                           
  8946                           	psect	text41
  8947  1426                     __ptext41:	
  8948 ;; *************** function _writeLCD *****************
  8949 ;; Defined at:
  8950 ;;		line 64 in file "lcd.c"
  8951 ;; Parameters:    Size  Location     Type
  8952 ;;  x               1    wreg     unsigned char 
  8953 ;;  y               1    8[BANK0 ] unsigned char 
  8954 ;;  ptr             2    9[BANK0 ] PTR const unsigned char 
  8955 ;;		 -> STR_130(11), STR_129(11), STR_128(11), STR_127(11), 
  8956 ;;		 -> STR_126(11), STR_125(11), STR_124(11), STR_123(11), 
  8957 ;;		 -> STR_122(17), STR_121(17), STR_120(17), STR_119(17), 
  8958 ;;		 -> STR_118(17), STR_117(17), STR_116(17), STR_115(17), 
  8959 ;;		 -> STR_114(17), STR_113(17), STR_112(9), STR_111(11), 
  8960 ;;		 -> STR_110(13), STR_109(11), STR_108(17), STR_107(17), 
  8961 ;;		 -> STR_82(17), STR_81(17), STR_80(17), STR_79(17), 
  8962 ;;		 -> STR_78(17), STR_77(17), STR_76(17), STR_75(17), 
  8963 ;;		 -> STR_74(17), STR_73(17), STR_72(17), STR_71(18), 
  8964 ;;		 -> STR_70(17), STR_69(17), STR_68(17), STR_67(17), 
  8965 ;;		 -> STR_66(17), STR_65(4), STR_64(4), STR_63(4), 
  8966 ;;		 -> STR_62(4), STR_61(4), STR_60(4), STR_59(4), 
  8967 ;;		 -> STR_58(4), STR_57(4), STR_56(4), STR_55(4), 
  8968 ;;		 -> STR_54(8), STR_53(1), STR_52(4), STR_51(7), 
  8969 ;;		 -> STR_50(4), STR_49(4), STR_48(8), STR_47(8), 
  8970 ;;		 -> STR_46(8), STR_45(4), STR_44(2), STR_43(2), 
  8971 ;;		 -> STR_42(2), STR_41(2), STR_40(2), STR_39(2), 
  8972 ;;		 -> STR_38(2), STR_37(2), STR_36(2), STR_35(2), 
  8973 ;;		 -> STR_34(2), STR_33(2), STR_32(2), STR_31(2), 
  8974 ;;		 -> STR_30(2), STR_29(2), STR_28(2), STR_27(2), 
  8975 ;;		 -> STR_26(2), STR_25(2), STR_24(2), STR_23(2), 
  8976 ;;		 -> STR_22(2), STR_21(2), STR_20(2), STR_19(2), 
  8977 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  8978 ;;		 -> STR_14(2), STR_13(2), STR_12(17), STR_11(17), 
  8979 ;;		 -> STR_10(17), STR_9(17), STR_8(17), STR_7(17), 
  8980 ;;		 -> STR_6(17), STR_5(2), STR_4(2), STR_3(2), 
  8981 ;;		 -> STR_2(2), STR_1(17), 
  8982 ;; Auto vars:     Size  Location     Type
  8983 ;;  x               1   12[BANK0 ] unsigned char 
  8984 ;; Return value:  Size  Location     Type
  8985 ;;                  1    wreg      void 
  8986 ;; Registers used:
  8987 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8988 ;; Tracked objects:
  8989 ;;		On entry : 0/0
  8990 ;;		On exit  : 0/0
  8991 ;;		Unchanged: 0/0
  8992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8993 ;;      Params:         0       3       0       0       0
  8994 ;;      Locals:         0       1       0       0       0
  8995 ;;      Temps:          0       1       0       0       0
  8996 ;;      Totals:         0       5       0       0       0
  8997 ;;Total ram usage:        5 bytes
  8998 ;; Hardware stack levels used:    1
  8999 ;; Hardware stack levels required when called:    4
  9000 ;; This function calls:
  9001 ;;		_gotoxy
  9002 ;;		_putLCD
  9003 ;; This function is called by:
  9004 ;;		_logo
  9005 ;;		_textConfig
  9006 ;;		_textCMpar
  9007 ;;		_textCMdat
  9008 ;;		_textSelection1
  9009 ;;		_textSelection2
  9010 ;;		_textSelection3
  9011 ;;		_textSelection4
  9012 ;;		_textSelection5
  9013 ;;		_textSelection6
  9014 ;;		_textSelection7
  9015 ;;		_textSelection8
  9016 ;;		_textSelectionEST
  9017 ;;		_textSelectionCLP
  9018 ;;		_textLoading
  9019 ;;		_easterEgg
  9020 ;;		_main
  9021 ;;		_textSelectionPAR
  9022 ;;		_textSelectionDES
  9023 ;; This function uses a non-reentrant model
  9024 ;;
  9025                           
  9026                           
  9027                           ;psect for function _writeLCD
  9028  1426                     _writeLCD:	
  9029                           
  9030                           ;incstack = 0
  9031                           ; Regs used in _writeLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9032                           ;writeLCD@x stored from wreg
  9033  1426  1283               	bcf	3,5	;RP0=0, select bank0
  9034  1427  1303               	bcf	3,6	;RP1=0, select bank0
  9035  1428  00D3               	movwf	writeLCD@x
  9036                           
  9037                           ;lcd.c: 66: gotoxy(x,y);
  9038  1429  084F               	movf	writeLCD@y,w
  9039  142A  00D2               	movwf	??_writeLCD
  9040  142B  0852               	movf	??_writeLCD,w
  9041  142C  00CB               	movwf	gotoxy@y
  9042  142D  0853               	movf	writeLCD@x,w
  9043  142E  160A  118A  21FC  160A  118A  	fcall	_gotoxy
  9044  1433                     l4027:	
  9045                           ;lcd.c: 67: while( *ptr )
  9046                           
  9047  1433  1283               	bcf	3,5	;RP0=0, select bank0
  9048  1434  1303               	bcf	3,6	;RP1=0, select bank0
  9049  1435  0851               	movf	writeLCD@ptr+1,w
  9050  1436  00FF               	movwf	127
  9051  1437  0850               	movf	writeLCD@ptr,w
  9052  1438  0084               	movwf	4
  9053  1439  160A  118A  2000  160A  118A  	fcall	stringtab
  9054  143E  3A00               	xorlw	0
  9055  143F  1903               	btfsc	3,2
  9056  1440  0008               	return
  9057                           
  9058                           ;lcd.c: 68: putLCD(*ptr++);
  9059  1441  1283               	bcf	3,5	;RP0=0, select bank0
  9060  1442  1303               	bcf	3,6	;RP1=0, select bank0
  9061  1443  0851               	movf	writeLCD@ptr+1,w
  9062  1444  00FF               	movwf	127
  9063  1445  0850               	movf	writeLCD@ptr,w
  9064  1446  0084               	movwf	4
  9065  1447  160A  118A  2000  160A  118A  	fcall	stringtab
  9066  144C  160A  118A  23F6  160A  118A  	fcall	_putLCD
  9067  1451  3001               	movlw	1
  9068  1452  1283               	bcf	3,5	;RP0=0, select bank0
  9069  1453  1303               	bcf	3,6	;RP1=0, select bank0
  9070  1454  07D0               	addwf	writeLCD@ptr,f
  9071  1455  1803               	skipnc
  9072  1456  0AD1               	incf	writeLCD@ptr+1,f
  9073  1457  2C33               	goto	l4027
  9074  1458                     __end_of_writeLCD:	
  9075                           
  9076                           	psect	text42
  9077  13F6                     __ptext42:	
  9078 ;; *************** function _putLCD *****************
  9079 ;; Defined at:
  9080 ;;		line 39 in file "lcd.c"
  9081 ;; Parameters:    Size  Location     Type
  9082 ;;  c               1    wreg     unsigned char 
  9083 ;; Auto vars:     Size  Location     Type
  9084 ;;  c               1    1[BANK0 ] unsigned char 
  9085 ;;  nibble          1    2[BANK0 ] volatile struct .
  9086 ;; Return value:  Size  Location     Type
  9087 ;;                  1    wreg      void 
  9088 ;; Registers used:
  9089 ;;		wreg, status,2, status,0
  9090 ;; Tracked objects:
  9091 ;;		On entry : 0/0
  9092 ;;		On exit  : 0/0
  9093 ;;		Unchanged: 0/0
  9094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9095 ;;      Params:         0       0       0       0       0
  9096 ;;      Locals:         0       2       0       0       0
  9097 ;;      Temps:          0       1       0       0       0
  9098 ;;      Totals:         0       3       0       0       0
  9099 ;;Total ram usage:        3 bytes
  9100 ;; Hardware stack levels used:    1
  9101 ;; Hardware stack levels required when called:    2
  9102 ;; This function calls:
  9103 ;;		Nothing
  9104 ;; This function is called by:
  9105 ;;		_writeLCD
  9106 ;; This function uses a non-reentrant model
  9107 ;;
  9108                           
  9109                           
  9110                           ;psect for function _putLCD
  9111  13F6                     _putLCD:	
  9112                           
  9113                           ;incstack = 0
  9114                           ; Regs used in _putLCD: [wreg+status,2+status,0]
  9115                           ;putLCD@c stored from wreg
  9116  13F6  1283               	bcf	3,5	;RP0=0, select bank0
  9117  13F7  1303               	bcf	3,6	;RP1=0, select bank0
  9118  13F8  00C8               	movwf	putLCD@c
  9119                           
  9120                           ;lcd.c: 41: volatile REGnibble_t nibble;
  9121                           ;lcd.c: 42: nibble.HILO = c;
  9122  13F9  0848               	movf	putLCD@c,w
  9123  13FA  00C7               	movwf	??_putLCD
  9124  13FB  0847               	movf	??_putLCD,w
  9125  13FC  00C9               	movwf	putLCD@nibble	;volatile
  9126                           
  9127                           ;lcd.c: 44: LCD.RS = 1;
  9128  13FD  1608               	bsf	8,4	;volatile
  9129                           
  9130                           ;lcd.c: 45: LCD.BUS = nibble.HI;
  9131  13FE  0E49               	swapf	putLCD@nibble,w	;volatile
  9132  13FF  390F               	andlw	15
  9133  1400  00C7               	movwf	??_putLCD
  9134  1401  0808               	movf	8,w	;volatile
  9135  1402  0647               	xorwf	??_putLCD,w
  9136  1403  39F0               	andlw	-16
  9137  1404  0647               	xorwf	??_putLCD,w
  9138  1405  0088               	movwf	8	;volatile
  9139                           
  9140                           ;lcd.c: 46: LCD.EN = 0;
  9141  1406  1288               	bcf	8,5	;volatile
  9142                           
  9143                           ;lcd.c: 47: _delay((unsigned long)((40)*(20000000/4000000.0)));
  9144  1407  3041               	movlw	65
  9145  1408  1283               	bcf	3,5	;RP0=0, select bank0
  9146  1409  1303               	bcf	3,6	;RP1=0, select bank0
  9147  140A  00C7               	movwf	??_putLCD
  9148  140B                     u4337:	
  9149  140B  0BC7               	decfsz	??_putLCD,f
  9150  140C  2C0B               	goto	u4337
  9151  140D  2C0E               	nop2
  9152                           
  9153                           ;lcd.c: 48: LCD.EN = 1;
  9154  140E  1283               	bcf	3,5	;RP0=0, select bank0
  9155  140F  1303               	bcf	3,6	;RP1=0, select bank0
  9156  1410  1688               	bsf	8,5	;volatile
  9157                           
  9158                           ;lcd.c: 51: LCD.RS = 1;
  9159  1411  1608               	bsf	8,4	;volatile
  9160                           
  9161                           ;lcd.c: 52: LCD.BUS = nibble.LO;
  9162  1412  0849               	movf	putLCD@nibble,w	;volatile
  9163  1413  390F               	andlw	15
  9164  1414  00C7               	movwf	??_putLCD
  9165  1415  0808               	movf	8,w	;volatile
  9166  1416  0647               	xorwf	??_putLCD,w
  9167  1417  39F0               	andlw	-16
  9168  1418  0647               	xorwf	??_putLCD,w
  9169  1419  0088               	movwf	8	;volatile
  9170                           
  9171                           ;lcd.c: 53: LCD.EN = 0;
  9172  141A  1288               	bcf	8,5	;volatile
  9173                           
  9174                           ;lcd.c: 54: _delay((unsigned long)((40)*(20000000/4000000.0)));
  9175  141B  3041               	movlw	65
  9176  141C  1283               	bcf	3,5	;RP0=0, select bank0
  9177  141D  1303               	bcf	3,6	;RP1=0, select bank0
  9178  141E  00C7               	movwf	??_putLCD
  9179  141F                     u4347:	
  9180  141F  0BC7               	decfsz	??_putLCD,f
  9181  1420  2C1F               	goto	u4347
  9182  1421  2C22               	nop2
  9183                           
  9184                           ;lcd.c: 55: LCD.EN = 1;
  9185  1422  1283               	bcf	3,5	;RP0=0, select bank0
  9186  1423  1303               	bcf	3,6	;RP1=0, select bank0
  9187  1424  1688               	bsf	8,5	;volatile
  9188  1425  0008               	return
  9189  1426                     __end_of_putLCD:	
  9190                           
  9191                           	psect	text43
  9192  11FC                     __ptext43:	
  9193 ;; *************** function _gotoxy *****************
  9194 ;; Defined at:
  9195 ;;		line 59 in file "lcd.c"
  9196 ;; Parameters:    Size  Location     Type
  9197 ;;  x               1    wreg     unsigned char 
  9198 ;;  y               1    4[BANK0 ] unsigned char 
  9199 ;; Auto vars:     Size  Location     Type
  9200 ;;  x               1    7[BANK0 ] unsigned char 
  9201 ;; Return value:  Size  Location     Type
  9202 ;;                  1    wreg      void 
  9203 ;; Registers used:
  9204 ;;		wreg, status,2, status,0, pclath, cstack
  9205 ;; Tracked objects:
  9206 ;;		On entry : 0/0
  9207 ;;		On exit  : 0/0
  9208 ;;		Unchanged: 0/0
  9209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9210 ;;      Params:         0       1       0       0       0
  9211 ;;      Locals:         0       1       0       0       0
  9212 ;;      Temps:          0       2       0       0       0
  9213 ;;      Totals:         0       4       0       0       0
  9214 ;;Total ram usage:        4 bytes
  9215 ;; Hardware stack levels used:    1
  9216 ;; Hardware stack levels required when called:    3
  9217 ;; This function calls:
  9218 ;;		___bmul
  9219 ;;		_cmdLCD
  9220 ;; This function is called by:
  9221 ;;		_writeLCD
  9222 ;; This function uses a non-reentrant model
  9223 ;;
  9224                           
  9225                           
  9226                           ;psect for function _gotoxy
  9227  11FC                     _gotoxy:	
  9228                           
  9229                           ;incstack = 0
  9230                           ; Regs used in _gotoxy: [wreg+status,2+status,0+pclath+cstack]
  9231                           ;gotoxy@x stored from wreg
  9232  11FC  1283               	bcf	3,5	;RP0=0, select bank0
  9233  11FD  1303               	bcf	3,6	;RP1=0, select bank0
  9234  11FE  00CE               	movwf	gotoxy@x
  9235                           
  9236                           ;lcd.c: 61: cmdLCD (( 0x80 | (0xC0 * y ) + ( x & 0x3f )));
  9237  11FF  303F               	movlw	63
  9238  1200  054E               	andwf	gotoxy@x,w
  9239  1201  00CC               	movwf	??_gotoxy
  9240  1202  30C0               	movlw	192
  9241  1203  00CD               	movwf	??_gotoxy+1
  9242  1204  084D               	movf	??_gotoxy+1,w
  9243  1205  00C7               	movwf	___bmul@multiplicand
  9244  1206  084B               	movf	gotoxy@y,w
  9245  1207  160A  118A  21D3  160A  118A  	fcall	___bmul
  9246  120C  1283               	bcf	3,5	;RP0=0, select bank0
  9247  120D  1303               	bcf	3,6	;RP1=0, select bank0
  9248  120E  074C               	addwf	??_gotoxy,w
  9249  120F  3880               	iorlw	128
  9250  1210  160A  118A  25C2   	fcall	_cmdLCD
  9251  1213  0008               	return
  9252  1214                     __end_of_gotoxy:	
  9253                           
  9254                           	psect	text44
  9255  15C2                     __ptext44:	
  9256 ;; *************** function _cmdLCD *****************
  9257 ;; Defined at:
  9258 ;;		line 7 in file "lcd.c"
  9259 ;; Parameters:    Size  Location     Type
  9260 ;;  cmd             1    wreg     unsigned char 
  9261 ;; Auto vars:     Size  Location     Type
  9262 ;;  cmd             1    2[BANK0 ] unsigned char 
  9263 ;;  nibble          1    3[BANK0 ] volatile struct .
  9264 ;; Return value:  Size  Location     Type
  9265 ;;                  1    wreg      void 
  9266 ;; Registers used:
  9267 ;;		wreg, status,2, status,0
  9268 ;; Tracked objects:
  9269 ;;		On entry : 0/0
  9270 ;;		On exit  : 0/0
  9271 ;;		Unchanged: 0/0
  9272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9273 ;;      Params:         0       0       0       0       0
  9274 ;;      Locals:         0       2       0       0       0
  9275 ;;      Temps:          0       2       0       0       0
  9276 ;;      Totals:         0       4       0       0       0
  9277 ;;Total ram usage:        4 bytes
  9278 ;; Hardware stack levels used:    1
  9279 ;; Hardware stack levels required when called:    2
  9280 ;; This function calls:
  9281 ;;		Nothing
  9282 ;; This function is called by:
  9283 ;;		_logo
  9284 ;;		_textConfig
  9285 ;;		_textCMpar
  9286 ;;		_textCMdat
  9287 ;;		_easterEgg
  9288 ;;		_gotoxy
  9289 ;;		_initLCD
  9290 ;;		_main
  9291 ;; This function uses a non-reentrant model
  9292 ;;
  9293                           
  9294                           
  9295                           ;psect for function _cmdLCD
  9296  15C2                     _cmdLCD:	
  9297                           
  9298                           ;incstack = 0
  9299                           ; Regs used in _cmdLCD: [wreg+status,2+status,0]
  9300                           ;cmdLCD@cmd stored from wreg
  9301  15C2  1283               	bcf	3,5	;RP0=0, select bank0
  9302  15C3  1303               	bcf	3,6	;RP1=0, select bank0
  9303  15C4  00C9               	movwf	cmdLCD@cmd
  9304                           
  9305                           ;lcd.c: 9: volatile REGnibble_t nibble;
  9306                           ;lcd.c: 11: nibble.HILO = cmd;
  9307  15C5  0849               	movf	cmdLCD@cmd,w
  9308  15C6  00C7               	movwf	??_cmdLCD
  9309  15C7  0847               	movf	??_cmdLCD,w
  9310  15C8  00CA               	movwf	cmdLCD@nibble	;volatile
  9311                           
  9312                           ;lcd.c: 12: LCD.RS = 0;
  9313  15C9  1208               	bcf	8,4	;volatile
  9314                           
  9315                           ;lcd.c: 13: LCD.BUS = nibble.HI;
  9316  15CA  0E4A               	swapf	cmdLCD@nibble,w	;volatile
  9317  15CB  390F               	andlw	15
  9318  15CC  00C7               	movwf	??_cmdLCD
  9319  15CD  0808               	movf	8,w	;volatile
  9320  15CE  0647               	xorwf	??_cmdLCD,w
  9321  15CF  39F0               	andlw	-16
  9322  15D0  0647               	xorwf	??_cmdLCD,w
  9323  15D1  0088               	movwf	8	;volatile
  9324                           
  9325                           ;lcd.c: 14: LCD.EN = 0;
  9326  15D2  1288               	bcf	8,5	;volatile
  9327                           
  9328                           ;lcd.c: 16: if ( cmd == 0x01 || cmd == 0x02 )
  9329  15D3  0349               	decf	cmdLCD@cmd,w
  9330  15D4  1903               	btfsc	3,2
  9331  15D5  2DDA               	goto	l3831
  9332  15D6  3002               	movlw	2
  9333  15D7  0649               	xorwf	cmdLCD@cmd,w
  9334  15D8  1D03               	btfss	3,2
  9335  15D9  2DE6               	goto	l3833
  9336  15DA                     l3831:	
  9337                           
  9338                           ;lcd.c: 17: _delay((unsigned long)((5)*(20000000/4000.0)));
  9339  15DA  3021               	movlw	33
  9340  15DB  1283               	bcf	3,5	;RP0=0, select bank0
  9341  15DC  1303               	bcf	3,6	;RP1=0, select bank0
  9342  15DD  00C8               	movwf	??_cmdLCD+1
  9343  15DE  3075               	movlw	117
  9344  15DF  00C7               	movwf	??_cmdLCD
  9345  15E0                     u4357:	
  9346  15E0  0BC7               	decfsz	??_cmdLCD,f
  9347  15E1  2DE0               	goto	u4357
  9348  15E2  0BC8               	decfsz	??_cmdLCD+1,f
  9349  15E3  2DE0               	goto	u4357
  9350  15E4  2DE5               	nop2
  9351  15E5  2DED               	goto	l3835
  9352  15E6                     l3833:	
  9353                           
  9354                           ;lcd.c: 18: else
  9355                           ;lcd.c: 19: _delay((unsigned long)((40)*(20000000/4000000.0)));
  9356  15E6  3041               	movlw	65
  9357  15E7  1283               	bcf	3,5	;RP0=0, select bank0
  9358  15E8  1303               	bcf	3,6	;RP1=0, select bank0
  9359  15E9  00C7               	movwf	??_cmdLCD
  9360  15EA                     u4367:	
  9361  15EA  0BC7               	decfsz	??_cmdLCD,f
  9362  15EB  2DEA               	goto	u4367
  9363  15EC  2DED               	nop2
  9364  15ED                     l3835:	
  9365                           
  9366                           ;lcd.c: 21: LCD.EN = 1;
  9367  15ED  1283               	bcf	3,5	;RP0=0, select bank0
  9368  15EE  1303               	bcf	3,6	;RP1=0, select bank0
  9369  15EF  1688               	bsf	8,5	;volatile
  9370                           
  9371                           ;lcd.c: 24: if ( cmd != (0x20) )
  9372  15F0  3020               	movlw	32
  9373  15F1  0649               	xorwf	cmdLCD@cmd,w
  9374  15F2  1903               	btfsc	3,2
  9375  15F3  0008               	return
  9376                           
  9377                           ;lcd.c: 25: {
  9378                           ;lcd.c: 26: LCD.RS = 0;
  9379  15F4  1208               	bcf	8,4	;volatile
  9380                           
  9381                           ;lcd.c: 27: LCD.BUS = nibble.LO;
  9382  15F5  084A               	movf	cmdLCD@nibble,w	;volatile
  9383  15F6  390F               	andlw	15
  9384  15F7  00C7               	movwf	??_cmdLCD
  9385  15F8  0808               	movf	8,w	;volatile
  9386  15F9  0647               	xorwf	??_cmdLCD,w
  9387  15FA  39F0               	andlw	-16
  9388  15FB  0647               	xorwf	??_cmdLCD,w
  9389  15FC  0088               	movwf	8	;volatile
  9390                           
  9391                           ;lcd.c: 28: LCD.EN = 0;
  9392  15FD  1288               	bcf	8,5	;volatile
  9393                           
  9394                           ;lcd.c: 30: if ( cmd == 0x01 || cmd == 0x02 )
  9395  15FE  0349               	decf	cmdLCD@cmd,w
  9396  15FF  1903               	btfsc	3,2
  9397  1600  2E05               	goto	l3847
  9398  1601  3002               	movlw	2
  9399  1602  0649               	xorwf	cmdLCD@cmd,w
  9400  1603  1D03               	btfss	3,2
  9401  1604  2E11               	goto	l3849
  9402  1605                     l3847:	
  9403                           
  9404                           ;lcd.c: 31: _delay((unsigned long)((5)*(20000000/4000.0)));
  9405  1605  3021               	movlw	33
  9406  1606  1283               	bcf	3,5	;RP0=0, select bank0
  9407  1607  1303               	bcf	3,6	;RP1=0, select bank0
  9408  1608  00C8               	movwf	??_cmdLCD+1
  9409  1609  3075               	movlw	117
  9410  160A  00C7               	movwf	??_cmdLCD
  9411  160B                     u4377:	
  9412  160B  0BC7               	decfsz	??_cmdLCD,f
  9413  160C  2E0B               	goto	u4377
  9414  160D  0BC8               	decfsz	??_cmdLCD+1,f
  9415  160E  2E0B               	goto	u4377
  9416  160F  2E10               	nop2
  9417  1610  2E18               	goto	l3851
  9418  1611                     l3849:	
  9419                           
  9420                           ;lcd.c: 32: else
  9421                           ;lcd.c: 33: _delay((unsigned long)((40)*(20000000/4000000.0)));
  9422  1611  3041               	movlw	65
  9423  1612  1283               	bcf	3,5	;RP0=0, select bank0
  9424  1613  1303               	bcf	3,6	;RP1=0, select bank0
  9425  1614  00C7               	movwf	??_cmdLCD
  9426  1615                     u4387:	
  9427  1615  0BC7               	decfsz	??_cmdLCD,f
  9428  1616  2E15               	goto	u4387
  9429  1617  2E18               	nop2
  9430  1618                     l3851:	
  9431                           
  9432                           ;lcd.c: 35: LCD.EN = 1;
  9433  1618  1283               	bcf	3,5	;RP0=0, select bank0
  9434  1619  1303               	bcf	3,6	;RP1=0, select bank0
  9435  161A  1688               	bsf	8,5	;volatile
  9436  161B  0008               	return
  9437  161C                     __end_of_cmdLCD:	
  9438                           
  9439                           	psect	text45
  9440  11D3                     __ptext45:	
  9441 ;; *************** function ___bmul *****************
  9442 ;; Defined at:
  9443 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul8.c"
  9444 ;; Parameters:    Size  Location     Type
  9445 ;;  multiplier      1    wreg     unsigned char 
  9446 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  9447 ;; Auto vars:     Size  Location     Type
  9448 ;;  multiplier      1    3[BANK0 ] unsigned char 
  9449 ;;  product         1    2[BANK0 ] unsigned char 
  9450 ;; Return value:  Size  Location     Type
  9451 ;;                  1    wreg      unsigned char 
  9452 ;; Registers used:
  9453 ;;		wreg, status,2, status,0
  9454 ;; Tracked objects:
  9455 ;;		On entry : 0/0
  9456 ;;		On exit  : 0/0
  9457 ;;		Unchanged: 0/0
  9458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9459 ;;      Params:         0       1       0       0       0
  9460 ;;      Locals:         0       2       0       0       0
  9461 ;;      Temps:          0       1       0       0       0
  9462 ;;      Totals:         0       4       0       0       0
  9463 ;;Total ram usage:        4 bytes
  9464 ;; Hardware stack levels used:    1
  9465 ;; Hardware stack levels required when called:    2
  9466 ;; This function calls:
  9467 ;;		Nothing
  9468 ;; This function is called by:
  9469 ;;		_gotoxy
  9470 ;; This function uses a non-reentrant model
  9471 ;;
  9472                           
  9473                           
  9474                           ;psect for function ___bmul
  9475  11D3                     ___bmul:	
  9476                           
  9477                           ;incstack = 0
  9478                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9479                           ;___bmul@multiplier stored from wreg
  9480  11D3  1283               	bcf	3,5	;RP0=0, select bank0
  9481  11D4  1303               	bcf	3,6	;RP1=0, select bank0
  9482  11D5  00CA               	movwf	___bmul@multiplier
  9483  11D6  01C9               	clrf	___bmul@product
  9484  11D7                     l3867:	
  9485  11D7  1C4A               	btfss	___bmul@multiplier,0
  9486  11D8  29DD               	goto	l3871
  9487  11D9  0847               	movf	___bmul@multiplicand,w
  9488  11DA  00C8               	movwf	??___bmul
  9489  11DB  0848               	movf	??___bmul,w
  9490  11DC  07C9               	addwf	___bmul@product,f
  9491  11DD                     l3871:	
  9492  11DD  1003               	clrc
  9493  11DE  0DC7               	rlf	___bmul@multiplicand,f
  9494  11DF  1003               	clrc
  9495  11E0  0CCA               	rrf	___bmul@multiplier,f
  9496  11E1  084A               	movf	___bmul@multiplier,w
  9497  11E2  1D03               	btfss	3,2
  9498  11E3  29D7               	goto	l3867
  9499  11E4  0849               	movf	___bmul@product,w
  9500  11E5  0008               	return
  9501  11E6                     __end_of___bmul:	
  9502                           
  9503                           	psect	text46
  9504  127A                     __ptext46:	
  9505 ;; *************** function _bordaSubidaB3 *****************
  9506 ;; Defined at:
  9507 ;;		line 68 in file "bds.c"
  9508 ;; Parameters:    Size  Location     Type
  9509 ;;		None
  9510 ;; Auto vars:     Size  Location     Type
  9511 ;;  estadoAtualB    1    2[BANK0 ] unsigned char 
  9512 ;;  resp2           1    1[BANK0 ] unsigned char 
  9513 ;; Return value:  Size  Location     Type
  9514 ;;                  1    wreg      unsigned char 
  9515 ;; Registers used:
  9516 ;;		wreg, status,2, status,0, pclath, cstack
  9517 ;; Tracked objects:
  9518 ;;		On entry : 0/0
  9519 ;;		On exit  : 0/0
  9520 ;;		Unchanged: 0/0
  9521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9522 ;;      Params:         0       0       0       0       0
  9523 ;;      Locals:         0       2       0       0       0
  9524 ;;      Temps:          0       1       0       0       0
  9525 ;;      Totals:         0       3       0       0       0
  9526 ;;Total ram usage:        3 bytes
  9527 ;; Hardware stack levels used:    1
  9528 ;; Hardware stack levels required when called:    3
  9529 ;; This function calls:
  9530 ;;		_B3
  9531 ;; This function is called by:
  9532 ;;		_easterEgg
  9533 ;;		_main
  9534 ;; This function uses a non-reentrant model
  9535 ;;
  9536                           
  9537                           
  9538                           ;psect for function _bordaSubidaB3
  9539  127A                     _bordaSubidaB3:	
  9540                           
  9541                           ;bds.c: 70: char estadoAtualB3;
  9542                           ;bds.c: 71: char resp2;
  9543                           ;bds.c: 73: estadoAtualB3 = B3();
  9544                           
  9545                           ;incstack = 0
  9546                           ; Regs used in _bordaSubidaB3: [wreg+status,2+status,0+pclath+cstack]
  9547  127A  160A  118A  2188  160A  118A  	fcall	_B3
  9548  127F  1283               	bcf	3,5	;RP0=0, select bank0
  9549  1280  1303               	bcf	3,6	;RP1=0, select bank0
  9550  1281  00C7               	movwf	??_bordaSubidaB3
  9551  1282  0847               	movf	??_bordaSubidaB3,w
  9552  1283  00C9               	movwf	bordaSubidaB3@estadoAtualB3
  9553                           
  9554                           ;bds.c: 75: if( (estadoAtualB3 == 0) && (estadoAnteriorB3 == 1) )
  9555  1284  0849               	movf	bordaSubidaB3@estadoAtualB3,w
  9556  1285  1D03               	btfss	3,2
  9557  1286  2A8D               	goto	l4061
  9558  1287  0343               	decf	_estadoAnteriorB3,w
  9559  1288  1D03               	btfss	3,2
  9560  1289  2A8D               	goto	l4061
  9561                           
  9562                           ;bds.c: 76: resp2 = 1;
  9563  128A  01C8               	clrf	bordaSubidaB3@resp2
  9564  128B  0AC8               	incf	bordaSubidaB3@resp2,f
  9565  128C  2A8E               	goto	l4063
  9566  128D                     l4061:	
  9567                           
  9568                           ;bds.c: 77: else
  9569                           ;bds.c: 78: resp2 = 0;
  9570  128D  01C8               	clrf	bordaSubidaB3@resp2
  9571  128E                     l4063:	
  9572                           
  9573                           ;bds.c: 79: estadoAnteriorB3 = estadoAtualB3;
  9574  128E  0849               	movf	bordaSubidaB3@estadoAtualB3,w
  9575  128F  00C7               	movwf	??_bordaSubidaB3
  9576  1290  0847               	movf	??_bordaSubidaB3,w
  9577  1291  00C3               	movwf	_estadoAnteriorB3
  9578                           
  9579                           ;bds.c: 80: return ( resp2 );
  9580  1292  0848               	movf	bordaSubidaB3@resp2,w
  9581  1293  0008               	return
  9582  1294                     __end_of_bordaSubidaB3:	
  9583                           
  9584                           	psect	text47
  9585  1188                     __ptext47:	
  9586 ;; *************** function _B3 *****************
  9587 ;; Defined at:
  9588 ;;		line 25 in file "bds.c"
  9589 ;; Parameters:    Size  Location     Type
  9590 ;;		None
  9591 ;; Auto vars:     Size  Location     Type
  9592 ;;		None
  9593 ;; Return value:  Size  Location     Type
  9594 ;;                  1    wreg      unsigned char 
  9595 ;; Registers used:
  9596 ;;		wreg, status,2, status,0
  9597 ;; Tracked objects:
  9598 ;;		On entry : 0/0
  9599 ;;		On exit  : 0/0
  9600 ;;		Unchanged: 0/0
  9601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9602 ;;      Params:         0       0       0       0       0
  9603 ;;      Locals:         0       0       0       0       0
  9604 ;;      Temps:          0       0       0       0       0
  9605 ;;      Totals:         0       0       0       0       0
  9606 ;;Total ram usage:        0 bytes
  9607 ;; Hardware stack levels used:    1
  9608 ;; Hardware stack levels required when called:    2
  9609 ;; This function calls:
  9610 ;;		Nothing
  9611 ;; This function is called by:
  9612 ;;		_bordaSubidaB3
  9613 ;;		_main
  9614 ;; This function uses a non-reentrant model
  9615 ;;
  9616                           
  9617                           
  9618                           ;psect for function _B3
  9619  1188                     _B3:	
  9620                           
  9621                           ;bds.c: 27: return ( PORTCbits.RC0 );
  9622                           
  9623                           ;incstack = 0
  9624                           ; Regs used in _B3: [wreg+status,2+status,0]
  9625  1188  1283               	bcf	3,5	;RP0=0, select bank0
  9626  1189  1303               	bcf	3,6	;RP1=0, select bank0
  9627  118A  0807               	movf	7,w	;volatile
  9628  118B  3901               	andlw	1
  9629  118C  0008               	return
  9630  118D                     __end_of_B3:	
  9631                           
  9632                           	psect	text48
  9633  1260                     __ptext48:	
  9634 ;; *************** function _bordaSubidaB2 *****************
  9635 ;; Defined at:
  9636 ;;		line 51 in file "bds.c"
  9637 ;; Parameters:    Size  Location     Type
  9638 ;;		None
  9639 ;; Auto vars:     Size  Location     Type
  9640 ;;  estadoAtualB    1    3[BANK0 ] unsigned char 
  9641 ;;  resp1           1    2[BANK0 ] unsigned char 
  9642 ;; Return value:  Size  Location     Type
  9643 ;;                  1    wreg      unsigned char 
  9644 ;; Registers used:
  9645 ;;		wreg, status,2, status,0, pclath, cstack
  9646 ;; Tracked objects:
  9647 ;;		On entry : 0/0
  9648 ;;		On exit  : 0/0
  9649 ;;		Unchanged: 0/0
  9650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9651 ;;      Params:         0       0       0       0       0
  9652 ;;      Locals:         0       2       0       0       0
  9653 ;;      Temps:          0       1       0       0       0
  9654 ;;      Totals:         0       3       0       0       0
  9655 ;;Total ram usage:        3 bytes
  9656 ;; Hardware stack levels used:    1
  9657 ;; Hardware stack levels required when called:    3
  9658 ;; This function calls:
  9659 ;;		_B2
  9660 ;; This function is called by:
  9661 ;;		_easterEgg
  9662 ;;		_main
  9663 ;; This function uses a non-reentrant model
  9664 ;;
  9665                           
  9666                           
  9667                           ;psect for function _bordaSubidaB2
  9668  1260                     _bordaSubidaB2:	
  9669                           
  9670                           ;bds.c: 53: char estadoAtualB2;
  9671                           ;bds.c: 54: char resp1;
  9672                           ;bds.c: 56: estadoAtualB2 = B2();
  9673                           
  9674                           ;incstack = 0
  9675                           ; Regs used in _bordaSubidaB2: [wreg+status,2+status,0+pclath+cstack]
  9676  1260  160A  118A  2193  160A  118A  	fcall	_B2
  9677  1265  1283               	bcf	3,5	;RP0=0, select bank0
  9678  1266  1303               	bcf	3,6	;RP1=0, select bank0
  9679  1267  00C8               	movwf	??_bordaSubidaB2
  9680  1268  0848               	movf	??_bordaSubidaB2,w
  9681  1269  00CA               	movwf	bordaSubidaB2@estadoAtualB2
  9682                           
  9683                           ;bds.c: 58: if( (estadoAtualB2 == 0) && (estadoAnteriorB2 == 1) )
  9684  126A  084A               	movf	bordaSubidaB2@estadoAtualB2,w
  9685  126B  1D03               	btfss	3,2
  9686  126C  2A73               	goto	l4045
  9687  126D  0344               	decf	_estadoAnteriorB2,w
  9688  126E  1D03               	btfss	3,2
  9689  126F  2A73               	goto	l4045
  9690                           
  9691                           ;bds.c: 59: resp1 = 1;
  9692  1270  01C9               	clrf	bordaSubidaB2@resp1
  9693  1271  0AC9               	incf	bordaSubidaB2@resp1,f
  9694  1272  2A74               	goto	l4047
  9695  1273                     l4045:	
  9696                           
  9697                           ;bds.c: 60: else
  9698                           ;bds.c: 61: resp1 = 0;
  9699  1273  01C9               	clrf	bordaSubidaB2@resp1
  9700  1274                     l4047:	
  9701                           
  9702                           ;bds.c: 62: estadoAnteriorB2 = estadoAtualB2;
  9703  1274  084A               	movf	bordaSubidaB2@estadoAtualB2,w
  9704  1275  00C8               	movwf	??_bordaSubidaB2
  9705  1276  0848               	movf	??_bordaSubidaB2,w
  9706  1277  00C4               	movwf	_estadoAnteriorB2
  9707                           
  9708                           ;bds.c: 63: return ( resp1 );
  9709  1278  0849               	movf	bordaSubidaB2@resp1,w
  9710  1279  0008               	return
  9711  127A                     __end_of_bordaSubidaB2:	
  9712                           
  9713                           	psect	text49
  9714  1193                     __ptext49:	
  9715 ;; *************** function _B2 *****************
  9716 ;; Defined at:
  9717 ;;		line 21 in file "bds.c"
  9718 ;; Parameters:    Size  Location     Type
  9719 ;;		None
  9720 ;; Auto vars:     Size  Location     Type
  9721 ;;		None
  9722 ;; Return value:  Size  Location     Type
  9723 ;;                  1    wreg      unsigned char 
  9724 ;; Registers used:
  9725 ;;		wreg, status,2, status,0
  9726 ;; Tracked objects:
  9727 ;;		On entry : 0/0
  9728 ;;		On exit  : 0/0
  9729 ;;		Unchanged: 0/0
  9730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9731 ;;      Params:         0       0       0       0       0
  9732 ;;      Locals:         0       0       0       0       0
  9733 ;;      Temps:          0       1       0       0       0
  9734 ;;      Totals:         0       1       0       0       0
  9735 ;;Total ram usage:        1 bytes
  9736 ;; Hardware stack levels used:    1
  9737 ;; Hardware stack levels required when called:    2
  9738 ;; This function calls:
  9739 ;;		Nothing
  9740 ;; This function is called by:
  9741 ;;		_bordaSubidaB2
  9742 ;;		_main
  9743 ;; This function uses a non-reentrant model
  9744 ;;
  9745                           
  9746                           
  9747                           ;psect for function _B2
  9748  1193                     _B2:	
  9749                           
  9750                           ;bds.c: 23: return ( PORTCbits.RC2 );
  9751                           
  9752                           ;incstack = 0
  9753                           ; Regs used in _B2: [wreg+status,2+status,0]
  9754  1193  1283               	bcf	3,5	;RP0=0, select bank0
  9755  1194  1303               	bcf	3,6	;RP1=0, select bank0
  9756  1195  0C07               	rrf	7,w	;volatile
  9757  1196  00C7               	movwf	??_B2
  9758  1197  0C47               	rrf	??_B2,w
  9759  1198  3901               	andlw	1
  9760  1199  0008               	return
  9761  119A                     __end_of_B2:	
  9762                           
  9763                           	psect	text50
  9764  1246                     __ptext50:	
  9765 ;; *************** function _bordaSubidaB1 *****************
  9766 ;; Defined at:
  9767 ;;		line 34 in file "bds.c"
  9768 ;; Parameters:    Size  Location     Type
  9769 ;;		None
  9770 ;; Auto vars:     Size  Location     Type
  9771 ;;  estadoAtualB    1    2[BANK0 ] unsigned char 
  9772 ;;  resp            1    1[BANK0 ] unsigned char 
  9773 ;; Return value:  Size  Location     Type
  9774 ;;                  1    wreg      unsigned char 
  9775 ;; Registers used:
  9776 ;;		wreg, status,2, status,0, pclath, cstack
  9777 ;; Tracked objects:
  9778 ;;		On entry : 0/0
  9779 ;;		On exit  : 0/0
  9780 ;;		Unchanged: 0/0
  9781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9782 ;;      Params:         0       0       0       0       0
  9783 ;;      Locals:         0       2       0       0       0
  9784 ;;      Temps:          0       1       0       0       0
  9785 ;;      Totals:         0       3       0       0       0
  9786 ;;Total ram usage:        3 bytes
  9787 ;; Hardware stack levels used:    1
  9788 ;; Hardware stack levels required when called:    3
  9789 ;; This function calls:
  9790 ;;		_B1
  9791 ;; This function is called by:
  9792 ;;		_main
  9793 ;; This function uses a non-reentrant model
  9794 ;;
  9795                           
  9796                           
  9797                           ;psect for function _bordaSubidaB1
  9798  1246                     _bordaSubidaB1:	
  9799                           
  9800                           ;bds.c: 36: char estadoAtualB1;
  9801                           ;bds.c: 37: char resp;
  9802                           ;bds.c: 39: estadoAtualB1 = B1();
  9803                           
  9804                           ;incstack = 0
  9805                           ; Regs used in _bordaSubidaB1: [wreg+status,2+status,0+pclath+cstack]
  9806  1246  160A  118A  2183  160A  118A  	fcall	_B1
  9807  124B  1283               	bcf	3,5	;RP0=0, select bank0
  9808  124C  1303               	bcf	3,6	;RP1=0, select bank0
  9809  124D  00C7               	movwf	??_bordaSubidaB1
  9810  124E  0847               	movf	??_bordaSubidaB1,w
  9811  124F  00C9               	movwf	bordaSubidaB1@estadoAtualB1
  9812                           
  9813                           ;bds.c: 41: if( (estadoAtualB1 == 0) && (estadoAnteriorB1 == 1) )
  9814  1250  0849               	movf	bordaSubidaB1@estadoAtualB1,w
  9815  1251  1D03               	btfss	3,2
  9816  1252  2A59               	goto	l4417
  9817  1253  0345               	decf	_estadoAnteriorB1,w
  9818  1254  1D03               	btfss	3,2
  9819  1255  2A59               	goto	l4417
  9820                           
  9821                           ;bds.c: 42: resp = 1;
  9822  1256  01C8               	clrf	bordaSubidaB1@resp
  9823  1257  0AC8               	incf	bordaSubidaB1@resp,f
  9824  1258  2A5A               	goto	l4419
  9825  1259                     l4417:	
  9826                           
  9827                           ;bds.c: 43: else
  9828                           ;bds.c: 44: resp = 0;
  9829  1259  01C8               	clrf	bordaSubidaB1@resp
  9830  125A                     l4419:	
  9831                           
  9832                           ;bds.c: 45: estadoAnteriorB1 = estadoAtualB1;
  9833  125A  0849               	movf	bordaSubidaB1@estadoAtualB1,w
  9834  125B  00C7               	movwf	??_bordaSubidaB1
  9835  125C  0847               	movf	??_bordaSubidaB1,w
  9836  125D  00C5               	movwf	_estadoAnteriorB1
  9837                           
  9838                           ;bds.c: 46: return ( resp );
  9839  125E  0848               	movf	bordaSubidaB1@resp,w
  9840  125F  0008               	return
  9841  1260                     __end_of_bordaSubidaB1:	
  9842                           
  9843                           	psect	text51
  9844  1183                     __ptext51:	
  9845 ;; *************** function _B1 *****************
  9846 ;; Defined at:
  9847 ;;		line 17 in file "bds.c"
  9848 ;; Parameters:    Size  Location     Type
  9849 ;;		None
  9850 ;; Auto vars:     Size  Location     Type
  9851 ;;		None
  9852 ;; Return value:  Size  Location     Type
  9853 ;;                  1    wreg      unsigned char 
  9854 ;; Registers used:
  9855 ;;		wreg, status,2, status,0
  9856 ;; Tracked objects:
  9857 ;;		On entry : 0/0
  9858 ;;		On exit  : 0/0
  9859 ;;		Unchanged: 0/0
  9860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9861 ;;      Params:         0       0       0       0       0
  9862 ;;      Locals:         0       0       0       0       0
  9863 ;;      Temps:          0       0       0       0       0
  9864 ;;      Totals:         0       0       0       0       0
  9865 ;;Total ram usage:        0 bytes
  9866 ;; Hardware stack levels used:    1
  9867 ;; Hardware stack levels required when called:    2
  9868 ;; This function calls:
  9869 ;;		Nothing
  9870 ;; This function is called by:
  9871 ;;		_bordaSubidaB1
  9872 ;;		_main
  9873 ;; This function uses a non-reentrant model
  9874 ;;
  9875                           
  9876                           
  9877                           ;psect for function _B1
  9878  1183                     _B1:	
  9879                           
  9880                           ;bds.c: 19: return ( PORTCbits.RC1 );
  9881                           
  9882                           ;incstack = 0
  9883                           ; Regs used in _B1: [wreg+status,2+status,0]
  9884  1183  1283               	bcf	3,5	;RP0=0, select bank0
  9885  1184  1303               	bcf	3,6	;RP1=0, select bank0
  9886  1185  0C07               	rrf	7,w	;volatile
  9887  1186  3901               	andlw	1
  9888  1187  0008               	return
  9889  1188                     __end_of_B1:	
  9890                           
  9891                           	psect	text52
  9892  11E6                     __ptext52:	
  9893 ;; *************** function _interrup *****************
  9894 ;; Defined at:
  9895 ;;		line 9 in file "timer0.c"
  9896 ;; Parameters:    Size  Location     Type
  9897 ;;		None
  9898 ;; Auto vars:     Size  Location     Type
  9899 ;;		None
  9900 ;; Return value:  Size  Location     Type
  9901 ;;                  1    wreg      void 
  9902 ;; Registers used:
  9903 ;;		wreg, status,2, status,0, pclath, cstack
  9904 ;; Tracked objects:
  9905 ;;		On entry : 0/0
  9906 ;;		On exit  : 0/0
  9907 ;;		Unchanged: 0/0
  9908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9909 ;;      Params:         0       0       0       0       0
  9910 ;;      Locals:         0       0       0       0       0
  9911 ;;      Temps:          4       0       0       0       0
  9912 ;;      Totals:         4       0       0       0       0
  9913 ;;Total ram usage:        4 bytes
  9914 ;; Hardware stack levels used:    1
  9915 ;; Hardware stack levels required when called:    1
  9916 ;; This function calls:
  9917 ;;		_intt0_1ms
  9918 ;; This function is called by:
  9919 ;;		Interrupt level 1
  9920 ;; This function uses a non-reentrant model
  9921 ;;
  9922                           
  9923                           
  9924                           ;psect for function _interrup
  9925  11E6                     _interrup:	
  9926                           
  9927                           ;timer0.c: 11: if( INTCONbits.T0IE && INTCONbits.T0IF )
  9928  11E6  1A8B               	btfsc	11,5	;volatile
  9929  11E7  1D0B               	btfss	11,2	;volatile
  9930  11E8  29EF               	goto	i1l473
  9931                           
  9932                           ;timer0.c: 12: {
  9933                           ;timer0.c: 13: INTCONbits.T0IF = 0;
  9934  11E9  110B               	bcf	11,2	;volatile
  9935                           
  9936                           ;timer0.c: 14: intt0_1ms();
  9937  11EA  160A  118A  2294  160A  118A  	fcall	_intt0_1ms
  9938  11EF                     i1l473:	
  9939  11EF  0879               	movf	??_interrup+3,w
  9940  11F0  1283               	bcf	3,5	;RP0=0, select bank0
  9941  11F1  1303               	bcf	3,6	;RP1=0, select bank0
  9942  11F2  00FF               	movwf	127
  9943  11F3  0878               	movf	??_interrup+2,w
  9944  11F4  008A               	movwf	10
  9945  11F5  0877               	movf	??_interrup+1,w
  9946  11F6  0084               	movwf	4
  9947  11F7  0E76               	swapf	??_interrup^(0+-128),w
  9948  11F8  0083               	movwf	3
  9949  11F9  0EFE               	swapf	126,f
  9950  11FA  0E7E               	swapf	126,w
  9951  11FB  0009               	retfie
  9952  11FC                     __end_of_interrup:	
  9953                           
  9954                           	psect	intentry
  9955  0004                     __pintentry:	
  9956                           ;incstack = 0
  9957                           ; Regs used in _interrup: [wreg+status,2+status,0+pclath+cstack]
  9958                           
  9959  0004                     interrupt_function:	
  9960  007E                     saved_w	set	btemp
  9961  0004  00FE               	movwf	btemp
  9962  0005  0E03               	swapf	3,w
  9963  0006  00F6               	movwf	??_interrup
  9964  0007  0804               	movf	4,w
  9965  0008  00F7               	movwf	??_interrup+1
  9966  0009  080A               	movf	10,w
  9967  000A  00F8               	movwf	??_interrup+2
  9968  000B  1283               	bcf	3,5	;RP0=0, select bank0
  9969  000C  1303               	bcf	3,6	;RP1=0, select bank0
  9970  000D  087F               	movf	btemp+1,w
  9971  000E  00F9               	movwf	??_interrup+3
  9972  000F  160A  118A  29E6   	ljmp	_interrup
  9973                           
  9974                           	psect	text53
  9975  1294                     __ptext53:	
  9976 ;; *************** function _intt0_1ms *****************
  9977 ;; Defined at:
  9978 ;;		line 18 in file "timer0.c"
  9979 ;; Parameters:    Size  Location     Type
  9980 ;;		None
  9981 ;; Auto vars:     Size  Location     Type
  9982 ;;		None
  9983 ;; Return value:  Size  Location     Type
  9984 ;;                  1    wreg      void 
  9985 ;; Registers used:
  9986 ;;		wreg, status,2
  9987 ;; Tracked objects:
  9988 ;;		On entry : 0/0
  9989 ;;		On exit  : 0/0
  9990 ;;		Unchanged: 0/0
  9991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9992 ;;      Params:         0       0       0       0       0
  9993 ;;      Locals:         0       0       0       0       0
  9994 ;;      Temps:          1       0       0       0       0
  9995 ;;      Totals:         1       0       0       0       0
  9996 ;;Total ram usage:        1 bytes
  9997 ;; Hardware stack levels used:    1
  9998 ;; This function calls:
  9999 ;;		Nothing
 10000 ;; This function is called by:
 10001 ;;		_interrup
 10002 ;; This function uses a non-reentrant model
 10003 ;;
 10004                           
 10005                           
 10006                           ;psect for function _intt0_1ms
 10007  1294                     _intt0_1ms:	
 10008                           
 10009                           ;timer0.c: 20: TMR0 = 100;
 10010                           
 10011                           ;incstack = 0
 10012                           ; Regs used in _intt0_1ms: [wreg+status,2]
 10013  1294  3064               	movlw	100
 10014  1295  1283               	bcf	3,5	;RP0=0, select bank0
 10015  1296  1303               	bcf	3,6	;RP1=0, select bank0
 10016  1297  0081               	movwf	1	;volatile
 10017                           
 10018                           ;timer0.c: 22: if( ++t0cont >= t0final )
 10019  1298  3001               	movlw	1
 10020  1299  07BE               	addwf	_t0cont,f
 10021  129A  1803               	skipnc
 10022  129B  0ABF               	incf	_t0cont+1,f
 10023  129C  3000               	movlw	0
 10024  129D  07BF               	addwf	_t0cont+1,f
 10025  129E  083F               	movf	_t0cont+1,w
 10026  129F  3A80               	xorlw	128
 10027  12A0  00F5               	movwf	??_intt0_1ms
 10028  12A1  0841               	movf	_t0final+1,w
 10029  12A2  3A80               	xorlw	128
 10030  12A3  0275               	subwf	??_intt0_1ms,w
 10031  12A4  1D03               	skipz
 10032  12A5  2AA8               	goto	u200_25
 10033  12A6  0840               	movf	_t0final,w
 10034  12A7  023E               	subwf	_t0cont,w
 10035  12A8                     u200_25:	
 10036  12A8  1C03               	skipc
 10037  12A9  0008               	return
 10038                           
 10039                           ;timer0.c: 23: {
 10040                           ;timer0.c: 24: t0cont = 0;
 10041  12AA  1283               	bcf	3,5	;RP0=0, select bank0
 10042  12AB  1303               	bcf	3,6	;RP1=0, select bank0
 10043  12AC  01BE               	clrf	_t0cont
 10044  12AD  01BF               	clrf	_t0cont+1
 10045  12AE  0008               	return
 10046  12AF                     __end_of_intt0_1ms:	
 10047  007E                     btemp	set	126	;btemp
 10048  007E                     wtemp0	set	126


Data Sizes:
    Strings     989
    Constant    0
    Data        0
    BSS         44
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     35      74
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    writeString@str	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_106(CODE[25]), STR_105(CODE[25]), STR_104(CODE[28]), STR_103(CODE[25]), 
		 -> STR_102(CODE[25]), STR_101(CODE[28]), STR_100(CODE[25]), STR_99(CODE[25]), 
		 -> STR_98(CODE[28]), STR_97(CODE[17]), STR_96(CODE[20]), STR_95(CODE[10]), 
		 -> STR_94(CODE[16]), STR_93(CODE[13]), STR_92(CODE[12]), STR_91(CODE[11]), 
		 -> STR_90(CODE[19]), STR_89(CODE[17]), STR_88(CODE[9]), STR_87(CODE[10]), 
		 -> STR_86(CODE[16]), STR_85(CODE[13]), STR_84(CODE[12]), STR_83(CODE[19]), 

    writeLCD@ptr	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_130(CODE[11]), STR_129(CODE[11]), STR_128(CODE[11]), STR_127(CODE[11]), 
		 -> STR_126(CODE[11]), STR_125(CODE[11]), STR_124(CODE[11]), STR_123(CODE[11]), 
		 -> STR_122(CODE[17]), STR_121(CODE[17]), STR_120(CODE[17]), STR_119(CODE[17]), 
		 -> STR_118(CODE[17]), STR_117(CODE[17]), STR_116(CODE[17]), STR_115(CODE[17]), 
		 -> STR_114(CODE[17]), STR_113(CODE[17]), STR_112(CODE[9]), STR_111(CODE[11]), 
		 -> STR_110(CODE[13]), STR_109(CODE[11]), STR_108(CODE[17]), STR_107(CODE[17]), 
		 -> STR_82(CODE[17]), STR_81(CODE[17]), STR_80(CODE[17]), STR_79(CODE[17]), 
		 -> STR_78(CODE[17]), STR_77(CODE[17]), STR_76(CODE[17]), STR_75(CODE[17]), 
		 -> STR_74(CODE[17]), STR_73(CODE[17]), STR_72(CODE[17]), STR_71(CODE[18]), 
		 -> STR_70(CODE[17]), STR_69(CODE[17]), STR_68(CODE[17]), STR_67(CODE[17]), 
		 -> STR_66(CODE[17]), STR_65(CODE[4]), STR_64(CODE[4]), STR_63(CODE[4]), 
		 -> STR_62(CODE[4]), STR_61(CODE[4]), STR_60(CODE[4]), STR_59(CODE[4]), 
		 -> STR_58(CODE[4]), STR_57(CODE[4]), STR_56(CODE[4]), STR_55(CODE[4]), 
		 -> STR_54(CODE[8]), STR_53(CODE[1]), STR_52(CODE[4]), STR_51(CODE[7]), 
		 -> STR_50(CODE[4]), STR_49(CODE[4]), STR_48(CODE[8]), STR_47(CODE[8]), 
		 -> STR_46(CODE[8]), STR_45(CODE[4]), STR_44(CODE[2]), STR_43(CODE[2]), 
		 -> STR_42(CODE[2]), STR_41(CODE[2]), STR_40(CODE[2]), STR_39(CODE[2]), 
		 -> STR_38(CODE[2]), STR_37(CODE[2]), STR_36(CODE[2]), STR_35(CODE[2]), 
		 -> STR_34(CODE[2]), STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[2]), 
		 -> STR_30(CODE[2]), STR_29(CODE[2]), STR_28(CODE[2]), STR_27(CODE[2]), 
		 -> STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), STR_19(CODE[2]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[17]), STR_11(CODE[17]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interrup in COMMON

    _interrup->_intt0_1ms

Critical Paths under _main in BANK0

    _main->_master1
    _main->_slave1
    _transmite->_convHexToAnsc
    _textSelectionEST->_writeLCD
    _textSelectionCLP->_writeLCD
    _textSelection8->_writeLCD
    _textSelection7->_writeLCD
    _textSelection6->_writeLCD
    _textSelection5->_writeLCD
    _textSelection4->_writeLCD
    _textSelection3->_writeLCD
    _textSelection2->_writeLCD
    _textSelection1->_writeLCD
    ___awdiv->_statusT0limite
    _textLoading->_writeLCD
    _textConfig->_writeLCD
    _textCMpar->_writeLCD
    _textCMdat->_writeLCD
    _slave1->_initEUSART
    _recebe->_convAsciToHex
    _convAsciToHex->_putFIFO
    _readEUSART->_getFIFO
    _getFIFO->___awmod
    _putFIFO->___awmod
    _master1->_initEUSART
    _writeString->_writeEUSART
    _initEUSART->___lldiv
    _logo->_writeLCD
    _initTimer0->_setT0limite
    _initSerial->_serialOut
    _initLCD->_cmdLCD
    _easterEgg->_writeLCD
    _writeLCD->_gotoxy
    _gotoxy->___bmul
    _gotoxy->_cmdLCD
    _bordaSubidaB2->_B2

Critical Paths under _interrup in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrup in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrup in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrup in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  326312
                                             27 BANK0      8     8      0
                                 _B1
                                 _B2
                                 _B3
                      _bordaSubidaB1
                      _bordaSubidaB2
                      _bordaSubidaB3
                             _cmdLCD
                          _easterEgg
                             _initBT
                         _initEUSART
                            _initLCD
                         _initSerial
                         _initTimer0
                               _logo
                            _master1
                             _recebe
                             _slave1
                          _textCMdat
                          _textCMpar
                         _textConfig
                        _textLoading
                     _textSelection1
                     _textSelection2
                     _textSelection3
                     _textSelection4
                     _textSelection5
                     _textSelection6
                     _textSelection7
                     _textSelection8
                   _textSelectionCLP
                   _textSelectionEST
                          _transmite
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _transmite                                            1     1      0     343
                                              4 BANK0      1     1      0
                      _convHexToAnsc
                           _serialIn
                        _writeEUSART
 ---------------------------------------------------------------------------------
 (2) _serialIn                                             3     3      0     105
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _convHexToAnsc                                        4     4      0     207
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _textSelectionEST                                     3     3      0   19443
                                             13 BANK0      3     3      0
                            ___awdiv
                           _statusT0
                     _statusT0limite
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _textSelectionCLP                                     3     3      0   19443
                                             13 BANK0      3     3      0
                            ___awdiv
                           _statusT0
                     _statusT0limite
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _textSelection8                                       3     3      0   19443
                                             13 BANK0      3     3      0
                            ___awdiv
                           _statusT0
                     _statusT0limite
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _textSelection7                                       3     3      0   19443
                                             13 BANK0      3     3      0
                            ___awdiv
                           _statusT0
                     _statusT0limite
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _textSelection6                                       3     3      0   19443
                                             13 BANK0      3     3      0
                            ___awdiv
                           _statusT0
                     _statusT0limite
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _textSelection5                                       3     3      0   19443
                                             13 BANK0      3     3      0
                            ___awdiv
                           _statusT0
                     _statusT0limite
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _textSelection4                                       3     3      0   19443
                                             13 BANK0      3     3      0
                            ___awdiv
                           _statusT0
                     _statusT0limite
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _textSelection3                                       3     3      0   19443
                                             13 BANK0      3     3      0
                            ___awdiv
                           _statusT0
                     _statusT0limite
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _textSelection2                                       3     3      0   19443
                                             13 BANK0      3     3      0
                            ___awdiv
                           _statusT0
                     _statusT0limite
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _textSelection1                                       3     3      0   19443
                                             13 BANK0      3     3      0
                            ___awdiv
                           _statusT0
                     _statusT0limite
                           _writeLCD
 ---------------------------------------------------------------------------------
 (2) _statusT0limite                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _statusT0                                             2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    2293
                                              2 BANK0      9     5      4
                     _statusT0limite (ARG)
 ---------------------------------------------------------------------------------
 (1) _textLoading                                          3     3      0   17150
                                             13 BANK0      3     3      0
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _textConfig                                           0     0      0   17401
                             _cmdLCD
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _textCMpar                                            0     0      0   17401
                             _cmdLCD
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _textCMdat                                            0     0      0   17401
                             _cmdLCD
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _slave1                                               3     3      0    2832
                                             24 BANK0      3     3      0
                         _initEUSART
                        _writeString
 ---------------------------------------------------------------------------------
 (1) _recebe                                               0     0      0    2102
                      _convAsciToHex
                          _serialOut
 ---------------------------------------------------------------------------------
 (2) _convAsciToHex                                        3     3      0    2003
                                             12 BANK0      3     3      0
                            _putFIFO
                         _readEUSART
 ---------------------------------------------------------------------------------
 (3) _readEUSART                                           0     0      0     932
                            _getFIFO
 ---------------------------------------------------------------------------------
 (4) _getFIFO                                              5     5      0     932
                                              7 BANK0      5     5      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) _putFIFO                                              5     5      0     926
                                              7 BANK0      5     5      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     895
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _master1                                              3     3      0    2832
                                             24 BANK0      3     3      0
                         _initEUSART
                        _writeString
 ---------------------------------------------------------------------------------
 (2) _writeString                                          2     0      2    1944
                                              1 BANK0      2     0      2
                        _writeEUSART
 ---------------------------------------------------------------------------------
 (2) _writeEUSART                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _initEUSART                                          10     6      4     888
                                             14 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     395
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _logo                                                 3     3      0   17401
                                             13 BANK0      3     3      0
                             _cmdLCD
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _initTimer0                                           0     0      0     108
                        _setT0limite
 ---------------------------------------------------------------------------------
 (2) _setT0limite                                          2     0      2     108
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initSerial                                           1     1      0      99
                                              3 BANK0      1     1      0
                          _serialOut
 ---------------------------------------------------------------------------------
 (2) _serialOut                                            3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              3     3      0     251
                                              4 BANK0      3     3      0
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (1) _initBT                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _easterEgg                                            3     3      0   17605
                                             13 BANK0      3     3      0
                      _bordaSubidaB2
                      _bordaSubidaB3
                             _cmdLCD
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _writeLCD                                             5     2      3   17150
                                              8 BANK0      5     2      3
                             _gotoxy
                             _putLCD
 ---------------------------------------------------------------------------------
 (2) _putLCD                                               3     3      0      96
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _gotoxy                                               4     3      1     603
                                              4 BANK0      4     3      1
                             ___bmul
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (3) _cmdLCD                                               4     4      0     251
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     213
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _bordaSubidaB3                                        3     3      0     102
                                              0 BANK0      3     3      0
                                 _B3
 ---------------------------------------------------------------------------------
 (3) _B3                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _bordaSubidaB2                                        3     3      0     102
                                              1 BANK0      3     3      0
                                 _B2
 ---------------------------------------------------------------------------------
 (3) _B2                                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _bordaSubidaB1                                        3     3      0     102
                                              0 BANK0      3     3      0
                                 _B1
 ---------------------------------------------------------------------------------
 (2) _B1                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _interrup                                             4     4      0       0
                                              1 COMMON     4     4      0
                          _intt0_1ms
 ---------------------------------------------------------------------------------
 (7) _intt0_1ms                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _B1
   _B2
   _B3
   _bordaSubidaB1
     _B1
   _bordaSubidaB2
     _B2
   _bordaSubidaB3
     _B3
   _cmdLCD
   _easterEgg
     _bordaSubidaB2
       _B2
     _bordaSubidaB3
       _B3
     _cmdLCD
     _writeLCD
       _gotoxy
         ___bmul
         _cmdLCD
       _putLCD
   _initBT
   _initEUSART
     ___lldiv
   _initLCD
     _cmdLCD
   _initSerial
     _serialOut
   _initTimer0
     _setT0limite
   _logo
     _cmdLCD
     _writeLCD
       _gotoxy
         ___bmul
         _cmdLCD
       _putLCD
   _master1
     _initEUSART
       ___lldiv
     _writeString
       _writeEUSART
   _recebe
     _convAsciToHex
       _putFIFO
         ___awmod
       _readEUSART
         _getFIFO
           ___awmod
     _serialOut
   _slave1
     _initEUSART
       ___lldiv
     _writeString
       _writeEUSART
   _textCMdat
     _cmdLCD
     _writeLCD
       _gotoxy
         ___bmul
         _cmdLCD
       _putLCD
   _textCMpar
     _cmdLCD
     _writeLCD
       _gotoxy
         ___bmul
         _cmdLCD
       _putLCD
   _textConfig
     _cmdLCD
     _writeLCD
       _gotoxy
         ___bmul
         _cmdLCD
       _putLCD
   _textLoading
     _writeLCD
       _gotoxy
         ___bmul
         _cmdLCD
       _putLCD
   _textSelection1
     ___awdiv
       _statusT0limite (ARG)
     _statusT0
     _statusT0limite
     _writeLCD
       _gotoxy
         ___bmul
         _cmdLCD
       _putLCD
   _textSelection2
     ___awdiv
       _statusT0limite (ARG)
     _statusT0
     _statusT0limite
     _writeLCD
       _gotoxy
         ___bmul
         _cmdLCD
       _putLCD
   _textSelection3
     ___awdiv
       _statusT0limite (ARG)
     _statusT0
     _statusT0limite
     _writeLCD
       _gotoxy
         ___bmul
         _cmdLCD
       _putLCD
   _textSelection4
     ___awdiv
       _statusT0limite (ARG)
     _statusT0
     _statusT0limite
     _writeLCD
       _gotoxy
         ___bmul
         _cmdLCD
       _putLCD
   _textSelection5
     ___awdiv
       _statusT0limite (ARG)
     _statusT0
     _statusT0limite
     _writeLCD
       _gotoxy
         ___bmul
         _cmdLCD
       _putLCD
   _textSelection6
     ___awdiv
       _statusT0limite (ARG)
     _statusT0
     _statusT0limite
     _writeLCD
       _gotoxy
         ___bmul
         _cmdLCD
       _putLCD
   _textSelection7
     ___awdiv
       _statusT0limite (ARG)
     _statusT0
     _statusT0limite
     _writeLCD
       _gotoxy
         ___bmul
         _cmdLCD
       _putLCD
   _textSelection8
     ___awdiv
       _statusT0limite (ARG)
     _statusT0
     _statusT0limite
     _writeLCD
       _gotoxy
         ___bmul
         _cmdLCD
       _putLCD
   _textSelectionCLP
     ___awdiv
       _statusT0limite (ARG)
     _statusT0
     _statusT0limite
     _writeLCD
       _gotoxy
         ___bmul
         _cmdLCD
       _putLCD
   _textSelectionEST
     ___awdiv
       _statusT0limite (ARG)
     _statusT0
     _statusT0limite
     _writeLCD
       _gotoxy
         ___bmul
         _cmdLCD
       _putLCD
   _transmite
     _convHexToAnsc
     _serialIn
     _writeEUSART
   _writeLCD
     _gotoxy
       ___bmul
       _cmdLCD
     _putLCD

 _interrup (ROOT)
   _intt0_1ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      54       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     23      4A       5       92.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      54      12        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Oct 22 22:39:03 2019

           ?_textSelection1 0075             ?_textSelection2 0075             ?_textSelection3 0075  
           ?_textSelection4 0075             ?_textSelection5 0075             ?_textSelection6 0075  
           ?_textSelection7 0075             ?_textSelection8 0075                           pc 0002  
            ___bmul@product 0049                 __CFG_CP$OFF 0000                 _SSPSTATbits 0094  
                        _B1 1183                          _B2 1193                          _B3 1188  
                        l36 1226                          l38 122B                          l64 1496  
                        l67 14B0                ___awdiv@sign 004F                          fsr 0004  
                       ?_B1 0075                         ?_B2 0075                         ?_B3 0075  
         ?_textSelectionCLP 0075            convHexToAnsc@dez 004A           ?_textSelectionEST 0075  
                       l383 021E                         l547 135C                         _LCD 0008  
          convHexToAnsc@uni 0049                __CFG_CPD$OFF 0000     __size_of_statusT0limite 0007  
                       fsr0 0004                         indf 0000                ___awmod@sign 004D  
        ??_textSelectionCLP 0054          ??_textSelectionEST 0054                __CFG_IESO$ON 0000  
              __CFG_FOSC$HS 0000                        ??_B1 0047                        ??_B2 0047  
                      ??_B3 0047             ??_bordaSubidaB1 0047             ??_bordaSubidaB2 0048  
           ??_bordaSubidaB3 0047                __CFG_LVP$OFF 0000           convHexToAnsc@dado 0048  
                      l4005 14A6                        l4015 14C0                        l4121 08ED  
                      l4027 1433                        l4045 1273                        l4061 128D  
                      l4109 134E                        l5013 0478                        l5005 0459  
                      l4047 1274                        l4063 128E                        l4127 08F8  
                      l4153 0937                        l4145 0924                        l4137 0900  
                      l5113 048E                        l4139 090E                        l4235 172D  
                      l4243 1790                        l4251 17F3                        l4307 1560  
                      l5115 04B7                        l5019 0481                        l4149 092F  
                      l5117 04E3                        l4417 1259                        l3801 14E4  
                      l4601 0051                        l4419 125A                        l3803 14F2  
                      l3811 150B                        l4259 0992                        l4267 09F5  
                      l4275 0A58                        l4283 0ABB                        l4291 0B1E  
                      l4621 007A                        l4613 0065                        l4605 0057  
                      l3831 15DA                        l3815 1513                        l3807 1500  
                      l3833 15E6                        l4801 02D8                        l4721 01C5  
                      l4641 00B8                        l4633 00A0                        l4625 0088  
                      l4617 006C                        l4609 005E                        l3851 1618  
                      l3835 15ED                        l4299 15B5                        l4811 02F7  
                      l3925 1689                        l3861 139E                        l4901 03C9  
                      l4709 0198                        l4653 00E2                        l4645 00C6  
                      l4637 00AE                        l4629 0092                        l3871 11DD  
                      l3847 1605                        l3951 1227                        l3935 16C1  
                      l3927 1699                        l4807 02EB                        l4743 020E  
                      l4671 012C                        l3849 1611                        l3793 14DE  
                      l4825 0311                        l4761 0258                        l4753 0236  
                      l4729 01E8                        l4665 011B                        l4657 00F8  
                      l4649 00D4                        l3867 11D7                        l3955 121C  
                      l3939 16CE                        l3971 1236                        l4915 03E6  
                      l4843 033A                        l4819 0301                        l4747 0221  
                      l3789 14D7                        l3973 1244                        l4941 042A  
                      l4933 0411                        l4909 03D3                        l4861 0365  
                      l4837 0329                        l4829 031F                        l4685 0146  
                      l3991 13E9                        l3967 1240                        l4927 03FE  
                      l4919 03F4                        l4855 0352                        l4847 0348  
                      l4775 027E                        l4759 0252                        l4679 0136  
                      l4695 0168                        l3985 13DF                        l4937 041C  
                      l4873 037D                        l4865 0373                        l4793 02B5  
                      l4785 028E                        l4777 0284                        l4769 0262  
                      l4697 0171                        l4689 0154                        l4891 03A8  
                      l4883 039E                        l4947 043E                        l4981 0459  
                      l4973 0459                        l4965 0459                        l4957 0459  
                      l4949 0459                        l4879 0390                        l4897 03BB  
                      l4997 0459                        l4989 0459                        STR_1 0821  
                      STR_2 08D5                        STR_3 08D9                        STR_4 08DB  
                      STR_5 08D7                        STR_6 0744                        STR_7 0799  
                      STR_8 0755                        STR_9 0788                        u3035 1627  
                      u3115 090F                        u3125 091B                        u3205 17E4  
                      u4007 0E25                        u3135 0925                        u3215 0983  
                      u4017 0CA3                        u3225 09E6                        u4107 0BA3  
                      u4027 0CBC                        u3235 0A49                        u4117 0BBC  
                      u4037 0CD5                        u3245 0AAC                        u4207 0E65  
                      u4127 0BE7                        u4047 0CEE                        u3095 0903  
                      u3255 0B0F                        u4217 0E8E                        u4137 0C02  
                      u2705 1501                        u4057 0D07                        u3185 171E  
                      u3265 15A6                        u4307 0FB2                        u4227 0EB9  
                      u4147 0C1D                        u4067 0D20                        u3195 1781  
                      u3275 1551                        u4317 0FDC                        u4237 0EE2  
                      u4157 0C38                        u4077 0B58                        u4327 0FF1  
                      u4247 0EFF                        u4167 0C53                        u4087 0B71  
                      u4337 140B                        u4257 0F13                        u4177 0C6F  
                      u2825 168D                        u4097 0B8A                        u4347 141F  
                      u4267 0F2E                        u4187 1469                        u2675 14E7  
                      u4357 15E0                        u4277 0F4B                        u4197 0E48  
                      u2845 169B                        u4367 15EA                        u4287 0F5F  
                      u2855 16B0                        u2695 14F8                        u4377 160B  
                      u4297 0F88                        u2865 16C2                        u4387 1615  
                      _RCIF 0065                        u3917 02D0                        u3927 0D45  
                      u3937 0D61                        u3947 0D7D                        u3957 0D99  
                      u3967 0DB5                        u3977 0DD1                        u3987 0DED  
                      u3997 0E09                        _TMR0 0001                __CFG_WRT$OFF 0000  
             __CFG_FCMEN$ON 0000                        _fifo 0020                        _comp 0046  
                      _main 0025                        _logo 0BCC                        _rhex 0072  
                      _tdez 0073                        btemp 007E                        _tuni 0074  
             __CFG_BOREN$ON 0000                        start 0012           ___bmul@multiplier 004A  
             __CFG_MCLRE$ON 0000              writeString@str 0048                 _writeEUSART 118D  
                     ?_main 0075                       ?_logo 0075             __end_of___awdiv 093C  
                     STR_10 0755                       STR_11 07BB                       STR_12 0755  
                     STR_20 08CB                       STR_21 08CB                       STR_13 06BA  
                     STR_30 08D1                       STR_22 08CD                       STR_14 08CB  
                     STR_31 070F                       STR_23 070F                       STR_15 070F  
                     STR_24 07FD                       STR_32 08CF                       STR_40 08D3  
                     STR_16 08C9                       STR_17 08C9                       STR_25 07FD  
                     STR_33 08CF                       STR_41 08D3               __CFG_WDTE$OFF 0000  
                     STR_42 08C9                       STR_18 07FD                       STR_50 06EB  
                     STR_34 08D3                       STR_26 08CF                       STR_43 070F  
                     STR_35 070F                       STR_27 070F                       STR_19 070F  
                     STR_51 08AE                       STR_60 08B5                       STR_28 08CD  
                     STR_36 08D1                       STR_44 06BA             __end_of___awmod 1518  
                     STR_61 08B9                       STR_29 08CD                       STR_37 08D1  
                     STR_45 06EB                       STR_46 0709                       STR_70 0700  
                     STR_62 08C1                       STR_38 06BA                       STR_39 070F  
                     STR_63 08B5                       STR_47 08A6                       STR_71 0611  
                     STR_72 0700                       STR_48 08A6                       STR_64 08BD  
                     STR_80 07DD                       STR_49 070D                       STR_65 08C5  
                     STR_57 08B5                       STR_81 07FF                       STR_73 0777  
                     STR_90 05FE                       STR_74 0700                       STR_82 07CC  
                     STR_58 08B9                       STR_66 0766                       STR_59 08C1  
                     STR_91 087F                       STR_67 07AA                       STR_75 0711  
                     STR_83 05FE                       STR_84 0868                       STR_92 085C  
                     STR_76 0722                       STR_68 0700                       STR_93 084F  
                     STR_85 084F                       STR_77 0810                       STR_69 0733  
                     STR_94 0832                       STR_86 0832                       STR_78 07CC  
                     STR_95 088A                       STR_87 088A                       STR_79 07EE  
                     STR_88 089D                       STR_96 05EA                       STR_97 06EF  
                     STR_89 06EF                       STR_98 0500                       STR_99 056D  
                     _ANSEL 0188             __end_of___lldiv 16D7             ___awdiv@divisor 0049  
                     i1l473 11EF             ___awdiv@counter 004E                       _RCREG 001A  
                     _PORTB 0006             __end_of_getFIFO 13A0                       _TRISB 0086  
                     _TRISD 0088                       _TXREG 0019                 _writeString 134E  
             __CFG_PWRTE$ON 0000             ??_convAsciToHex 0053             __end_of_initLCD 148C  
           __end_of_master1 0BCC                       main@a 0067                       main@i 0066  
                     main@t 0065             __end_of_putFIFO 134E                       pclath 000A  
              ?_setT0limite 0047             ??_convHexToAnsc 0047                       status 0003  
                     wtemp0 007E             __initialization 0015                __end_of_main 04E9  
              __end_of_logo 0C76  bordaSubidaB3@estadoAtualB3 0049                      ??_main 0062  
                    ??_logo 0054                      STR_100 0554                      STR_101 0538  
                    STR_110 0842                      STR_102 05D1                      STR_111 0874  
                    STR_103 05B8                      STR_112 0894                      STR_120 0667  
                    STR_104 051C                      STR_121 06AB                      STR_113 069A  
                    STR_105 059F                      STR_130 0874                      STR_122 0656  
                    STR_114 0634                      STR_106 0586                      STR_123 0874  
                    STR_107 06CD                      STR_115 0623                      STR_124 0874  
                    STR_108 06DE                      STR_116 0645                      STR_125 0874  
                    STR_109 0874                      STR_117 06BC                      STR_126 0874  
                    STR_118 0678                      STR_127 0874                      STR_119 0689  
                    STR_128 0874                      STR_129 0874            ___awdiv@dividend 004B  
                    _ANSELH 0189                      u200_25 12A8                      _t0cont 003E  
                    ___bmul 11D3                      _cmdLCD 15C2                   ??___awdiv 004D  
                 ??___awmod 004B                   ??___lldiv 004F                      _initBT 11B7  
                 ??_getFIFO 004E                      _recebe 11C2                      _gotoxy 11FC  
          ___awdiv@quotient 0050             ___awmod@divisor 0047                      _putLCD 13F6  
                    _slave1 0C76                      _serial 0071             ___awmod@counter 004C  
          __end_of_interrup 11FC                   ??_initLCD 004B              _statusT0limite 11A8  
                 ??_master1 005F            __end_of_serialIn 1246                      saved_w 007E  
                 ??_putFIFO 004E            __end_of_statusT0 11A8            __end_of_writeLCD 1458  
              ?_textLoading 0075     __end_of__initialization 0021            ??_textSelection1 0054  
          ??_textSelection2 0054            ??_textSelection3 0054            ??_textSelection4 0054  
          ??_textSelection5 0054            ??_textSelection6 0054            ??_textSelection7 0054  
          ??_textSelection8 0054         ___bmul@multiplicand 0047              __pcstackCOMMON 0075  
                __end_of_B1 1188                  __end_of_B2 119A                  __end_of_B3 118D  
    __end_of_statusT0limite 11AF          __size_of_easterEgg 01D3              _OPTION_REGbits 0081  
                __pbssBANK0 0020   __size_of_textSelectionCLP 0055   __size_of_textSelectionEST 0055  
        __size_of_intt0_1ms 001B        __size_of_setT0limite 0007                  __pmaintext 0025  
                   ?___bmul 0047                cmdLCD@nibble 004A                ?_writeEUSART 0075  
                   ?_cmdLCD 0075                  __pintentry 0004                     _CCP1CON 0017  
                   ?_initBT 0075                     ?_recebe 0075                     ?_gotoxy 004B  
                   ?_putLCD 0075                     ?_slave1 0075             ?_statusT0limite 0047  
        __size_of_serialOut 0019          __size_of_textCMdat 0020          __size_of_textCMpar 0020  
              ?_writeString 0048          __size_of_transmite 0029                  __stringtab 1000  
     __end_of_bordaSubidaB1 1260       __end_of_bordaSubidaB2 127A       __end_of_bordaSubidaB3 1294  
                _initEUSART 161C                  _readEUSART 08DD                   ?_interrup 0075  
         __end_of_easterEgg 1000                  getFIFO@aux 0052                   ?_serialIn 0075  
                   _t0final 0040             __size_of___bmul 0013                  _initSerial 04E9  
                _initTimer0 12AF                     ___awdiv 08E1             __size_of_cmdLCD 005A  
                   ___awmod 14CB                     ___lldiv 1677                   ?_statusT0 0047  
                   _getFIFO 1377             __size_of_initBT 000B             __size_of_recebe 0011  
           __size_of_gotoxy 0018                   ?_writeLCD 004F             __size_of_putLCD 0030  
           __size_of_slave1 00BA                     __ptext0 0000                     __ptext1 13A0  
                   __ptext2 122D                     __ptext3 13C9                     __ptext4 156D  
                   __ptext5 1518                     __ptext6 0AC8                     __ptext7 0A65  
                   __ptext8 0A02                     __ptext9 099F           __end_of_intt0_1ms 12AF  
              writeEUSART@d 0047                     _initLCD 1458                     _master1 0B2B  
          ___awmod@dividend 0049                     _putFIFO 132A                     main@aux 0068  
                   clrloop0 11B0       __end_of_convAsciToHex 14CB        end_of_initialization 0021  
         __end_of_serialOut 122D        __size_of_textLoading 00FD                     gotoxy@x 004E  
                   gotoxy@y 004B                  ??_interrup 0076       __end_of_convHexToAnsc 13F6  
         __end_of_textCMdat 12EA           __end_of_textCMpar 130A                     putLCD@c 0048  
           ___lldiv@divisor 0047             ___lldiv@counter 0054           bordaSubidaB1@resp 0048  
                ??_serialIn 0047                   _RCSTAbits 0018                __pstringtext 0500  
         __end_of_transmite 13C9                  ??_statusT0 0049                  ??_writeLCD 0052  
                 _PORTBbits 0006                   _PORTCbits 0007                  _textConfig 130A  
                 _TRISAbits 0085                   _TRISCbits 0087            _textSelectionCLP 1518  
          _textSelectionEST 156D                 ?_initEUSART 0055                   _TXSTAbits 0098  
               ?_readEUSART 0075                setT0limite@c 0047                 ?_initSerial 0075  
               ?_initTimer0 0075              __end_of___bmul 11E6              __end_of_cmdLCD 161C  
      __size_of_writeEUSART 0006                 _BAUDCTLbits 0187              __end_of_initBT 11C2  
            __end_of_recebe 11D3              __end_of_gotoxy 1214              __end_of_putLCD 1426  
            __end_of_slave1 0D30         start_initialization 0015        __size_of_writeString 0029  
bordaSubidaB1@estadoAtualB1 0049            ??_statusT0limite 0049                    ??___bmul 0048  
                  ??_cmdLCD 0047                    ??_initBT 0047                    ??_recebe 0056  
                  ??_gotoxy 004C                    ??_putLCD 0047                    ??_slave1 005F  
               ?_textConfig 0075         __size_of_initEUSART 005B         __size_of_readEUSART 0004  
               __pbssCOMMON 0070                   ___latbits 0002               __pcstackBANK0 0047  
       __size_of_initSerial 0016         __size_of_initTimer0 001B               ??_setT0limite 0049  
                 cmdLCD@cmd 0049           __size_of_interrup 0016                   _easterEgg 0E2D  
                  ?___awdiv 0049                    ?___awmod 0047                    ?___lldiv 0047  
         __size_of_serialIn 0019                    ?_getFIFO 0075     __size_of_textSelection1 0063  
   __size_of_textSelection2 0063     __size_of_textSelection3 0063     __size_of_textSelection4 0063  
   __size_of_textSelection5 0063     __size_of_textSelection6 0063     __size_of_textSelection7 0063  
   __size_of_textSelection8 0063                   __pstrings 1000           __size_of_statusT0 0007  
                  ?_initLCD 0075                    ?_master1 0075           __size_of_writeLCD 0032  
                  ?_putFIFO 0075                   _intt0_1ms 1294                 writeLCD@ptr 0050  
               __size_of_B1 0005                 __size_of_B2 0007                 __size_of_B3 0005  
                serialOut@d 0048                  serialOut@i 0049           interrupt_function 0004  
                 clear_ram0 11AF         __size_of_textConfig 0020                    _PIE1bits 008C  
       __end_of_setT0limite 11A1                   _serialOut 1214                   _textCMdat 12CA  
                 _textCMpar 12EA                  ?_easterEgg 0075                    _SPBRbits 0099  
    __size_of_bordaSubidaB1 001A      __size_of_bordaSubidaB2 001A      __size_of_bordaSubidaB3 001A  
  __end_of_textSelectionCLP 156D    __end_of_textSelectionEST 15C2                 __stringbase 1012  
        initEUSART@baudRate 0055                   _transmite 13A0                putLCD@nibble 0049  
                ?_intt0_1ms 0075               ??_textLoading 0054            convAsciToHex@dez 0055  
              ??_initEUSART 0059            convAsciToHex@uni 0054                ??_readEUSART 0053  
                ?_serialOut 0075            _estadoAnteriorB1 0045            _estadoAnteriorB2 0044  
          _estadoAnteriorB3 0043                  ?_textCMdat 0075                ??_initSerial 004A  
              ??_initTimer0 0049                  ?_textCMpar 0075            __size_of___awdiv 005B  
          __size_of___awmod 004D            __size_of___lldiv 0060      __size_of_convAsciToHex 003F  
          __size_of_getFIFO 0029          __end_of__stringtab 1012                  ?_transmite 0075  
          __size_of_initLCD 0034          __end_of_initEUSART 1677      __size_of_convHexToAnsc 002D  
          __size_of_master1 00A1          __end_of_readEUSART 08E1                    _fifoHead 0070  
          __size_of_putFIFO 0024                    _fifoTail 0042                    __ptext10 093C  
                  __ptext11 179D                    __ptext20 12CA                    __ptext12 173A  
                  __ptext21 0C76                    __ptext13 16D7                    __ptext30 118D  
                  __ptext22 11C2                    __ptext14 11A8                    __ptext31 161C  
                  __ptext23 148C                    __ptext15 11A1                    __ptext40 0E2D  
                  __ptext32 1677                    __ptext24 08DD                    __ptext16 08E1  
                  __ptext41 1426                    __ptext33 0BCC                    __ptext25 1377  
                  __ptext17 0D30                    __ptext50 1246                    __ptext42 13F6  
                  __ptext34 12AF                    __ptext26 132A                    __ptext18 130A  
                  __ptext51 1183                    __ptext43 11FC                    __ptext35 119A  
                  __ptext27 14CB                    __ptext19 12EA                    __ptext52 11E6  
                  __ptext44 15C2                    __ptext36 04E9                    __ptext28 0B2B  
                  __ptext53 1294                    __ptext45 11D3                    __ptext37 1214  
                  __ptext29 134E                    __ptext46 127A                    __ptext38 1458  
                  __ptext47 1188                    __ptext39 11B7                    __ptext48 1260  
                  __ptext49 1193           __CFG_BOR4V$BOR40V 0000                serialIn@dado 0048  
        __end_of_initSerial 04FF          __end_of_initTimer0 12CA               _bordaSubidaB1 1246  
             _bordaSubidaB2 1260               _bordaSubidaB3 127A                 _setT0limite 119A  
             __size_of_main 04C4               __size_of_logo 00AA                   serialIn@i 0049  
                  _interrup 11E6         __end_of_textLoading 0E2D                    _serialIn 122D  
             ??_writeEUSART 0047                 ??_easterEgg 0054  bordaSubidaB2@estadoAtualB2 004A  
                  _statusT0 11A1              _textSelection1 16D7              _textSelection2 173A  
            _textSelection3 179D              _textSelection4 093C              _textSelection5 099F  
            _textSelection6 0A02              _textSelection7 0A65              _textSelection8 0AC8  
                  _writeLCD 1426                ??_textConfig 0054               ??_writeString 004A  
                _INTCONbits 000B                 ??_intt0_1ms 0075              ?_bordaSubidaB1 0075  
            ?_bordaSubidaB2 0075              ?_bordaSubidaB3 0075                    intlevel1 0000  
             _convAsciToHex 148C            ___lldiv@dividend 004B                    putFIFO@c 0052  
                 writeLCD@x 0053                   writeLCD@y 004F          bordaSubidaB2@resp1 0049  
        __end_of_textConfig 132A          bordaSubidaB3@resp2 0048                   stringcode 100A  
             _convHexToAnsc 13C9                 ??_serialOut 0047                 ??_textCMdat 0054  
    __end_of_textSelection1 173A      __end_of_textSelection2 179D      __end_of_textSelection3 1800  
    __end_of_textSelection4 099F      __end_of_textSelection5 0A02      __end_of_textSelection6 0A65  
    __end_of_textSelection7 0AC8      __end_of_textSelection8 0B2B                 ??_textCMpar 0054  
       __end_of_writeEUSART 1193                 ??_transmite 004B            ___lldiv@quotient 0050  
                  stringtab 1000              ?_convAsciToHex 0075         __end_of_writeString 1377  
               _textLoading 0D30              ?_convHexToAnsc 0075  
